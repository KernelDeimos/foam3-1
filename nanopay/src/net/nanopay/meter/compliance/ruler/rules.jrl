p({"class":"foam.nanos.ruler.Rule","id":1000,"name":"Canadian Sanctions","priority":100,"ruleGroup":"signup","documentation":"Check user and business against Canadian Sanctions List","daoKey":"localUserDAO","operation":0,"after":false,"action":{"class":"net.nanopay.meter.compliance.ruler.CanadianSanctionValidator"},"enabled":false,"saveHistory":true})
p({"class":"foam.nanos.ruler.Rule","id":1010,"name":"Request signing officers compliance","priority":50,"ruleGroup":"onboarding","documentation":"Marks signing officers of a business as compliance requested.","daoKey":"localUserDAO","operation":3,"after":true,"predicate":{"class":"net.nanopay.meter.compliance.ruler.predicate.BusinessOnboarding"},"asyncAction":{"class":"net.nanopay.meter.compliance.ruler.RequestSigningOfficersCompliance"},"enabled":false,"saveHistory":true})
p({"class":"foam.nanos.ruler.Rule","id":1011,"name":"Request beneficial owners compliance","priority":50,"ruleGroup":"onboarding","documentation":"Marks beneficial owners of a business as compliance requested.","daoKey":"localUserDAO","operation":3,"after":true,"predicate":{"class":"net.nanopay.meter.compliance.ruler.predicate.BusinessOnboarding"},"asyncAction":{"class":"net.nanopay.meter.compliance.ruler.RequestBeneficialOwnersCompliance"},"enabled":false,"saveHistory":true})
p({"class":"foam.nanos.ruler.Rule","id":1100,"name":"Securefact SIDni","priority":90,"ruleGroup":"onboarding","documentation":"Check user via Securefact SIDni API","daoKey":"localUserDAO","operation":3,"after":false,"predicate":{"class":"net.nanopay.meter.compliance.ruler.predicate.CanadianUserOnboarded"},"asyncAction":{"class":"net.nanopay.meter.compliance.ruler.SecurefactSIDniValidator"},"enabled":false,"saveHistory":true})
p({"class":"foam.nanos.ruler.Rule","id":1101,"name":"Securefact LEV","priority":90,"ruleGroup":"onboarding","documentation":"Check business via Securefact LEV API","daoKey":"localUserDAO","operation":3,"after":false,"predicate":{"class":"net.nanopay.meter.compliance.ruler.predicate.CanadianBusinessOnboarded"},"asyncAction":{"class":"net.nanopay.meter.compliance.ruler.SecurefactLEVValidator"},"enabled":false,"saveHistory":true})
p({"class":"foam.nanos.ruler.Rule","id":1200,"name":"IdentityMind Consumer KYC - Signup","priority":100,"ruleGroup":"compliance","documentation":"On user signup, check user via IdentityMind Consumer KYC stage 1.","daoKey":"localUserDAO","operation":0,"after":true,"predicate":{"class":"net.nanopay.meter.compliance.ruler.predicate.AbliiSignup"},"asyncAction":{"class":"net.nanopay.meter.compliance.identityMind.ConsumerKYCValidator","stage":1},"enabled":false,"saveHistory":true})
p({"class":"foam.nanos.ruler.Rule","id":1210,"name":"IdentityMind Entity Login Record","priority":100,"ruleGroup":"compliance","documentation":"Check logged in user via IdentityMind Entity Login Record.","daoKey":"loginAttemptDAO","operation":0,"after":true,"predicate":{"class":"net.nanopay.meter.compliance.ruler.predicate.LoginSuccess"},"asyncAction":{"class":"net.nanopay.meter.compliance.identityMind.EntityLoginValidator"},"enabled":false,"saveHistory":true})
p({"class":"foam.nanos.ruler.Rule","id":1220,"name":"IdentityMind Merchant KYC","priority":100,"ruleGroup":"compliance","documentation":"Check business via IdentityMind Merchant KYC.","daoKey":"localUserDAO","operation":3,"after":true,"predicate":{"class":"net.nanopay.meter.compliance.ruler.predicate.BusinessComplianceRequested"},"asyncAction":{"class":"net.nanopay.meter.compliance.identityMind.MerchantKYCValidator"},"enabled":false,"saveHistory":true})
p({"class":"foam.nanos.ruler.Rule","id":1230,"name":"IdentityMind Consumer KYC - Signing officer user updated","priority":100,"ruleGroup":"compliance","documentation":"Check user compliance via IdentityMind Consumer KYC stage 2 when compliance is requested.","daoKey":"localUserDAO","operation":3,"after":true,"predicate":{"class":"net.nanopay.meter.compliance.ruler.predicate.UserComplianceRequested"},"asyncAction":{"class":"net.nanopay.meter.compliance.identityMind.ConsumerKYCValidator","stage":2},"enabled":false,"saveHistory":true})
p({"class":"foam.nanos.ruler.Rule","id":1231,"name":"IdentityMind Consumer KYC - Beneficial owner","priority":100,"ruleGroup":"compliance","documentation":"Check beneficial owner via IdentityMind Consumer KYC stage 2.","daoKey":"beneficialOwnerDAO","operation":3,"after":true,"predicate":{"class":"net.nanopay.meter.compliance.ruler.predicate.BeneficialOwnerComplianceRequested"},"asyncAction":{"class":"net.nanopay.meter.compliance.identityMind.ConsumerKYCValidator","stage":2},"enabled":false,"saveHistory":true})
p({"class":"foam.nanos.ruler.Rule","id":1240,"name":"IdentityMind transfer transaction","priority":100,"ruleGroup":"compliance","documentation":"Check bank to bank transaction via IdentityMind","daoKey":"localTransactionDAO","operation":0,"after":false,"predicate":{"class":"net.nanopay.meter.compliance.ruler.predicate.B2BTransaction"},"action":{"class":"net.nanopay.meter.compliance.identityMind.B2BTransactionValidator"},"enabled":false,"saveHistory":true})
