#!/bin/bash
#
# NANOPAY pre-commit

# Called by "git commit" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message if
# it wants to stop the commit.
#
# To enable this hook, rename this file to "pre-commit".
if git rev-parse --verify HEAD >/dev/null 2>&1
then
	against=HEAD
else
	# Initial commit: diff against an empty tree object
	against=4b825dc642cb6eb9a060e54bf8d69288fbee4904
fi

# Redirect output to stderr.
#exec 1>&2

function test_branchname {
    # Enforce NANOPAY branch naming conventions
    branch_name=`git rev-parse --abbrev-ref HEAD`
    # ignore if commiting during REBASE
    if [[ "$branch_name" =~ "HEAD" ]]; then
        return;
    fi
    # merge state
    merging=`git rev-parse -q --verify MERGE_HEAD`
    if [[ -n "$merging" ]]; then
        return;
    fi

    REGEX='^([fh]|[b]/[sd])/NP-[0-9]{1,}/[a-zA-Z0-9_\-]*$'
    if [[ ! "$branch_name" =~ $REGEX ]]; then
	cat <<\EOF
Error: Invalid branch name.

Must follow convention x/[y/]NP-####/Title
where x is one of b|f|h and optional y is one of d|s when x is b.
See guidelines at https://github.com/nanoPayinc/NANOPAY/wiki/Branching-&-Versioning

EOF
        exit 1
    fi
}

function test_filename {
    # If you want to allow non-ASCII filenames set this variable to true.
    allownonascii=$(git config --bool hooks.allownonascii)

    # Cross platform projects tend to avoid non-ASCII filenames; prevent
    # them from being added to the repository. We exploit the fact that the
    # printable range starts at the space character and ends with tilde.
    if [ "$allownonascii" != "true" ] &&
	   # Note that the use of brackets around a tr range is ok here, (it's
	   # even required, for portability to Solaris 10's /usr/bin/tr), since
	   # the square bracket bytes happen to fall in the designated range.
	   test $(git diff --cached --name-only --diff-filter=A -z $against |
	              LC_ALL=C tr -d '[ -~]\0' | wc -c) != 0
    then
	cat <<\EOF
Error: Attempt to add a non-ASCII file name.

This can cause problems if you want to work with people on other platforms.

To be portable it is advisable to rename the file.

If you know what you are doing you can disable this check using:

  git config hooks.allownonascii true
EOF
	exit 1
    fi
}

function test_codereview {
    if [ -f ".githooks/code_review" ]; then
        ./.githooks/code_review
        return_value=$?
        if [ $return_value -eq 1 ]; then
            exit 1;
        else
            printf "code_review OK\n"
        fi
    fi
}

# Call user supplied pre-commit
function test_local {
    if [ -f ".githooks/pre-commit.local" ]; then
        ./.githooks/pre-commit.local
        return_value=$?
        if [ $return_value -eq 1 ]; then
            exit 1;
        fi
    fi
}

test_branchname
test_filename
test_codereview
test_local
