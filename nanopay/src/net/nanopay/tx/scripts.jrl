p({
  "class":"foam.nanos.script.Script",
  "id":"benchmarkTransactionCreation",
  "code":`
    import foam.nanos.bench.*;
    import net.nanopay.bench.*;
    lc = x.get("logLevelFilterLogger");
    lc.setLogInfo(true);
    savedDebug = lc.getLogDebug();
    lc.setLogDebug(false);
    x = x.put("pmLogger", null);
    b = new TransactionBenchmark();
    b.setQuoteTransactions(false);
    b.setDisableRules(true);
    builder = new BenchmarkRunner.Builder(x)
      .setInvocationCount(10000)
      .setRunPerThread(true)
      .setBenchmark(b);
    runner = builder.build();
    runner.execute(x);
    print("done");
    print(runner.getResult());
    l = x.get("logger");
    lc.setLogInfo(true);
    lc.setLogDebug(savedDebug);
    l.info(new Object[] {runner.getResult()});
  `,
  "output":""
})

p({
  "class":"foam.nanos.script.Script",
  "id":"benchmarkTransactionCreationClient",
  "server":false,
  "clusterable":false,
  "code":"""
var domain = 'localhost';
var port = 8080;
var sessionId = 'e6a6f1d4-94dd-82db-ecd8-f3f4ea9ef73';
//var of = net.nanopay.tx.model.Transaction;
//var serviceName = 'transactionDAO';
var of = foam.nanos.auth.Country;
var serviceName = 'countryDAO';
var box = foam.box.HTTPBox.create({ url: 'http://'+domain+':'+port+'/service/'+serviceName }, x);
box = foam.box.TimeoutBox.create({ delegate: box }, x);
box = foam.box.SessionClientBox.create({ sessionID: sessionId, delegate: box }, x);
var dao = foam.dao.EasyDAO.create({
    daoType: 'CLIENT',
    of: of,
    serverBox: box
}, x);
// var delegate = dao;
// while ( delegate ) {
//     console.log("delegate: "+delegate.cls_.id);
//     delegate = delegate.delegate;
// }
dao.select(foam.mlang.sink.Count.create()).then(function(c) {
    console.log("count: "+c.value);
}).catch(function(e) {
    console.error(e.message);
});

//dao.select(foam.dao.ArraySink.create()).then(function(s) {
//    var a = s.array;
//    for ( var i = 0 ; i < a.length; i++ ) {
//        console.log('t['+i+']: '+a[i]);
//    }
//}).catch(function(e) {
//    console.error(e.message);
//});
//dao.find("a").then(function(result) {
//    print("t: "+result);
//});
  """
});
