p({
    "class":"foam.nanos.ruler.Rule",
    "id":" Invoice Completed notification rule",
    "priority":100,
    "ruleGroup":"InvoiceNotification",
    "documentation":"Sends notification when payment is Completed",
    "daoKey":"invoiceDAO",
    "operation":1,
    "after":true,
    "predicate": {
      "class": "net.nanopay.invoice.ruler.IsCompletePayment"
    },
    "action":{
      "class":"net.nanopay.invoice.ruler.CompleteInvoiceNotification"
    },
    "enabled":true,
    "saveHistory":true
})

p({
    "class":"foam.nanos.ruler.Rule",
    "id":"Request payment notification rule",
    "priority":100,
    "ruleGroup":"InvoiceNotification",
    "documentation":"Sends notification when request payment is made.",
    "daoKey":"invoiceDAO",
        "operation":0,
    "after":true,
    "action":{
        "class":"net.nanopay.invoice.ruler.RequestPaymentNotificationRule"
    },
    "enabled":true,
    "saveHistory":true
})

p({
  "class": "foam.nanos.ruler.Rule",
  "id": "Send invoice voided email to payer",
  "priority": 100,
  "ruleGroup": "InvoiceNotification",
  "documentation": "Send invoice voided email to payer",
  "daoKey": "invoiceDAO",
  "operation": 3,
  "after": true,
  "predicate": {
    "class":"foam.mlang.predicate.And",
    "args": [
      {
        "class": "foam.nanos.ruler.predicate.PropertyEQValue",
        "propName": "paymentMethod",
        "propValue": {"class": "net.nanopay.invoice.model.PaymentStatus", "ordinal": 3}
      },
      {
        "class": "foam.mlang.predicate.Not",
        "arg1": {
          "class": "foam.nanos.ruler.predicate.PropertyEQProperty",
          "prop1": "payerId",
          "prop2": "createdBy"
        }
      }
    ]
  },
  "action": {
    "class": "net.nanopay.invoice.ruler.InvoiceVoidEmailRule"
  },
  "enabled":true,
  "saveHistory":true
})
