p({"class":"foam.nanos.test.Test","passed":5,"failed":0,"id":"net.nanopay.tx.TransactionAdapterDAOTest","enabled":true,"description":"","lastRun":"2018-08-04T02:44:15.243Z","lastDuration":48,"server":true,"status":1,"code":"userDAO        = x.get(\"userDAO\");\naccountDAO     = x.get(\"accountDAO\");\ninstitutionDAO = x.get(\"institutionDAO\");\ntransactionDAO = x.get(\"localTransactionDAO\");\nbalanceDAO     = x.get(\"balanceDAO\");\n\nRandom ran = new Random();\n\n//Create a Test User\nuser = new foam.nanos.auth.User();\nuser.setId(Long.valueOf(950));\nuser.setGroup(\"business\");\nuser.setOrganization(\"Balony\");\nuser.setEmailVerified(true);\nuser.setFirstName(\"test1\");\nuser.setLastName(\"TEST\");\nuser.setEmail(\"test1@t.com\");\nuserDAO.put(user);\n\n//Create a Test User\nuser = new foam.nanos.auth.User();\nuser.setId(Long.valueOf(955));\nuser.setGroup(\"business\");\nuser.setOrganization(\"Balony\");\nuser.setEmailVerified(true);\nuser.setFirstName(\"test2\");\nuser.setLastName(\"TEST\");\nuser.setEmail(\"test2@t.com\");\nuserDAO.put(user);\n\n//Grab Users for test\ntestDigital1        =(foam.nanos.auth.User) userDAO.find(950);\ntestDigital2        =(foam.nanos.auth.User) userDAO.find(955);\nadmin               =(foam.nanos.auth.User) userDAO.find(1350);\n\n//Grab Digital Accounts for test\nuserDigitalAccount  = net.nanopay.account.DigitalAccount.findDefault(x,admin,\"CAD\");\ntestDigitalAccount1 = net.nanopay.account.DigitalAccount.findDefault(x,testDigital1,\"CAD\");\ntestDigitalAccount2 = net.nanopay.account.DigitalAccount.findDefault(x,testDigital2,\"CAD\");\n\n//Create a bank account to User 1350\ncaaccount1 = new net.nanopay.bank.CABankAccount();\ncaaccount1.setAccountNumber(\"\"+(ran.nextInt(1000000)+10000));\ncaaccount1.setInstitution(Long.valueOf(ran.nextInt(99)+1));\ncaaccount1.setOwner(1350);\ncaaccount1.setName(\"\"+ran.nextInt(1000));\ncaaccount1.setStatus(net.nanopay.bank.BankAccountStatus.VERIFIED);\ncaaccount1.setDenomination(\"CAD\");\ncaaccount1.setId(1351);\ncaaccount1 = accountDAO.put(caaccount1);\n\n\ntransaction = new net.nanopay.tx.model.Transaction();\ntransaction.setDestinationAccount(userDigitalAccount.getId());\ntransaction.setSourceAccount(caaccount1.getId());\ntransaction.setAmount(300000);\ntransaction.setType(net.nanopay.tx.TransactionType.CASHIN);\ntransaction.setStatus(net.nanopay.tx.model.TransactionStatus.COMPLETED);\ntransaction = transactionDAO.put(transaction);\n\ntest(transaction instanceof net.nanopay.tx.tp.alterna.AlternaTransaction, \"CABankAccount/DigitalAccount -> AlternaTransaction\");\n\n//Create a bank account to User 955\ncaaccount2 = new net.nanopay.bank.CABankAccount();\ncaaccount2.setAccountNumber(\"\"+(ran.nextInt(1000000)+10000));\ncaaccount2.setInstitution(Long.valueOf(ran.nextInt(99)+1));\ncaaccount2.setOwner(955);\ncaaccount2.setName(\"\"+ran.nextInt(1000));\ncaaccount2.setStatus(net.nanopay.bank.BankAccountStatus.VERIFIED);\ncaaccount2.setDenomination(\"CAD\");\ncaaccount2 = accountDAO.put(caaccount2);\n\ntransaction = new net.nanopay.tx.model.Transaction();\ntransaction.setDestinationAccount(caaccount2.getId());\ntransaction.setSourceAccount(caaccount1.getId());\ntransaction.setAmount(300);\n//transaction.setType(net.nanopay.tx.TransactionType.CASHIN);\n//transaction.setStatus(net.nanopay.tx.model.TransactionStatus.COMPLETED);\ntransaction = transactionDAO.put(transaction);\n\ntest(transaction instanceof net.nanopay.tx.CompositeTransaction, \"CABankAccount/CABankAccount -> CompositeTransaction\");\ntransactions = transaction.transactions;\ntest(transactions.length == 2, \"CompositeTransaction transactions size 2\");\ntest(transactions[0] instanceof net.nanopay.tx.tp.alterna.AlternaTransaction, \"CompositeTransaction transactions[0] AlternaTransaction\");\n\ntransaction = new net.nanopay.tx.model.Transaction();\ntransaction.setDestinationAccount(testDigitalAccount2.getId());\ntransaction.setSourceAccount(userDigitalAccount.getId());\ntransaction.setAmount(30);\n//transaction.setType(net.nanopay.tx.TransactionType.CASHIN);\n//transaction.setStatus(net.nanopay.tx.model.TransactionStatus.COMPLETED);\ntransaction = transactionDAO.put(transaction);\n\ntest(transaction.getClass().equals(net.nanopay.tx.model.Transaction.class), \"DigitalAccount/DigitalAccount -> Transaction\");\n","output":"SUCCESS: CABankAccount/DigitalAccount -> AlternaTransaction\nSUCCESS: CABankAccount/CABankAccount -> CompositeTransaction\nSUCCESS: CompositeTransaction transactions size 2\nSUCCESS: CompositeTransaction transactions[0] AlternaTransaction\nSUCCESS: DigitalAccount/DigitalAccount -> Transaction\n","notes":""})
