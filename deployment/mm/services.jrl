//Medusa Mediate
p({
  "class":"foam.nanos.boot.NSpec",
  "name":"nSpecDAO",
  "serve":true,
  "authenticate": false,
  "serviceClass":"foam.dao.ProxyDAO",
  "client":"{\"of\":\"foam.nanos.boot.NSpec\",\"cache\":true}"
})

p({"class":"foam.nanos.boot.NSpec", "name":"tcpServer",                        "lazy":false,  "serviceClass":"foam.nanos.mrac.TCPNioServer"})
p({"class":"foam.nanos.boot.NSpec", "name":"quorumService", "lazy":false, "serviceClass":"foam.nanos.mrac.quorum.QuorumService"})
p({"class":"foam.nanos.boot.NSpec", "name":"clusterNodeDAO",                  "lazy":false,  "serve":true,  "serviceScript":"return new foam.dao.EasyDAO.Builder(x).setCluster(false).setRuler(false).setAuthorize(false).setJournalType(foam.dao.JournalType.SINGLE_JOURNAL).setJournalName(\"clusterNodes\").setGuid(true).setOf(foam.nanos.mrac.ClusterNode.getOwnClassInfo()).build();", "client":"{\"of\":\"foam.nanos.demo.DemoObject\", \"remoteListenerSupport\": false}"})
p({
  "class": "foam.nanos.boot.NSpec",
  "name": "cluster",
  "lazy": false,
  "serve": true,
  "authenticate":true,
  "serviceScript": """
    return new foam.dao.EasyDAO.Builder(x)
      .setOf(foam.nanos.mrac.ClusterServerDAO.getOwnClassInfo())
      .setInnerDAO(new foam.nanos.mrac.ClusterServerDAO.Builder(x).build())
      .setCluster(false)
      .setNullify(true)
      .setEnableInterfaceDecorators(false)
      .setRuler(false)
      .setAuthorize(false)
      .build();
  """
})
