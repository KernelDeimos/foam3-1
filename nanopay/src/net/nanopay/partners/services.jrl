p({
  "class": "foam.nanos.boot.NSpec", 
  "name": "partnerJunctionDAO", 
  "serve": true, 
  "serviceScript": 
  """
    return new foam.dao.EasyDAO.Builder(x)
      .setAuthorizer(new foam.nanos.auth.GlobalReadAuthorizer("partnerJunctionDAO"))
      .setDecorator(
        new net.nanopay.partners.AuthenticatedUserUserJunctionDAO(x, "partnerJunction", 
        new net.nanopay.auth.PublicUserInfoDAO(x, false, "yourId", "yourInfo", 
        new net.nanopay.auth.PublicUserInfoDAO(x, false, "partnerId", "partnerInfo", 
        new net.nanopay.partners.PartnerInfoDAO(x, null))))
      )
      .setJournalType(foam.dao.JournalType.SINGLE_JOURNAL)
      .setJournalName("partnerJunctions")
      .setOf(foam.nanos.auth.UserUserJunction.getOwnClassInfo())
      .build()))));
  """,
  "client": "{\"of\":\"foam.nanos.auth.UserUserJunction\", \"remoteListenerSupport\": false}"
})

p({
  "class": "foam.nanos.boot.NSpec", 
  "name": "invitationDAO",      
  "serve": true, 
  "serviceScript": 
  """
    return new foam.dao.EasyDAO.Builder(x)
      .setPm(true)
      .setSeqNo(true)
      .setDecorator(
        new net.nanopay.auth.PublicUserInfoDAO(x, false, "createdBy", "inviter",
        new net.nanopay.auth.PublicUserInfoDAO(x, false, "inviteeId", "invitee",  
        new net.nanopay.partners.AuthenticatedInvitationDAO(x, 
        new net.nanopay.partners.MakeConnectionDAO(x, 
        new net.nanopay.partners.SendInvitationDAO(x, null))))))
      .setJournalType(foam.dao.JournalType.SINGLE_JOURNAL)
      .setJournalName("invitations")
      .setOf(net.nanopay.model.Invitation.getOwnClassInfo())
      .setAuthorize(false)
      .build();
  """,
  "client": "{\"of\":\"net.nanopay.model.Invitation\"}"
})

