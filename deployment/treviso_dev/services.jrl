p({class:"foam.nanos.boot.NSpec",id:"dowjonesCredentials",service:{class:"net.nanopay.meter.compliance.dowJones.DowJonesCredentials",namespace:"18",username:"nanoAPI",password:"4ZszDP3c51Va",baseUrl:"https://djrc.api.test.dowjones.com/v1/search/"}})
p({class:"foam.nanos.boot.NSpec",id:"securefactService",service:{class:"net.nanopay.meter.compliance.secureFact.SecurefactService",sidniUrl:"https://qa2-sidni.securefact.com/rest/v3/verifyIndividual",sidniApiKey:"NTc5MDk0MDc5OTUyNzMxMDYwNzg1NDgxMTQ3OTkwNDI4MDkwMzY4",levUrl:"https://lev3uat.securefact.com/rest/v1/lev/search",levApiKey:"ODA1NTMyNjA0MTAyNDg2NzIxMzg4NTk0MTQ4ODg0NTI1MDg4NzY4"}})
p({class:"foam.nanos.boot.NSpec",id:"identityMindService",service:{class:"net.nanopay.meter.compliance.identityMind.IdentityMindService",baseUrl:"https://staging.identitymind.com/im",apiUser:"nanopay",apiKey:"80c264cb0c381fbc995763982b35e965f37347eb",hashingSalt:"54l73D47"}})
p({
  "class":"foam.nanos.boot.NSpec",
  "name":"trevisoService",
  "lazy":false,
  "serve":true,
  "serviceScript":"""
    import net.nanopay.country.br.exchange.*;

    // Set exchange limit ($20000.00 USD)
    EXCHANGE_LIMIT = 2000000L;

    mockExchange = new ExchangeClientMock(x);
    mockExchange.getStubSearchTitular().setSearchTitularResult(
      new ResponseTitular.Builder(x)
        .setServiceStatus(new ServiceStatus.Builder(x).setCODRETORNO(0).build())
        .setTitular(new Titular.Builder(x).setLIMITEOP(EXCHANGE_LIMIT).build())
        .build()
    );
    return new net.nanopay.partner.treviso.TrevisoService(x, x.get("trevisoAPIService"), mockExchange);
  """
})
p({
  "class":"foam.nanos.boot.NSpec",
  "name":"exchange",
  "lazy":false,
  "serve":true,
  "serviceScript":"""
    import net.nanopay.country.br.exchange.*;

    // Set exchange limit ($20000.00 USD)
    EXCHANGE_LIMIT = 2000000L;

    mockExchange = new ExchangeClientMock(x);
    mockExchange.getStubSearchTitular().setSearchTitularResult(
      new ResponseTitular.Builder(x)
        .setServiceStatus(new ServiceStatus.Builder(x).setCODRETORNO(0).build())
        .setTitular(new Titular.Builder(x).setLIMITEOP(EXCHANGE_LIMIT).build())
        .build()
    );
    return mockExchange;
  """
})

p({
  "class":"foam.nanos.boot.NSpec",
  "name":"SoaWebServiceCredientials",
  "lazy":false,
  "service": {
    "class":"net.nanopay.partner.soawebservices.SoaCredenciais",
    "Email":"suporte@trevisocc.com.br",
    "Senha":"auFHK3STb",
    "url":"http://www.soawebservices.com.br/restservices/producao/cdc/"
  }
})

p({
  "class":"foam.nanos.boot.NSpec",
  "name":"soaWebService",
  "lazy":false,
  "serve":true,
  "serviceScript":"""
    return new net.nanopay.partner.soawebservices.SoaWebServiceClientMock(x);
  """
})
