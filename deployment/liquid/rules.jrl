// disable rules
p({"class":"foam.nanos.ruler.Rule","enabled":false,"id":"68afcf0c-c718-98f8-0841-75e97a3ad16d119","name":"Pending FX Rate Transactions"})                   // Kotak
p({"class":"foam.nanos.ruler.Rule","enabled":false,"id":"68afcf0c-c718-98f8-0841-75e97a3ad16d120","name":"Getting FX Rate for Transactions"})               // Kotak
p({"class":"foam.nanos.ruler.Rule","enabled":false,"id":"68afcf0c-c718-98f8-0841-75e97a3ad16d121","name":"The Jackie Rule1"})                               // Compliance
p({"class":"foam.nanos.ruler.Rule","enabled":false,"id":"68afcf0c-c718-98f8-0841-75e97a3ad16d122","name":"The Jackie Rule2"})                               // Compliance
p({"class":"foam.nanos.ruler.Rule","enabled":false,"id":"68afcf0c-c718-98f8-0841-75e97a3ad16d123","name":"DebtDestroyer"})                                  // Ablii FastPay
p({"class":"foam.nanos.ruler.Rule","enabled":false,"id":"68afcf0c-c718-98f8-0841-75e97a3ad16d124","name":"SwitchToSlowPay"})                                // Ablii FastPay
p({"class":"foam.nanos.ruler.Rule","enabled":false,"id":"68afcf0c-c718-98f8-0841-75e97a3ad16d125","name":"Prune Cico Approval Cleanup"})                    // Compliance
p({"class":"foam.nanos.ruler.Rule","enabled":false,"id":"68afcf0c-c718-98f8-0841-75e97a3ad16d126","name":"ReverseCashIn"})                                  // Tx Processing
p({"class":"foam.nanos.ruler.Rule","enabled":false,"id":"68afcf0c-c718-98f8-0841-75e97a3ad16d127","name":"ReverseCashOut"})                                 // Tx Processing
p({"class":"foam.nanos.ruler.Rule","enabled":false,"id":"68afcf0c-c718-98f8-0841-75e97a3ad16d128","name":"Quote Transaction Based on Status"})              // Tx Processing
p({"class":"foam.nanos.ruler.Rule","enabled":false,"id":"68afcf0c-c718-98f8-0841-75e97a3ad16d129","name":"Ablii Completed Transaction Notification"})       // Ablii Transaction
p({"class":"foam.nanos.ruler.Rule","enabled":false,"id":"68afcf0c-c718-98f8-0841-75e97a3ad16d130","name":"Ablii FX Completed Transaction Notification"})    // Ablii Transaction
p({"class":"foam.nanos.ruler.Rule","enabled":false,"id":"68afcf0c-c718-98f8-0841-75e97a3ad16d131","name":"Declined Compliance Transaction Notification"})   // Compliance
p({"class":"foam.nanos.ruler.Rule","enabled":false,"id":"68afcf0c-c718-98f8-0841-75e97a3ad16d133","name":"AFEX Beneficiary Compliance Transaction"})        // AFEX
p({"class":"foam.nanos.ruler.Rule","enabled":false,"id":"68afcf0c-c718-98f8-0841-75e97a3ad16d134","name":"Transaction Final Compliance Rule"})              // Compliance
p({"class":"foam.nanos.ruler.Rule","enabled":false,"id":"68afcf0c-c718-98f8-0841-75e97a3ad16d135","name":"IdentityMind transfer transaction"})              // Compliance
p({"class":"foam.nanos.ruler.Rule","enabled":false,"id":"68afcf0c-c718-98f8-0841-75e97a3ad16d136","name":"Clear transaction approval requests"})            // Compliance
p({"class":"foam.nanos.ruler.Rule","enabled":false,"id":"68afcf0c-c718-98f8-0841-75e97a3ad16d137","name":"Compliance transaction approval"})                // Compliance
p({"class":"foam.nanos.ruler.Rule","enabled":false,"id":"68afcf0c-c718-98f8-0841-75e97a3ad16d138","name":"Create Expedite Aproval Request"})                // Compliance
p({"class":"foam.nanos.ruler.Rule","enabled":false,"id":"68afcf0c-c718-98f8-0841-75e97a3ad16d139","name":"Ablii Completed Transaction Notification"})
p({"class":"foam.nanos.ruler.Rule","enabled":false,"id":"68afcf0c-c718-98f8-0841-75e97a3ad16d140","name":"Ablii FX Completed Transaction Notification"})
p({"class":"foam.nanos.ruler.Rule","enabled":false,"id":"68afcf0c-c718-98f8-0841-75e97a3ad16d141","name":"Declined Cash In Transaction Notification"})
p({"class":"foam.nanos.ruler.Rule","enabled":false,"id":"68afcf0c-c718-98f8-0841-75e97a3ad16d142","name":"Declined Verification Transaction Notification"})
p({"class":"foam.nanos.ruler.Rule","enabled":false,"id":"68afcf0c-c718-98f8-0841-75e97a3ad16d143","name":"Declined Compliance Transaction Notification"})
p({"class":"foam.nanos.ruler.Rule","enabled":false,"id":"68afcf0c-c718-98f8-0841-75e97a3ad16d144","name":"Send email when the micro deposit succeeded"})
p({"class":"foam.nanos.ruler.Rule","enabled":false,"id":"68afcf0c-c718-98f8-0841-75e97a3ad16d145","name":"Send notification to account owner when account has been added."})

// enable rules
p({"class":"foam.nanos.ruler.Rule","enabled":true,"id":"68afcf0c-c718-98f8-0841-75e97a3ad16d146","name":"Proper Status after Pause, Rule"})                 // Parent Pending Complete
p({"class":"foam.nanos.ruler.Rule","enabled":true,"id":"68afcf0c-c718-98f8-0841-75e97a3ad16d147","name":"Set Approved By"})                                 // Invoice rule
p({"class":"foam.nanos.ruler.Rule","enabled":true,"id":"68afcf0c-c718-98f8-0841-75e97a3ad16d148","name":"Modify Cico Status"})                              // Compliance
p({"class":"foam.nanos.ruler.Rule","enabled":true,"id":"68afcf0c-c718-98f8-0841-75e97a3ad16d149","name":"Create Expedite Aproval Request"})                 // Compliance
p({"class":"foam.nanos.ruler.Rule","enabled":true,"id":"68afcf0c-c718-98f8-0841-75e97a3ad16d150","name":"Account Liquification"})                           // Liquidity Settings
p({"class":"foam.nanos.ruler.Rule","enabled":true,"id":"68afcf0c-c718-98f8-0841-75e97a3ad16d151","name":"observeStatus"})                                   // Tx Processing
p({"class":"foam.nanos.ruler.Rule","enabled":true,"id":"68afcf0c-c718-98f8-0841-75e97a3ad16d152","name":"Declined Cash In Transaction Notification"})       // Tx Processing
p({"class":"foam.nanos.ruler.Rule","enabled":true,"id":"68afcf0c-c718-98f8-0841-75e97a3ad16d153","name":"Declined Verification Transaction Notification"})  // Tx Processing
p({"class":"foam.nanos.ruler.Rule","enabled":true,"id":"68afcf0c-c718-98f8-0841-75e97a3ad16d154","name":"statusHistory Update Rule"})                       // Tx Processing
p({"class":"foam.nanos.ruler.Rule","enabled":true,"id":"68afcf0c-c718-98f8-0841-75e97a3ad16d155","name":"Reset transaction lastModified/By properties"})    // Tx Processing
p({"class":"foam.nanos.ruler.Rule","enabled":true,"id":"68afcf0c-c718-98f8-0841-75e97a3ad16d156","name":"Estimate Transaction completionDate"})             // Tx Processing

p({
  "class":"foam.nanos.ruler.Rule",
  "id":"68afcf0c-c718-98f8-0841-75e97a3ad16d19",
  "enabled":false,
  "saveHistory":true
})

// transaction auto approval
p({"class":"foam.nanos.ruler.Rule","id":"68afcf0c-c718-98f8-0841-75e97a3ad16d161","name":"Transaction Auto-Approval","enabled":false,"lifecycleState":1})

p({
  "class":"foam.nanos.ruler.Rule",
  "id":"68afcf0c-c718-98f8-0841-75e97a3ad16d162",
  "name":"Create UserCapabilityJunction on RoleAssignment Approval",
  "priority": 100,
  "enabled":true,
  "ruleGroup": "liquid",
  "documentation": "Create ucj on roleassignment approval",
  "daoKey": "localRoleAssignmentDAO",
  "operation": 3,
  "after": true,
  "predicate":{
    "class":"net.nanopay.liquidity.crunch.ApprovedRoleAssignmentPredicate",
  },
  "action" : {
    "class": "net.nanopay.liquidity.crunch.CreateUserCapabilityJunctionOnRequestApproval"
  },
  "saveHistory": true,
  "lifecycleState":1
})

p({
  "class":"foam.nanos.ruler.Rule",
  "id":"68afcf0c-c718-98f8-0841-75e97a3ad16d163","name":"Logout Users on RoleAssignment Approval",
  "priority": 110,
  "enabled":true,
  "ruleGroup": "liquid",
  "documentation": "Logout users on roleassignment approval",
  "daoKey": "localRoleAssignmentDAO",
  "operation": 3,
  "after": true,
  "predicate":{
    "class":"net.nanopay.liquidity.crunch.ApprovedRoleAssignmentPredicate",
  },
  "action" : {
    "class": "net.nanopay.liquidity.ruler.LogoutUserOnAssignmentAction"
  },
  "saveHistory": true,
  "lifecycleState":1
})

// TODO: We need to migrate this to be triggered on every UCJ added to logout the user in the source id
p({
  "class":"foam.nanos.ruler.Rule",
  "id":"68afcf0c-c718-98f8-0841-75e97a3ad16d164","name":"Logout Users on Capability Update",
  "priority": 110,
  "enabled":true,
  "ruleGroup": "liquid",
  "documentation": "Logout users on capability update",
  "daoKey": "localCapabilityDAO",
  "operation": 1,
  "after": true,
  "predicate": {
    "class": "foam.mlang.predicate.And",
    "args":[
      {
        "class":"foam.nanos.ruler.predicate.PropertyEQValue",
        "propName":"lifecycleState",
        "propValue":{
          "class":"foam.nanos.auth.LifecycleState",
          "ordinal":1
        }
      },
      {
        "class": "foam.mlang.predicate.Not",
        "arg1": {
          "class": "foam.nanos.ruler.predicate.NewEqOld"
        }
      }
    ]
  },
  "action" : {
    "class": "net.nanopay.liquidity.ruler.LogoutUserOnCapabilityUpdateAction"
  },
  "saveHistory": true,
  "lifecycleState":1
})

p({
  "class":"foam.nanos.ruler.Rule",
  "id":"68afcf0c-c718-98f8-0841-75e97a3ad16d165","name":"Update account-based ucj data on account create",
  "priority": 100,
  "enabled":true,
  "ruleGroup": "liquid",
  "documentation": "set up newly created account in each ucj where the parent account is in the map and is cascading",
  "daoKey": "localAccountDAO",
  "operation": 0,
  "after": true,
  "action" : {
    "class": "net.nanopay.liquidity.crunch.AddAccountToUserCapabilityJunctionOnCreate"
  },
  "saveHistory": true,
  "lifecycleState":1
})

p({
  "class":"foam.nanos.ruler.Rule",
  "id":"68afcf0c-c718-98f8-0841-75e97a3ad16d166","name":"Remove junctions on user removal",
  "priority": 100,
  "enabled":true,
  "ruleGroup": "liquid",
  "documentation": "remove junctions on user removal",
  "daoKey": "localUserDAO",
  "operation": 1, 
  "after": true,
  "predicate":{
    "class":"foam.nanos.ruler.predicate.PropertyEQValue",
    "propName":"lifecycleState",
    "propValue":{
      "class":"foam.nanos.auth.LifecycleState",
      "ordinal":3
    }
  },
  "action":{ "class":"foam.nanos.crunch.RemoveJunctionsOnUserRemoval" },
  "saveHistory": true,
  "lifecycleState":1
})

p({
  "class":"foam.nanos.ruler.Rule",
  "id":"68afcf0c-c718-98f8-0841-75e97a3ad16d167","name":"Remove junctions on capability removal",
  "priority": 100,
  "enabled":true,
  "ruleGroup": "liquid",
  "documentation": "remove junctions on capability removal",
  "daoKey": "localCapabilityDAO",
  "operation": 1, 
  "after": true,
  "predicate":{
    "class":"foam.nanos.ruler.predicate.PropertyEQValue",
    "propName":"lifecycleState",
    "propValue":{
      "class":"foam.nanos.auth.LifecycleState",
      "ordinal":3
    }
  },
  "action" : { "class": "net.nanopay.liquidity.crunch.RemoveJunctionsOnCapabilityRemoval" },
  "saveHistory": true,
  "lifecycleState":1
})
p({
  "class":"foam.nanos.ruler.Rule",
  "id":"68afcf0c-c718-98f8-0841-75e97a3ad16d168","name":"Remove account-based ucj obj if no accounts granted",
  "priority": 100,
  "enabled":true,
  "ruleGroup": "liquid",
  "documentation": "remove ucj if all accounts have been revoked",
  "daoKey": "userCapabilityJunctionDAO",
  "operation": 3,
  "after": true,
  "action" : {
    "class": "net.nanopay.liquidity.crunch.RemoveAccountBasedUCJIfAccountsEmpty"
  },
  "saveHistory": true,
  "lifecycleState":1
})

p({
  "class":"foam.nanos.ruler.Rule",
  "id":"68afcf0c-c718-98f8-0841-75e97a3ad16d60",
  "name":"Set transaction lifecycleState to PENDING",
  "predicate":{
    "class":"foam.mlang.predicate.And",
    "args":[
      {
        "class":"foam.mlang.predicate.Not",
        "arg1":{
          "class":"net.nanopay.liquidity.ruler.IsSystemOrAdminUser"
        }
      },
      {
        "class":"foam.nanos.ruler.predicate.PropertyEQValue",
        "propName":"origin",
        "propValue":{
          "class":"net.nanopay.tx.OriginatingSource",
          "ordinal":0
        }
      }
    ]
  },
  "action":{
    "class":"foam.nanos.ruler.action.ChangePropertyAction",
    "propName":"lifecycleState",
    "valueExpr":{
      "class":"foam.mlang.Constant",
      "value":{
        "class":"foam.nanos.auth.LifecycleState",
        "ordinal":0
      }
    }
  },
  "enabled":true,
  "lifecycleState":1
})

// Disable auto-approval
p({
  "class":"foam.nanos.ruler.Rule",
  "id":"68afcf0c-c718-98f8-0841-75e97a3ad16d61",
  "name":"Transaction Auto-Approval",
  "enabled":false
})

p({
  "class":"foam.nanos.ruler.Rule",
  "id":"68afcf0c-c718-98f8-0841-75e97a3ad16d170","name":"L1 approval for all transactions",
  "documentation":"Add L1 approval to all liquid transactions created.",
  "ruleGroup":"txapprovals",
  "priority":100,
  "daoKey":"localTransactionDAO",
  "operation":3,
  "after":true,
  "predicate":{
    "class":"foam.nanos.ruler.predicate.PropertyEQValue",
    "propName":"lifecycleState",
    "propValue":{
      "class":"foam.nanos.auth.LifecycleState",
      "ordinal":0
    }
  },
  "asyncAction":{
    "class":"net.nanopay.liquidity.ruler.ApprovalRuleActionOnCreate",
    "approverLevel": 1
  },
  "enabled":true,
  "lifecycleState":1
})
p({
  "class":"foam.nanos.ruler.Rule",
  "id":"68afcf0c-c718-98f8-0841-75e97a3ad16d171","name":"Final transaction approval",
  "ruleGroup":"txapprovals",
  "daoKey":"localTransactionDAO",
  "operation":1,
  "after":true,
  "predicate":{
    "class":"foam.nanos.ruler.predicate.PropertyEQValue",
    "propName":"lifecycleState",
    "propValue":{
      "class":"foam.nanos.auth.LifecycleState",
      "ordinal":0
    }
  },
  "asyncAction":{
    "class":"net.nanopay.liquidity.ruler.ApprovalRuleActionOnCreate",
    "isFinal":true
  },
  "enabled":true,
  "lifecycleState":1
})

// Multi-level (L2) transaction approval rules
p({
  "class": "net.nanopay.liquidity.tx.L2TransactionApprovalRule",
  "id":"68afcf0c-c718-98f8-0841-75e97a3ad16d172","name": "L2 approval for transaction >= $85,000 USD - globalAccountTemplate",
  "useAccountTemplate": true,
  "accountTemplate": 2,
  "denomination": "USD",
  "startAmount": 8500000,
  "enabled": false,
  "lifecycleState": 1
})
p({
  "class": "net.nanopay.liquidity.tx.L2TransactionApprovalRule",
  "id":"68afcf0c-c718-98f8-0841-75e97a3ad16d173","name": "L2 approval for transaction >= $50,000 - ACME06 CASH (USD)",
  "sourceAccount": 1449,
  "startAmount": 5000000,
  "denomination": "USD",
  "enabled": false,
  "lifecycleState": 1
})

// Add approval request rules
p({
  "class":"foam.nanos.ruler.Rule",
  "id":"68afcf0c-c718-98f8-0841-75e97a3ad16d174","name":"approvalRequestDAO Approve or Reject on Update",
  "priority":110,
  "ruleGroup":"approvables",
  "documentation":"Handle an approved or rejected approval request that relates to the approvableDAO",
  "daoKey":"approvalRequestDAO",
  "operation":1,
  "after":true,
  "predicate":{
    "class":"foam.nanos.approval.ApprovableApprovalRequestsPredicate"
  },
  "action":{
    "class":"foam.nanos.approval.ApprovableApprovalRequestsRule"
  },
  "enabled":true,
  "saveHistory":true,
  "lifecycleState":1
})
p({
  "class":"foam.nanos.ruler.Rule",
  "id":"68afcf0c-c718-98f8-0841-75e97a3ad16d175","name":"approvableDAO Approve or Reject",
  "priority":110,
  "ruleGroup":"approvables",
  "documentation":"Handle an approved or rejected update request",
  "daoKey":"approvableDAO",
  "operation":1,
  "predicate":{
    "class":"foam.nanos.approval.FulfilledApprovablePredicate",
  },
  "action":{
    "class":"foam.nanos.approval.FulfilledApprovableRule"
  },
  "enabled":true,
  "saveHistory":true,
  "lifecycleState":1
})

// Transaction limit business rule example for 200,000.00 EUR
p({
  "class":"net.nanopay.liquidity.tx.TxLimitRule",
  "id":"68afcf0c-c718-98f8-0841-75e97a3ad16d176","name":"ACME08 Securities €200,000.00 EUR Account Limit",
  "applyLimitTo":1,
  "accountToLimit":1613,
  "limit":20000000,
  "denomination":"EUR",
  "currentLimits":{},
  "created":"2019-11-30T12:30:00.000Z",
  "createdBy":8006,
  "lastModified":"2019-11-30T12:30:00.000Z",
  "lastModifiedBy":8006,
  "enabled": false,
  "lifecycleState":1
})

// Generic business rule example
p({
  "class":"net.nanopay.liquidity.tx.GenericBusinessRule",
  "id":"68afcf0c-c718-98f8-0841-75e97a3ad16d177","name":"ACME10 Account Tx Notification Rule",
  "description":"Sample Business Rule",
  "sourcePredicate":{
    "class":"foam.mlang.predicate.Eq",
    "arg1":{
      "class":"foam.mlang.expr.PropertyExpr",
      "of":"net.nanopay.account.Account",
      "property":{
        "class":"__Property__",
        "forClass_":"net.nanopay.account.Account",
        "name":"name"
      }
    },
    "arg2":{
      "class":"foam.mlang.Constant",
      "value":"ACME10 Shadow Account"
    }
  },
  "destinationPredicate":{
    "class":"foam.mlang.predicate.Eq",
    "arg1":{
      "class":"foam.mlang.expr.PropertyExpr",
      "of":"foam.nanos.auth.User",
      "property":{
        "class":"__Property__",
        "forClass_":"foam.nanos.auth.User",
        "name":"email"
      }
    },
    "arg2":{
      "class":"foam.mlang.Constant",
      "value":"liquiddev@nanopay.net"
    }
  },
  "businessRuleAction":2,
  "enabled": false,
  "lifecycleState":1
})

// Automatically verify emails for new Liquid users. Due to change once Goldman
// gets back to us with requirements.
// Force user group to be liquidBasic
p({
  "class":"foam.nanos.ruler.Rule",
  "id":"68afcf0f-c718-98f8-0841-75e97a3ad16d60",
  "name":"Set user group to liquidBasic",
  "daoKey": "localUserDAO",
  "operation": 0,
  "priority": 1000,
  "predicate":{
    "class":"foam.mlang.predicate.And",
    "args":[
      {
        "class":"foam.mlang.predicate.Not",
        "arg1":{
          "class":"net.nanopay.liquidity.ruler.IsSystemOrAdminUser"
        }
      }
    ]
  },
  "action":{
    "class":"foam.nanos.ruler.action.ChangePropertyAction",
    "propName":"group",
    "valueExpr":{
      "class":"foam.mlang.Constant",
      "value":"liquidBasic"
    }
  },
  "enabled":true,
  "ruleGroup": "UserCreate",
  "lifecycleState":1
})
p({
  "class": "foam.nanos.ruler.Rule",
  "id":"68afcf0c-c718-98f8-0841-75e97a3ad16d178",
  "name": "Liquid Auto-Verify Email Rule",
  "daoKey": "localUserDAO",
  "priority": 200,
  "predicate": {
    "class": "foam.mlang.predicate.Eq",
    "arg1": {
      "class": "foam.mlang.expr.PropertyExpr",
      "of": "foam.nanos.auth.User",
      "property": {
        "class": "__Property__",
        "forClass_": "foam.nanos.auth.User",
        "name": "group"
      }
    },
    "arg2": {
      "class": "foam.mlang.Constant",
      "value": "liquidBasic"
    }
  },
  "action": {
    "class": "net.nanopay.admin.SkipUserEmailVerification"
  },
  "ruleGroup": "UserCreate",
  "lifecycleState":1
})

p({
  "class":"foam.nanos.ruler.Rule",
  "id":"68afcf0c-c718-98f8-0841-75e97a3ad16d179","name":"Remove accounts from ucjdata on account",
  "priority": 100,
  "enabled":true,
  "ruleGroup": "liquid",
  "documentation": "Remove accounts from ucjdata on account removal",
  "daoKey": "localAccountDAO",
  "operation": 2, 
  "after": true,
  "action" : { "class": "net.nanopay.liquidity.crunch.RemoveAccountFromUcjDataOnAccountRemoval" },
  "saveHistory": true,
  "lifecycleState":1
})

p({
  "class":"foam.nanos.ruler.Rule",
  "id":"68afcf0c-c718-98f8-0841-75e97a3ad16d181",
  "name":"Remove Deleted Account From AccountTemplate",
  "priority": 100,
  "enabled":true,
  "ruleGroup": "liquid",
  "documentation": "On account delete, remove the reference of the account from any account templates/ any roleassignment using template",
  "daoKey": "localAccountDAO",
  "operation": 2, 
  "after": true,
  "action" : { "class": "net.nanopay.liquidity.crunch.RemoveDeletedAccountFromAccountTemplate" },
  "saveHistory": true,
  "lifecycleState":1
})

p({
  "class":"foam.nanos.ruler.Rule",
  "id":"68afcf0c-c718-98f8-0841-75e97a3ad16d281",
  "name":"Remove Deleted Account From RootAccounts",
  "priority": 100,
  "enabled":true,
  "ruleGroup": "liquid",
  "documentation": "On account delete, remove the reference of the account from any account templates/ any roleassignment using template",
  "daoKey": "localAccountDAO",
  "operation": 2, 
  "after": true,
  "action" : { "class": "net.nanopay.liquidity.crunch.RemoveAccountFromRootAccounts" },
  "saveHistory": true,
  "lifecycleState":1
})

p({
  "class":"foam.nanos.ruler.Rule",
  "id":"68afcf0d-c718-98f8-0841-75e97a3ad16d182",
  "name":"Outstanding Requests Prevent Deletion",
  "priority":110,
  "ruleGroup":"liquid",
  "documentation":"Cannot approve deletion of an approvable aware object if it has outstanding requests",
  "daoKey":"approvalRequestDAO",
  "operation":1,
  "predicate":{
    "class":"net.nanopay.liquidity.approvalRequest.OutstandingRequestsPreventDeletionPredicate"
  },
  "action":{
    "class":"net.nanopay.liquidity.approvalRequest.OutstandingRequestsPreventDeletionRule"
  },
  "enabled":true,
  "saveHistory":true,
  "lifecycleState":1
})

p({"class":"foam.nanos.ruler.Rule","enabled":false,"id":"68afcf0c-c718-98f8-0841-75e97a3ad16d23","name": "Send notification to account owner when account has been added."}) //Ablii MicroDeposit stuff

// Turn move the digital transaction planner into generic planners for liquid.

p({
  "class":"net.nanopay.tx.planner.DigitalTransactionPlanner",
  "id":"68afcf0c-c718-98f8-0841-75e97a3ad16d182",
  "name":"Digital Transaction Planner",
  "priority":200,
  "ruleGroup":"genericPlanner",
  "enabled":true,
  "predicate":{
    "class":"foam.mlang.predicate.And",
    "args":[
      {
        "class":"foam.nanos.ruler.predicate.PropertyIsInstance",
        "propName":"sourceAccount",
        "of":"net.nanopay.account.DigitalAccount"
      },
      {
        "class":"foam.nanos.ruler.predicate.PropertyIsInstance",
        "propName":"destinationAccount",
        "of":"net.nanopay.account.DigitalAccount"
      },
      {
        "class":"foam.nanos.ruler.predicate.PropertyEQProperty",
        "prop1":"sourceUnit",
        "prop2":"destinationUnit"
      }
    ]
  },
  "lifecycleState":1
})

// Enable checker approval phase (in ApprovableAwareDAO)
p({
  "class":"foam.nanos.ruler.Rule",
  "id":"3a9788fc-78b5-481e-9682-effa98489c331","name":"Enable checker on RoleAssignment put()",
  "priority":100,
  "enabled":true,
  "ruleGroup":"liquid",
  "documentation":"Enabled checker on RoleAssignment put()",
  "daoKey":"localRoleAssignmentDAO",
  "operation":3,
  "after":false,
  "predicate":{
    "class":"foam.mlang.predicate.True",
  },
  "action":{
    "class":"foam.nanos.ruler.action.ChangePropertyAction",
    "propName":"checkerPredicate",
    "valueExpr":{
      "class":"foam.mlang.Constant",
      "value":{
        "class":"foam.mlang.predicate.True"
      }
    }
  },
  "saveHistory":true,
  "lifecycleState":1
})
p({
  "class":"foam.nanos.ruler.Rule",
  "id":"3a9788fc-78b5-481e-9682-effa98489c332",
  "name":"Enable checker on RoleAssignment remove()",
  "priority":100,
  "enabled":true,
  "ruleGroup":"liquid",
  "documentation":"Enabled checker on RoleAssignment remove()",
  "daoKey":"localRoleAssignmentDAO",
  "operation":2,
  "after":false,
  "predicate":{
    "class":"foam.mlang.predicate.True",
  },
  "action":{
    "class":"foam.nanos.ruler.action.ChangePropertyAction",
    "propName":"checkerPredicate",
    "valueExpr":{
      "class":"foam.mlang.Constant",
      "value":{
        "class":"foam.mlang.predicate.True"
      }
    }
  },
  "saveHistory":true,
  "lifecycleState":1
})
p({
  "class":"foam.nanos.ruler.Rule",
  "id":"3a9788fc-78b5-481e-9682-effa98489c333","name":"Enable checker on LiquiditySettings put()",
  "priority":100,
  "enabled":true,
  "ruleGroup":"liquid",
  "documentation":"Enabled checker on LiquiditySettings put()",
  "daoKey":"localLiquiditySettingsDAO",
  "operation":3,
  "after":false,
  "predicate":{
    "class":"foam.mlang.predicate.True",
  },
  "action":{
    "class":"foam.nanos.ruler.action.ChangePropertyAction",
    "propName":"checkerPredicate",
    "valueExpr":{
      "class":"foam.mlang.Constant",
      "value":{
        "class":"foam.mlang.predicate.True"
      }
    }
  },
  "saveHistory":true,
  "lifecycleState":1
})
p({
  "class":"foam.nanos.ruler.Rule",
  "id":"3a9788fc-78b5-481e-9682-effa98489c334","name":"Enable checker on LiquiditySettings remove()",
  "priority":100,
  "enabled":true,
  "ruleGroup":"liquid",
  "documentation":"Enabled checker on LiquiditySettings remove()",
  "daoKey":"localLiquiditySettingsDAO",
  "operation":2,
  "after":false,
  "predicate":{
    "class":"foam.mlang.predicate.True",
  },
  "action":{
    "class":"foam.nanos.ruler.action.ChangePropertyAction",
    "propName":"checkerPredicate",
    "valueExpr":{
      "class":"foam.mlang.Constant",
      "value":{
        "class":"foam.mlang.predicate.True"
      }
    }
  },
  "saveHistory":true,
  "lifecycleState":1
})
p({
  "class":"foam.nanos.ruler.Rule",
  "id":"3a9788fc-78b5-481e-9682-effa98489c335","name":"Enable checker on User put()",
  "priority":100,
  "enabled":true,
  "ruleGroup":"liquid",
  "documentation":"Enabled checker on User put()",
  "daoKey":"bareUserDAO",
  "operation":3,
  "after":false,
  "predicate":{
    "class":"foam.mlang.predicate.True",
  },
  "action":{
    "class":"foam.nanos.ruler.action.ChangePropertyAction",
    "propName":"checkerPredicate",
    "valueExpr":{
      "class":"foam.mlang.Constant",
      "value":{
        "class":"foam.mlang.predicate.True"
      }
    }
  },
  "saveHistory":true,
  "lifecycleState":1
})
p({
  "class":"foam.nanos.ruler.Rule",
  "id":"3a9788fc-78b5-481e-9682-effa98489c336","name":"Enable checker on User remove()",
  "priority":100,
  "enabled":true,
  "ruleGroup":"liquid",
  "documentation":"Enabled checker on User remove()",
  "daoKey":"localUserDAO",
  "operation":2,
  "after":false,
  "predicate":{
    "class":"foam.mlang.predicate.True",
  },
  "action":{
    "class":"foam.nanos.ruler.action.ChangePropertyAction",
    "propName":"checkerPredicate",
    "valueExpr":{
      "class":"foam.mlang.Constant",
      "value":{
        "class":"foam.mlang.predicate.True"
      }
    }
  },
  "saveHistory":true,
  "lifecycleState":1
})
p({
  "class":"foam.nanos.ruler.Rule",
  "id":"3a9788fc-78b5-481e-9682-effa98489c337","name":"Enable checker on Account put()",
  "priority":100,
  "enabled":true,
  "ruleGroup":"liquid",
  "documentation":"Enabled checker on Account put()",
  "daoKey":"localAccountDAO",
  "operation":3,
  "after":false,
  "predicate":{
    "class":"foam.mlang.predicate.True",
  },
  "action":{
    "class":"foam.nanos.ruler.action.ChangePropertyAction",
    "propName":"checkerPredicate",
    "valueExpr":{
      "class":"foam.mlang.Constant",
      "value":{
        "class":"foam.mlang.predicate.True"
      }
    }
  },
  "saveHistory":true,
  "lifecycleState":1
})
p({
  "class":"foam.nanos.ruler.Rule",
  "id":"3a9788fc-78b5-481e-9682-effa98489c338","name":"Enable checker on Account remove()",
  "priority":100,
  "enabled":true,
  "ruleGroup":"liquid",
  "documentation":"Enabled checker on Account remove()",
  "daoKey":"localAccountDAO",
  "operation":2,
  "after":false,
  "predicate":{
    "class":"foam.mlang.predicate.True",
  },
  "action":{
    "class":"foam.nanos.ruler.action.ChangePropertyAction",
    "propName":"checkerPredicate",
    "valueExpr":{
      "class":"foam.mlang.Constant",
      "value":{
        "class":"foam.mlang.predicate.True"
      }
    }
  },
  "saveHistory":true,
  "lifecycleState":1
})
p({
  "class":"foam.nanos.ruler.Rule",
  "id":"3a9788fc-78b5-481e-9682-effa98489c339","name":"Enable checker on Rule put()",
  "priority":100,
  "enabled":true,
  "ruleGroup":"liquid",
  "documentation":"Enabled checker on Rule put()",
  "daoKey":"ruleDAO",
  "operation":3,
  "after":false,
  "predicate":{
    "class":"foam.mlang.predicate.True",
  },
  "action":{
    "class":"foam.nanos.ruler.action.ChangePropertyAction",
    "propName":"checkerPredicate",
    "valueExpr":{
      "class":"foam.mlang.Constant",
      "value":{
        "class":"foam.mlang.predicate.True"
      }
    }
  },
  "saveHistory":true,
  "lifecycleState":1
})
p({
  "class":"foam.nanos.ruler.Rule",
  "id":"3a9788fc-78b5-481e-9682-effa98489c340","name":"Enable checker on Rule remove()",
  "priority":100,
  "enabled":true,
  "ruleGroup":"liquid",
  "documentation":"Enabled checker on Rule remove()",
  "daoKey":"ruleDAO",
  "operation":2,
  "after":false,
  "predicate":{
    "class":"foam.mlang.predicate.True",
  },
  "action":{
    "class":"foam.nanos.ruler.action.ChangePropertyAction",
    "propName":"checkerPredicate",
    "valueExpr":{
      "class":"foam.mlang.Constant",
      "value":{
        "class":"foam.mlang.predicate.True"
      }
    }
  },
  "saveHistory":true,
  "lifecycleState":1
})
p({
  "class":"foam.nanos.ruler.Rule",
  "id":"3a9788fc-78b5-481e-9682-effa98489c341","name":"Enable checker on Capability put()",
  "priority":100,
  "enabled":true,
  "ruleGroup":"liquid",
  "documentation":"Enabled checker on Capability put()",
  "daoKey":"localCapabilityDAO",
  "operation":3,
  "after":false,
  "predicate":{
    "class":"foam.mlang.predicate.True",
  },
  "action":{
    "class":"foam.nanos.ruler.action.ChangePropertyAction",
    "propName":"checkerPredicate",
    "valueExpr":{
      "class":"foam.mlang.Constant",
      "value":{
        "class":"foam.mlang.predicate.True"
      }
    }
  },
  "saveHistory":true,
  "lifecycleState":1
})
p({
  "class":"foam.nanos.ruler.Rule",
  "id":"3a9788fc-78b5-481e-9682-effa98489c342","name":"Enable checker on Capability remove()",
  "priority":100,
  "enabled":true,
  "ruleGroup":"liquid",
  "documentation":"Enabled checker on Capability remove()",
  "daoKey":"localCapabilityDAO",
  "operation":2,
  "after":false,
  "predicate":{
    "class":"foam.mlang.predicate.True",
  },
  "action":{
    "class":"foam.nanos.ruler.action.ChangePropertyAction",
    "propName":"checkerPredicate",
    "valueExpr":{
      "class":"foam.mlang.Constant",
      "value":{
        "class":"foam.mlang.predicate.True"
      }
    }
  },
  "saveHistory":true,
  "lifecycleState":1
})
p({
  "class":"foam.nanos.ruler.Rule",
  "id":"cbb0b212-0bd5-415c-8c51-8121ae6bbdf5",
  "name":"add liquid summary txn",
  "priority":100,
  "enabled":true,
  "ruleGroup":"liquid",
  "documentation":"Find transactions without parents, that are not liquid summary txns. add a liquid summary.",
  "daoKey":"localTransactionDAO",
  "operation":2,
  "after":false,
  "predicate":{
        "class":"foam.mlang.predicate.AND",
        "args": [
          {
            "class": "foam.mlang.predicate.Not",
            "arg1":{
              class:"foam.nanos.ruler.predicate.IsInstancePredicate",
              "of":"net.nanopay.tx.LiquidSummaryTransaction"
            }
          },
          {
            "class": "foam.mlang.predicate.Not",
            "arg1":{
              "class":"foam.nanos.ruler.predicate.PropertyHasValue",
              "propName":"parent"
            }
          }
        ]
  },
  "action":{
    "class":"net.nanopay.tx.AddLiquidTransactionAction",
  },
  "saveHistory":true,
  "lifecycleState":1
})
p({
  "class":"foam.nanos.ruler.Rule",
  "id":"cbb0b212-0bd5-415c-8c51-8121ae6bbdf5",
  "name":"Add liquid transactionType to summary",
  "priority":100,
  "enabled":true,
  "ruleGroup":"liquid",
  "documentation":"If a liquid summary transaction doesnt have a transactiontype add one",
  "daoKey":"localTransactionDAO",
  "operation":2,
  "after":false,
  "predicate":{
    "class":"foam.mlang.predicate.AND",
    "args": [
      {
        "class":"foam.nanos.ruler.predicate.IsInstancePredicate",
        "of":"net.nanopay.tx.LiquidSummaryTransaction"
      },
      {
        "class":"foam.nanos.ruler.predicate.PropertyHasValue",
        "propName":"transactionType"
      }
    ]
  },
  "action":{
    "class":"net.nanopay.tx.LabelLiquidSummaryAction",
  },
  "saveHistory":true,
  "lifecycleState":1
})

// TODO: Enable when ingestion gets fixed
// Need to be disabled for the "Prefill All Digital Accounts Through One Shadow" script to run
p({
  "class":"foam.nanos.ruler.Rule",
  "id":"c8af9202-6890-4bdb-96ba-60082960422f",
  "name":"block certain liquid transactions",
  "priority":100,
  "enabled":false,
  "ruleGroup":"liquid",
  "documentation":"blocks certain accounts from transacting",
  "daoKey":"localTransactionDAO",
  "operation":3,
  "after":false,
  "predicate":{
    "class":"foam.mlang.predicate.Not",
    "arg1":{
      "class":"foam.nanos.ruler.predicate.ContextContainsPredicate",
      "key":"systemGenerated"
    }
  },
  "action":{
    "class":"net.nanopay.tx.ruler.LiquidTransactionalBlocks",
  },
  "lifecycleState":1
})
