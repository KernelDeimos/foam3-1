p({"class":"foam.nanos.boot.NSpec", "name":"localBalanceDAO",                    "serviceScript":"return new net.nanopay.tx.LocalBalanceDAO(x);"})
p({"class":"foam.nanos.boot.NSpec", "name":"balanceDAO",                         "serve":true,  "serviceScript":"return new foam.dao.PMDAO(x, new foam.dao.PipelinePMDAO( x, (foam.dao.DAO) x.get(\"localBalanceDAO\")));","client":"{\"of\":\"net.nanopay.account.Balance\",\"cache\":false,\"decorators\": [{\"class\":\"foam.nanos.fs.FileArrayDAODecorator\"}]}"})

p({
  "class":"foam.nanos.boot.NSpec",
  "name":"localAccountDAO",
  "lazy":false,
  "serviceScript":
  """
    import net.nanopay.account.Account;
    mdao = new foam.dao.MDAO(Account.getOwnClassInfo());
    mdao.addIndex(new foam.core.PropertyInfo[] {Account.OWNER});
    mdao.addIndex(new foam.core.PropertyInfo[] {Account.NAME});
    mdao.addIndex(new foam.core.PropertyInfo[] {Account.ID});
    mdao.addIndex(new foam.core.PropertyInfo[] {Account.ENABLED});
    mdao.addIndex(new foam.core.PropertyInfo[] {Account.IS_DEFAULT});
    mdao.addIndex(new foam.core.PropertyInfo[] {Account.DENOMINATION});
    inner = new net.nanopay.security.HashingJDAO(x, "SHA-256", false, true, mdao, "accounts");
    
    dao = new net.nanopay.onboarding.email.NewBankAccountAddedEmailDAO.Builder(x).build();
    dao = new net.nanopay.bank.AscendantFXBankAccountDAO(x, dao);
    dao = new net.nanopay.bank.RandomDepositBankAccountDAO(x, dao);
    dao.setUseBMO(true);
    dao = new net.nanopay.bank.PreventDuplicateBankAccountDAO(x, dao);
    dao = new net.nanopay.bank.BankAccountBranchDAO(x, dao);
    dao = new net.nanopay.bank.BankAccountInstitutionDAO(x, dao);
    dao = new net.nanopay.account.EnforceOneDefaultDigitalAccountPerCurrencyDAO(x, dao);

    return new foam.dao.EasyDAO.Builder(x)
      .setOf(Account.getOwnClassInfo())
      .setInnerDAO(inner)
      .setDecorator(dao)
      .setAuthorize(false)
      .setPm(true)
      .setSeqNo(true)
      .setDeletedAware(false)
      .setOf(Account.getOwnClassInfo())
      .setRuler(true)
      .setJournalType(foam.dao.JournalType.SINGLE_JOURNAL)
      .setJournalName("accounts")
     .build();
  """
})

p({
  "class":"foam.nanos.boot.NSpec",
  "name":"accountDAO",
  "lazy":false,
  "serve":true,
  "serviceScript":
  """
    foam.dao.DAO dao = new net.nanopay.account.AuthenticatedAccountDAO(x, 
      new foam.nanos.auth.PermissionedPropertyDAO(x, 
        new net.nanopay.account.AbliiBankAccountAutoverifyDAO(x,  
          new foam.dao.ValidatingDAO(x, ((foam.dao.DAO) x.get("localAccountDAO")),
            new net.nanopay.bank.BankAccountValidator()))));
    return new foam.dao.EasyDAO.Builder(x)
      .setOf(net.nanopay.account.Account.getOwnClassInfo())
      .setInnerDAO(dao)
      .setAuthorize(false)
      .setPm(true)
      .setPipelinePm(true)
      .setEnableInterfaceDecorators(false)
      .setRuler(false)
      .build();
  """,
  "client":
  """
  {
    "of":"net.nanopay.account.Account",
    "decorators": [
      {
        "class":"foam.nanos.fs.FileDAODecorator"
      }
    ]
  }
  """
})

p({"class":"foam.nanos.boot.NSpec", "name":"digitalAccount",                     "serve":true, "boxClass":"net.nanopay.account.DigitalAccountServiceInterfaceSkeleton", "serviceClass":"net.nanopay.account.DigitalAccountService","client":"{ \"class\":\"net.nanopay.account.ClientDigitalAccountService\", \"serviceName\": \"service/digitalAccount\" }"})
p({"class":"foam.nanos.boot.NSpec", "name":"localZeroAccountUserAssociationDAO",                  "lazy":false,  "serve":true, "serviceScript":"return new foam.dao.EasyDAO.Builder(x).setAuthorize(false).setPm(true).setJournalType(foam.dao.JournalType.SINGLE_JOURNAL).setJournalName(\"zeroAccountUserAssociations\").setOf(net.nanopay.account.ZeroAccountUserAssociation.getOwnClassInfo()).build() /*.setDaoType(foam.dao.MDAO).build()*/;","client":"{\"of\":\"net.nanopay.account.ZeroAccountUserAssociation\"}"})

p({
  "class": "foam.nanos.boot.NSpec", 
  "name": "localDebtAccountDAO",  
  "authenticate": false, 
  "serviceScript": 
  """
    return new foam.dao.EasyDAO.Builder(x)
      .setOf(net.nanopay.account.DebtAccount.getOwnClassInfo())
      .setPm(true)
      .setAuthorize(false)
      .setInnerDAO((x.get("localAccountDAO")).where(foam.mlang.MLang.INSTANCE_OF(net.nanopay.account.DebtAccount.class)))
      .setRuler(false)
      .build();
  """
})

p({
  "class":"foam.nanos.boot.NSpec", 
  "name":"debtAccountDAO", 
  "serve":true, 
  "serviceScript":
  """
    return new foam.dao.EasyDAO.Builder(x)
      .setPm(true)
      .setOf(net.nanopay.account.DebtAccount.getOwnClassInfo())
      .setInnerDAO(x.get("localDebtAccountDAO"))
      .build();
  """,
  "client":"{\"of\":\"net.nanopay.account.DebtAccount\"}"
})

