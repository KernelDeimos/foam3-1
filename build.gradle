/*
 * This file was generated by the Gradle "init" task.
 */

plugins {
    id "java"
    id "maven-publish"
    id "com.moowork.node" version "0.12"
}

repositories {
    mavenLocal()
    maven {
        url = "https://raw.github.com/XeroAPI/Xero-Java/mvn-repo/"
    }

    maven {
        url = "http://repo.maven.apache.org/maven2"
    }
}

dependencies {
    compile "org.jtwig:jtwig-core:5.86.1.RELEASE"
    compile "commons-collections:commons-collections:3.2.2"
    compile "commons-beanutils:commons-beanutils:1.9.3"
    compile "xerces:xercesImpl:2.12.0"
    compile "com.authy:authy-java:1.1.0"
    compile "com.fasterxml.jackson.core:jackson-core:2.9.3"
    compile "com.xero:xero-java-sdk:2.0.2"
    compile "com.intuit.quickbooks-online:ipp-v3-java-data:4.0.8"
    compile "com.intuit.quickbooks-online:ipp-v3-java-devkit:4.0.8"
    compile "com.intuit.quickbooks-online:oauth2-platform-api:4.0.8"
    compile "javax.json:javax.json-api:1.0"
    compile "javax.mail:mail:1.4.7"
    compile "javax.mail:javax.mail-api:1.5.5"
    compile "javax.servlet:javax.servlet-api:3.1.0"
    compile "jstl:jstl:1.2"
    compile "org.apache.commons:commons-dbcp2:2.0.1"
    compile "org.apache.commons:commons-text:1.1"
    compile "commons-codec:commons-codec:1.11"
    compile "com.jcraft:jsch:0.1.54"
    compile "org.apache-extras.beanshell:bsh:2.0b6"
    compile "com.google.api-client:google-api-client:1.22.0"
    compile "org.bouncycastle:bcpkix-jdk15on:1.57"
    compile "org.bouncycastle:bcprov-jdk15on:1.57"
    compile "org.mindrot:jbcrypt:0.3m"
    compile "org.mongodb:mongodb-driver:3.4.2"
    compile "org.postgresql:postgresql:42.0.0"
    compile "org.java-websocket:Java-WebSocket:1.3.4"
    compile "com.twilio.sdk:twilio:7.23.0"
    compile "com.stripe:stripe-java:5.35.1"
    compile "com.realexpayments.remote.sdk:rxp-remote-java:1.3.1"
    compile "javax.xml.bind:jaxb-api:2.1"
    compile "com.sun.xml.bind:jaxb-impl:2.2.11"
    compile "org.eclipse.jetty:jetty-server:9.4.10.v20180503"
    compile "org.eclipse.jetty:jetty-servlet:9.4.10.v20180503"
    compile "org.eclipse.jetty.websocket:websocket-server:9.4.10.v20180503"
    compile "com.redhat.victims.maven:security-versions:1.0.6"
    compile "org.apache.logging.log4j:log4j-slf4j-impl:2.1"
    compile "org.slf4j:slf4j-api:1.8.0-beta2"
    compile "org.slf4j:slf4j-jdk14:1.7.25"
    compile "com.nulab-inc:zxcvbn:1.2.5"
    compile "com.plaid:plaid-java:3.0.5"
    compile "com.itextpdf:itextpdf:5.5.12"
    compile "com.itextpdf:html2pdf:1.0.2"
    compile "com.google.oauth-client:google-oauth-client:1.23.0"
    compileOnly "javax.websocket:javax.websocket-api:1.1"
}

group = "net.nanopay"
description = "nanopay"
sourceCompatibility = "1.8"
libsDirName = "lib"

def targetDir = "target"

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

sourceSets {
    main {
         java {
             srcDirs = [
                     "$rootDir/foam2/src",
                     "$rootDir/nanopay/src",
                     "$rootDir/build"
             ]
             exclude "com/chrome/**"
             exclude "foam/nanos/tomcat/**"
             exclude "foam/dao/DatastoreDAO.java"
             exclude "net/nanopay/blob/**"
         }
    }
}

task genJava(type: Exec) {
    commandLine 'bash', './gen.sh'
}

task packageJs(type: NodeTask) {
    script = file('./tools/js_build/build.js')
}

task copyLib(type: Copy) {
     into "$targetDir/lib"
     from configurations.runtime
}

task copyResources(type: Copy) {
     into "$targetDir/classes"
     from "$rootDir/nanopay/src/resources"
     from "$rootDir/foam2/src/resources"
}

task copyJournals(type: Copy) {
    from "$targetDir/journals"
    into "$targetDir/classes/journals"
    include "*.0"
}

task copyImages(type: Copy) {
    from "$rootDir/foam2/src/foam/u2"
    from "$rootDir/foam2/src/foam/nanos"
    from "$rootDir/foam2/src/foam/support"
    from "$rootDir/nanopay/src/net/nanopay"
    into "$targetDir/classes"
    include "images/**"
}

task copyFavicon(type: Copy) {
    from "$rootDir/favicon"
    into "$targetDir/classes/webroot/favicon"
    include "**"
}

jar {
  dependsOn tasks.withType(Copy)
  dependsOn tasks.withType(NodeTask)
  destinationDir file("$targetDir/lib")

  from "$buildDir/classes/java/main"
  from "$targetDir/classes"
  include "**"

  manifest {
    attributes "Main-Class": "foam.nanos.boot.Boot"
    attributes "Class-Path": configurations.runtimeClasspath.files.collect { it.getName() }.join(" ")
    attributes "Implementation-Title": "nanopay"
    /* version - see settings.gradle and override on the command line
        with -Pversion=x.y.z */
    attributes "Implementation-Version": version
    attributes "Implementation-Timestamp": new Date()
    attributes "Implementation-Vendor-Id": group
    attributes "Implementation-Vendor": "nanopay"
  }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

compileJava {
     dependsOn tasks.withType(Exec)
     doLast {
        copyLib
     }
}