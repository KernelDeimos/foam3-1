p({"class":"foam.nanos.boot.NSpec", "name":"smeBusinessRegistrationDAO", "lazy":false, "serve":true, "authenticate": false, "serviceScript":"return new foam.dao.ValidatingDAO(x, new foam.dao.PMDAO(x, new foam.nanos.auth.UserPasswordHashingDAO(x, new net.nanopay.onboarding.UserRegistrationDAO(x, \"sme\", new net.nanopay.onboarding.NewUserCreateBusinessDAO(x, x.get(\"localUserDAO\"))))), new net.nanopay.onboarding.UserRegistrationValidator());", "client":"{\"of\":\"foam.nanos.auth.User\",\"cache\":true,\"decorators\": [{\"class\":\"foam.nanos.fs.FileDAODecorator\"},{\"class\":\"foam.nanos.fs.FileArrayDAODecorator\"}]}"})
p({"class":"foam.nanos.boot.NSpec","name":"businessInvitationDAO","serve":true,"serviceScript":"hashingJDAO = new net.nanopay.security.HashingJDAO(x, \"SHA-256\", false, true, net.nanopay.model.Invitation.getOwnClassInfo(), \"businessInvitations\");\u000aed = new foam.dao.EasyDAO.Builder(x).setAuthenticate(false).setInnerDAO(hashingJDAO).setSeqNo(true).setOf(net.nanopay.model.Invitation.getOwnClassInfo()).build();\u000abid = new net.nanopay.sme.BusinessInvitationDAO(x, ed);\u000aaid = new net.nanopay.partners.AuthenticatedInvitationDAO(x, bid);\u000areturn new net.nanopay.auth.PublicUserInfoDAO(x, \"createdBy\", \"inviter\", aid);","client":"{\"of\":\"net.nanopay.model.Invitation\"}","documentation":"A DAO that can be used to invite users to join businesses.","authNotes":"Wrapped with a custom AuthenticatedInvitationDAO. That should be refactored. Invitation should implement Authorizable and we should use an AuthorizationDAO."})
p({"class":"foam.nanos.boot.NSpec","name":"businessOnboardingDAO","serve":true,"authenticate":true,"serviceScript":"return new foam.nanos.auth.AuthorizationDAO(x, \n  new foam.nanos.auth.CreatedAwareDAO.Builder(x).setDelegate(new foam.nanos.auth.LastModifiedAwareDAO.Builder(x).setDelegate(new net.nanopay.sme.onboarding.BusinessOnboardingDAO.Builder(x)\n    .setDelegate(new foam.dao.EasyDAO.Builder(x)\n      .setAuthenticate(false)\n      .setOf(net.nanopay.sme.onboarding.BusinessOnboarding.getOwnClassInfo())\n      .setJournalType(foam.dao.JournalType.SINGLE_JOURNAL)\n      .setJournalName(\"businessOnboardingDAO\")\n      .build())\n    .build()).build()).build());","client": "{\"of\":\"net.nanopay.sme.onboarding.BusinessOnboarding\"}"})
