p({"class":"foam.nanos.boot.NSpec", "name":"localTransactionDAO",              "lazy":false,  "serve":false, "serviceScript":"import net.nanopay.tx.CheckQuotedTransactionDAO; import net.nanopay.tx.model.Transaction; import foam.dao.MDAO; import foam.dao.DAO; import net.nanopay.tx.stripe.StripeTransactionDAO;  import net.nanopay.tx.SendEmailNotificationTransactionDAO; import net.nanopay.integration.quick.QuickInvoiceDAO; import net.nanopay.integration.xero.XeroInvoiceDAO; import net.nanopay.tx.DuplicateTransactionCheckDAO;import net.nanopay.tx.UpdateInvoiceTransactionDAO; import net.nanopay.tx.realex.RealexTransactionDAO; import net.nanopay.tx.TransactionDAO; import net.nanopay.security.HashingJDAO; import net.nanopay.liquidity.LiquidityDAO; import net.nanopay.security.RandomNonceDAO;  import net.nanopay.fx.ascendantfx.AscendantFXTransactionDAO; MDAO transactionMDao = new MDAO(Transaction.getOwnClassInfo()); transactionMDao.addIndex(new foam.core.PropertyInfo[] {Transaction.STATUS, Transaction.SOURCE_ACCOUNT,Transaction.DESTINATION_ACCOUNT,Transaction.PARENT}); DAO xid = new XeroInvoiceDAO(x, transactionMDao); DAO qid = new QuickInvoiceDAO(x, xid); TransactionDAO aa = new TransactionDAO(x, qid); HashingJDAO a = new HashingJDAO(x, \"SHA-256\", false, aa, \"transactions\"); foam.dao.DAO ctx = new foam.dao.ContextualizingDAO.Builder(x).setDelegate(a).build(); foam.dao.ProxyDAO aware = new foam.nanos.auth.CreatedAwareDAO.Builder(x).setDelegate(new foam.nanos.auth.CreatedByAwareDAO.Builder(x).setDelegate(new foam.nanos.auth.LastModifiedAwareDAO.Builder(x).setDelegate(new foam.nanos.auth.LastModifiedByAwareDAO.Builder(x).setDelegate(new RandomNonceDAO(ctx)).build()).build()).build()).build();AscendantFXTransactionDAO ascendant = new net.nanopay.fx.ascendantfx.AscendantFXTransactionDAO(x,aware); SendEmailNotificationTransactionDAO b = new SendEmailNotificationTransactionDAO.Builder(x).setDelegate(ascendant).build(); DuplicateTransactionCheckDAO c = new DuplicateTransactionCheckDAO(x, b);  LiquidityDAO m = new LiquidityDAO(x, c); DAO valid = new foam.dao.ValidatingDAO(x, m); DAO updateChild = new net.nanopay.tx.UpdateChildTransactionDAO(x, valid); DAO saved = new net.nanopay.tx.SaveChainedTransactionDAO(x, updateChild);  UpdateInvoiceTransactionDAO e = new UpdateInvoiceTransactionDAO(x, saved);DAO isQuoted = new CheckQuotedTransactionDAO(x, e); RealexTransactionDAO real = new net.nanopay.tx.realex.RealexTransactionDAO(x, isQuoted);  DAO stripe = new StripeTransactionDAO(x, real); return new foam.dao.PMDAO(x, stripe);"})
