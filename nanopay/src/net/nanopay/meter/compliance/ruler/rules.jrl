p({"class":"foam.nanos.ruler.Rule","id":1000,"name":"Canadian Sanctions","priority":100,"ruleGroup":"signup","documentation":"Check user and business against Canadian Sanctions List","daoKey":"localUserDAO","operation":0,"after":false,"action":{"class":"net.nanopay.meter.compliance.ruler.CanadianSanctionValidator"},"enabled":false,"saveHistory":true})
p({"class":"foam.nanos.ruler.Rule","id":1010,"name":"Request signing officers compliance","priority":50,"ruleGroup":"onboarding","documentation":"Marks signing officers of a business as compliance requested.","daoKey":"localUserDAO","operation":3,"after":true,"predicate":{"class":"net.nanopay.meter.compliance.ruler.predicate.BusinessOnboarding"},"asyncAction":{"class":"net.nanopay.meter.compliance.ruler.RequestSigningOfficersCompliance"},"enabled":true,"saveHistory":true})
p({"class":"foam.nanos.ruler.Rule","id":1011,"name":"Request beneficial owners compliance","priority":50,"ruleGroup":"onboarding","documentation":"Marks beneficial owners of a business as compliance requested.","daoKey":"localUserDAO","operation":3,"after":true,"predicate":{"class":"net.nanopay.meter.compliance.ruler.predicate.BusinessOnboarding"},"asyncAction":{"class":"net.nanopay.meter.compliance.ruler.RequestBeneficialOwnersCompliance"},"enabled":true,"saveHistory":true})
p({"class":"foam.nanos.ruler.Rule","id":1100,"name":"Securefact SIDni","priority":110,"ruleGroup":"onboarding","documentation":"Check user via Securefact SIDni API","daoKey":"localUserDAO","operation":3,"after":false,"predicate":{"class":"net.nanopay.meter.compliance.ruler.predicate.CanadianUserOnboarded"},"asyncAction":{"class":"net.nanopay.meter.compliance.ruler.SecurefactSIDniValidator"},"enabled":false,"saveHistory":true})
p({"class":"foam.nanos.ruler.Rule","id":1101,"name":"Securefact LEV","priority":110,"ruleGroup":"onboarding","documentation":"Check business via Securefact LEV API","daoKey":"localUserDAO","operation":3,"after":false,"predicate":{"class":"net.nanopay.meter.compliance.ruler.predicate.CanadianBusinessOnboarded"},"asyncAction":{"class":"net.nanopay.meter.compliance.ruler.SecurefactLEVValidator"},"enabled":false,"saveHistory":true})
p({"class":"foam.nanos.ruler.Rule","id":1200,"name":"Dow Jones Person KYC - User onboarding","priority":100,"ruleGroup":"onboarding","documentation":"Check user via Dow Jones API","daoKey":"localUserDAO","operation":3,"after":false,"predicate":{"class":"foam.mlang.predicate.Or","args":[{"class":"net.nanopay.meter.compliance.ruler.predicate.UserComplianceRequested"},{"class":"net.nanopay.meter.compliance.ruler.predicate.RecurringUserComplianceCheck"}]},"asyncAction":{"class":"net.nanopay.meter.compliance.dowJones.PersonSanctionValidator"},"enabled":false,"saveHistory":true})
p({"class":"foam.nanos.ruler.Rule","id":1201,"name":"Dow Jones Entity KYC - Business onboarding","priority":100,"ruleGroup":"onboarding","documentation":"Check business via Dow Jones API","daoKey":"localUserDAO","operation":3,"after":false,"predicate":{"class":"net.nanopay.meter.compliance.ruler.predicate.BusinessOnboarding"},"asyncAction":{"class":"net.nanopay.meter.compliance.dowJones.EntitySanctionValidator"},"enabled":false,"saveHistory":true})
p({"class":"foam.nanos.ruler.Rule","id":1202,"name":"Dow Jones Beneficial Owner KYC - Beneficial Owner onboarding","priority":100,"ruleGroup":"onboarding","documentation":"Check beneficial owner via Dow Jones API","daoKey":"beneficialOwnerDAO","operation":3,"after":false,"predicate":{"class":"net.nanopay.meter.compliance.ruler.predicate.BeneficialOwnerComplianceRequested"},"asyncAction":{"class":"net.nanopay.meter.compliance.dowJones.BeneficialOwnerSanctionValidator"},"enabled":false,"saveHistory":true})
p({"class":"foam.nanos.ruler.Rule","id":1300,"name":"User Final Compliance Rule","documentation":"If this ID changes, change the constant id in the rule.","priority":10,"ruleGroup":"onboarding","documentation":"Final rule for user compliance that checks history of previous rules","daoKey":"localUserDAO","operation":3,"after":true,"predicate":{"class":"net.nanopay.meter.compliance.ruler.predicate.UserComplianceRequested"},"asyncAction":{"class":"net.nanopay.meter.compliance.UserFinalRuleValidation"},"enabled":false,"saveHistory":true})
p({"class":"foam.nanos.ruler.Rule","id":1301,"name":"Business Final Compliance Rule","documentation":"If this ID changes, change the constant id in the rule.","priority":10,"ruleGroup":"onboarding","documentation":"Final rule for business compliance that checks history of previous rules","daoKey":"localUserDAO","operation":3,"after":true,"predicate":{"class":"net.nanopay.meter.compliance.ruler.predicate.BusinessOnboarding"},"asyncAction":{"class":"net.nanopay.meter.compliance.BusinessFinalRuleValidation"},"enabled":false,"saveHistory":true})

// IdentityMind rules
p({"class":"foam.nanos.ruler.Rule","id":1400,"name":"IdentityMind Consumer KYC - Signup","priority":90,"ruleGroup":"onboarding","documentation":"On user signup, check user via IdentityMind Consumer KYC stage 1.","daoKey":"localUserDAO","operation":0,"after":true,"predicate":{"class":"net.nanopay.meter.compliance.ruler.predicate.AbliiSignup"},"asyncAction":{"class":"net.nanopay.meter.compliance.identityMind.ConsumerKYCValidator","stage":1},"enabled":false,"saveHistory":true})
p({"class":"foam.nanos.ruler.Rule","id":1410,"name":"IdentityMind Entity Login Record","priority":90,"ruleGroup":"compliance","documentation":"Check logged in user via IdentityMind Entity Login Record.","daoKey":"loginAttemptDAO","operation":0,"after":true,"predicate":{"class":"net.nanopay.meter.compliance.ruler.predicate.LoginSuccess"},"asyncAction":{"class":"net.nanopay.meter.compliance.identityMind.EntityLoginValidator"},"enabled":false,"saveHistory":true})
p({"class":"foam.nanos.ruler.Rule","id":1420,"name":"IdentityMind Merchant KYC","priority":90,"ruleGroup":"onboarding","documentation":"Check business via IdentityMind Merchant KYC.","daoKey":"localUserDAO","operation":3,"after":true,"predicate":{"class":"net.nanopay.meter.compliance.ruler.predicate.BusinessComplianceRequested"},"asyncAction":{"class":"net.nanopay.meter.compliance.identityMind.MerchantKYCValidator"},"enabled":false,"saveHistory":true})
p({"class":"foam.nanos.ruler.Rule","id":1430,"name":"IdentityMind Consumer KYC - Signing officer user updated","priority":90,"ruleGroup":"onboarding","documentation":"Check user compliance via IdentityMind Consumer KYC stage 2 when compliance is requested.","daoKey":"localUserDAO","operation":3,"after":true,"predicate":{"class":"net.nanopay.meter.compliance.ruler.predicate.UserComplianceRequested"},"asyncAction":{"class":"net.nanopay.meter.compliance.identityMind.ConsumerKYCValidator","stage":2},"enabled":false,"saveHistory":true})
p({"class":"foam.nanos.ruler.Rule","id":1431,"name":"IdentityMind Consumer KYC - Beneficial owner","priority":90,"ruleGroup":"onboarding","documentation":"Check beneficial owner via IdentityMind Consumer KYC stage 2.","daoKey":"beneficialOwnerDAO","operation":3,"after":true,"predicate":{"class":"net.nanopay.meter.compliance.ruler.predicate.BeneficialOwnerComplianceRequested"},"asyncAction":{"class":"net.nanopay.meter.compliance.identityMind.ConsumerKYCValidator","stage":2},"enabled":false,"saveHistory":true})
p({"class":"foam.nanos.ruler.Rule","id":1440,"name":"IdentityMind transfer transaction","priority":90,"ruleGroup":"compliance","documentation":"Check bank to bank transaction via IdentityMind","daoKey":"localTransactionDAO","operation":0,"after":true,"predicate":{"class":"net.nanopay.meter.compliance.ruler.predicate.B2BTransaction"},"action":{"class":"net.nanopay.meter.compliance.identityMind.B2BTransactionValidator"},"enabled":false,"saveHistory":true})
