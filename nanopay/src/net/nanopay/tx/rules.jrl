p({"class":"foam.nanos.ruler.Rule","id":2010,"name":"Pending FX Rate Transactions","priority":100,"ruleGroup":"ManualFxTxn","documentation":"Create a FX approval request for FX quote","daoKey":"localTransactionDAO","operation":1,"after":true,"predicate":{"class":"foam.mlang.predicate.And","args":[{"class":"foam.mlang.predicate.Eq","arg1":{"class":"foam.mlang.expr.Dot","arg1":{"class":"foam.mlang.ContextObject","key":"NEW"},"arg2":{"class":"foam.mlang.PredicatedExpr","arg1":{"class":"foam.mlang.predicate.IsInstanceOf","targetClass":"net.nanopay.fx.KotakFxTransaction"}}},"arg2":{"class":"foam.mlang.Constant","value":true}},{"class":"foam.mlang.predicate.Eq","arg1":{"class":"foam.mlang.expr.Dot","arg1":{"class":"foam.mlang.ContextObject","key":"NEW"},"arg2":{"class":"__Property__","forClass_":"net.nanopay.tx.model.Transaction","name":"status"}},"arg2":{"class":"foam.mlang.Constant","value":{"class":"net.nanopay.tx.model.TransactionStatus","ordinal":0}}}]},"action":{"class":"net.nanopay.tx.CreateManualFxRule"},"enabled":true,"saveHistory":false})
p({"class":"foam.nanos.ruler.Rule","id":2011,"name":"Getting FX Rate for Transactions","priority":100,"ruleGroup":"ManualFxTxn","documentation":"Get FX rate if a FX quote is available","daoKey":"approvalRequestDAO","operation":1,"after":false,"predicate":{"class":"foam.mlang.predicate.Eq","arg1":{"class":"foam.mlang.expr.Dot","arg1":{"class":"foam.mlang.ContextObject","key":"NEW"},"arg2":{"class":"foam.mlang.PredicatedExpr","arg1":{"class":"foam.mlang.predicate.IsInstanceOf","targetClass":"net.nanopay.fx.ManualFxApprovalRequest"}}},"arg2":{"class":"foam.mlang.Constant","value":true}},"action":{"class":"net.nanopay.tx.ManualFxRule"},"enabled":true,"saveHistory":false})
p({"class":"foam.nanos.ruler.Rule","id":3000,"name":"The Jackie Rule1","priority":100,"ruleGroup":"compliance","documentation":"when a compliance transaction gets created create an approval request for Jackie","daoKey":"localTransactionDAO","operation":0,"after":true,"predicate":{"class":"net.nanopay.meter.compliance.ruler.predicate.IsComplianceTransaction"},"action":{"class":"net.nanopay.tx.JackieRuleOnCreate"},"enabled":true,"saveHistory":true})
p({"class":"foam.nanos.ruler.Rule","id":3001,"name":"The Jackie Rule2","priority":100,"ruleGroup":"compliance","documentation":"When a compliance transaction is saved, check if jackie approved it or not.","daoKey":"localTransactionDAO","predicate":{"class":"foam.mlang.predicate.And","args":[{"class":"foam.mlang.predicate.Eq","arg1":{"class":"foam.mlang.expr.Dot","arg1":{"class":"foam.mlang.ContextObject","key":"NEW"},"arg2":{"class":"foam.mlang.PredicatedExpr","arg1":{"class":"foam.mlang.predicate.IsInstanceOf","targetClass":"net.nanopay.tx.ComplianceTransaction"}}},"arg2":{"class":"foam.mlang.Constant","value":true}},{"class":"foam.mlang.predicate.Eq","arg1":{"class":"foam.mlang.expr.Dot","arg1":{"class":"foam.mlang.ContextObject","key":"NEW"},"arg2":{"class":"__Property__","forClass_":"net.nanopay.tx.model.Transaction","name":"status"}},"arg2":{"class":"foam.mlang.Constant","value":{"class":"net.nanopay.tx.model.TransactionStatus","ordinal":0}}}]},"operation":1,"after":false,"action":{"class":"net.nanopay.tx.JackieRuleOnPut"},"enabled":false,"saveHistory":true})
p({"class":"foam.nanos.ruler.Rule","id":3002,"name":"DebtDestroyer","priority":100,"ruleGroup":"FastPay","documentation":"when a CI transaction gets put in complete status for an Ablii FastPay enabled user, create a debtRepaymentTxn","daoKey":"localTransactionDAO","operation":1,"after":true,"action":{"class":"net.nanopay.tx.RepayDebtOnCIRule"},"enabled":true,"saveHistory":true})
p({"class":"foam.nanos.ruler.Rule","id":3003,"name":"Invoice Payment Rule","priority":100,"ruleGroup":"InvoicePayment","documentation":"Permits users to pay invoice using bank account to bank account transactions.","daoKey":"localTransactionDAO","operation":3,"predicate":{"class":"foam.mlang.predicate.Eq","arg1":{"class":"foam.mlang.expr.Dot","arg1":{"class":"foam.mlang.ContextObject","key":"NEW"},"arg2":{"class":"foam.mlang.PredicatedExpr","arg1":{"class":"foam.mlang.predicate.IsInstanceOf","targetClass":"net.nanopay.tx.AbliiTransaction"}}},"arg2":{"class":"foam.mlang.Constant","value":true}},"action":{"class":"net.nanopay.tx.ruler.InvoicePaymentRule"},"after":false,"enabled":true,"saveHistory":false})
p({"class":"foam.nanos.ruler.Rule","id":3004,"name":"Proper Status after Pause, Rule","priority":100,"ruleGroup":"StatusRules","documentation":"Change PPC to Pending if parent complete","daoKey":"localTransactionDAO","operation":1,"action":{"class":"net.nanopay.tx.ParentCompleteToPendingRule"},"after":false,"enabled":true,"saveHistory":false})
p({"class":"foam.nanos.ruler.Rule","id":3005,"name":"Set Approved By","priority":100,"ruleGroup":"InvoicePayment","documentation":"Set approvedBy property if the payment status is PROCESSING","daoKey":"invoiceDAO","operation":1,"after":false,"action":{"class":"net.nanopay.tx.ruler.InvoiceApprovedByRule"},"enabled":true,"saveHistory":false})
p({"class":"foam.nanos.ruler.Rule","id":3006,"name":"SwitchToSlowPay","priority":100,"ruleGroup":"FastPay","documentation":"If we know that fast pay will fail due to nsf in some account, transition to slowpay","daoKey":"localTransactionDAO","operation":1,"after":false,"action":{"class":"net.nanopay.tx.ruler.SlowDownRule"},"enabled":true,"saveHistory":true})
p({"class":"foam.nanos.ruler.Rule","id":3100,"name":"Account Liquification","priority":100,"ruleGroup":"Liquidity","documentation":"Triggers liquidity settings","daoKey":"localTransactionDAO","operation":3,"after":true,"enabled":true,"action":{"class":"net.nanopay.liquidity.LiquidityRule"},"saveHistory":true})
p({"class":"foam.nanos.ruler.Rule","id":3020,"name":"observeStatus","priority":100,"ruleGroup":"Observer","documentation":"Change the last status field to the current time for all transaction status changes","daoKey":"localTransactionDAO","operation":1,"after":false,"predicate":{"class":"net.nanopay.tx.ruler.ObservePredicate","observedProperty":"status","observedClass":"net.nanopay.tx.model.Transaction"},"enabled":true,"saveHistory":true,"action":{"class":"net.nanopay.tx.ruler.ChangeFieldAction","changeProperty":"lastStatusChange","to":{"class":"foam.mlang.CurrentTime"}}})
