p({"class":"foam.nanos.ruler.Rule","id":1000,"name":"Canadian Sanctions","priority":100,"ruleGroup":"signup","documentation":"Check user and business against Canadian Sanctions List","daoKey":"localUserDAO","operation":0,"after":false,"action":{"class":"net.nanopay.meter.compliance.CanadianSanctionValidator"},"enabled":false,"saveHistory":true})
p({"class":"foam.nanos.ruler.Rule","id":1100,"name":"Securefact SIDni","priority":90,"ruleGroup":"onboarding","documentation":"Check user via Securefact SIDni API","daoKey":"localUserDAO","operation":3,"after":false,"predicate":{"class":"net.nanopay.meter.compliance.secureFact.CanadianUserOnboarding"},"asyncAction":{"class":"net.nanopay.meter.compliance.secureFact.sidni.SIDniValidator"},"enabled":false,"saveHistory":true})
p({"class":"foam.nanos.ruler.Rule","id":1101,"name":"Securefact LEV","priority":90,"ruleGroup":"onboarding","documentation":"Check business via Securefact LEV API","daoKey":"localUserDAO","operation":3,"after":false,"predicate":{"class":"net.nanopay.meter.compliance.secureFact.CanadianBusinessOnboarding"},"asyncAction":{"class":"net.nanopay.meter.compliance.secureFact.lev.LEVValidator"},"enabled":false,"saveHistory":true})
p({"class":"foam.nanos.ruler.Rule","id":1200,"name":"IdentityMind Consumer KYC - Signup","priority":80,"ruleGroup":"compliance","documentation":"On user signup, run Consumer KYC via IdentityMind.","daoKey":"localUserDAO","operation":0,"after":true,"predicate":{"class":"net.nanopay.meter.compliance.identityMind.predicate.ConsumerKYCStage1"},"asyncAction":{"class":"net.nanopay.meter.compliance.identityMind.ConsumerKYCValidator","stage":1},"enabled":false,"saveHistory":true})
p({"class":"foam.nanos.ruler.Rule","id":1300,"name":"IdentityMind Entity Login Record","priority":80,"ruleGroup":"compliance","documentation":"Record user login to IdentityMind.","daoKey":"loginAttemptDAO","operation":0,"after":true,"predicate":{"class":"net.nanopay.meter.compliance.identityMind.predicate.EntityLoginStage2"},"asyncAction":{"class":"net.nanopay.meter.compliance.identityMind.EntityLoginValidator"},"enabled":false,"saveHistory":true})
p({"class":"foam.nanos.ruler.Rule","id":1400,"name":"IdentityMind Merchant KYC","priority":90,"ruleGroup":"compliance","documentation":"Check business via IdentityMind Merchant KYC Evaluation API","daoKey":"localUserDAO","operation":3,"after":true,"predicate":{"class":"net.nanopay.meter.compliance.identityMind.predicate.MerchantKYCStage3"},"asyncAction":{"class":"net.nanopay.meter.compliance.identityMind.MerchantKYCValidator"},"enabled":false,"saveHistory":true})
p({"class":"foam.nanos.ruler.Rule","id":1410,"name":"IdentityMind Consumer KYC - Signing officer added","priority":80,"ruleGroup":"compliance","documentation":"KYC check on signing officer","daoKey":"signingOfficerJunctionDAO","operation":0,"after":true,"asyncAction":{"class":"net.nanopay.meter.compliance.identityMind.ConsumerKYCValidator","stage":3},"enabled":false,"saveHistory":true})
p({"class":"foam.nanos.ruler.Rule","id":1411,"name":"IdentityMind Consumer KYC - Signing officer user updated","priority":80,"ruleGroup":"compliance","documentation":"KYC check on signing officer","daoKey":"localUserDAO","operation":1,"after":true,"predicate":{"class":"net.nanopay.meter.compliance.identityMind.predicate.ConsumerKYCStage3"},"asyncAction":{"class":"net.nanopay.meter.compliance.identityMind.ConsumerKYCValidator","stage":3},"enabled":false,"saveHistory":true})
p({"class":"foam.nanos.ruler.Rule","id":1420,"name":"IdentityMind Consumer KYC - Beneficial owner","priority":80,"ruleGroup":"compliance","documentation":"KYC check on beneficial owner","daoKey":"beneficialOwnerDAO","operation":0,"after":true,"asyncAction":{"class":"net.nanopay.meter.compliance.identityMind.ConsumerKYCValidator","stage":3},"enabled":false,"saveHistory":true})
p({"class":"foam.nanos.ruler.Rule","id":1500,"name":"IdentityMind funding transaction","priority":90,"ruleGroup":"compliance","documentation":"Check cash-in transaction via IdentityMind","daoKey":"localTransactionDAO","operation":0,"after":false,"predicate":{"class":"net.nanopay.meter.compliance.identityMind.predicate.FundingTransaction"},"action":{"class":"net.nanopay.meter.compliance.identityMind.FundingTransactionValidator"},"enabled":false,"saveHistory":true})
