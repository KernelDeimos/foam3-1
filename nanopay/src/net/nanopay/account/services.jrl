p({"class":"foam.nanos.boot.NSpec", "name":"localBalanceDAO",                    "serviceScript":"return new net.nanopay.tx.LocalBalanceDAO(x);"})
p({"class":"foam.nanos.boot.NSpec", "name":"balanceDAO",                         "serve":true,  "serviceScript":"return new foam.dao.PMDAO(x, new foam.dao.PipelinePMDAO( x, (foam.dao.DAO) x.get(\"localBalanceDAO\")));","client":"{\"of\":\"net.nanopay.account.Balance\",\"cache\":false,\"decorators\": [{\"class\":\"foam.nanos.fs.FileArrayDAODecorator\"}]}"})

p({
  "class":"foam.nanos.boot.NSpec",
  "name":"localAccountDAO",
  "lazy":false,
  "serviceScript":
  """
    import net.nanopay.account.Account;
    foam.dao.MDAO mdao = new foam.dao.MDAO(Account.getOwnClassInfo());
    mdao.addIndex(new foam.core.PropertyInfo[] {Account.OWNER});
    mdao.addIndex(new foam.core.PropertyInfo[] {Account.NAME});
    mdao.addIndex(new foam.core.PropertyInfo[] {Account.ID});
    mdao.addIndex(new foam.core.PropertyInfo[] {Account.ENABLED});
    mdao.addIndex(new foam.core.PropertyInfo[] {Account.IS_DEFAULT});
    mdao.addIndex(new foam.core.PropertyInfo[] {Account.DENOMINATION});
    foam.dao.DAO hashingJDAO = new net.nanopay.security.HashingJDAO(x, "SHA-256", false, true, mdao, "accounts");
    
    r = new foam.nanos.ruler.RulerDAO(x, hashingJDAO, "localAccountDAO");
    nbaae = new net.nanopay.onboarding.email.NewBankAccountAddedEmailDAO.Builder(x)
      .setDelegate(r)
      .build();
    ave = new net.nanopay.bank.AccountVerifiedEmailDAO(x, nbaae);
    ade = new net.nanopay.bank.AccountDeletedEmailDAO(x, ave);
    be = new net.nanopay.bank.BankEmailDAO(x, ade);
    afexba = new net.nanopay.fx.afex.AFEXBankOnboardingDAO.Builder(x)
      .setDelegate(be)
      .build();
    afxba = new net.nanopay.bank.AscendantFXBankAccountDAO(x, afexba);
    rdba = new net.nanopay.bank.RandomDepositBankAccountDAO(x, afxba);
    rdba.setUseBMO(true);
    eodbapc = new net.nanopay.bank.EnforceOneDefaultBankAccountPerCurrencyDAO.Builder(x)
      .setDelegate(rdba)
      .build();
    pdba = new net.nanopay.bank.PreventDuplicateBankAccountDAO(x, eodbapc);
    bab = new net.nanopay.bank.BankAccountBranchDAO(x, pdba);
    bai = new net.nanopay.bank.BankAccountInstitutionDAO(x, bab);
    eoddapc = new net.nanopay.account.EnforceOneDefaultDigitalAccountPerCurrencyDAO(x, bai);
    lnoba = new net.nanopay.account.LimitNumberOfBankAccountsDAO(x, eoddapc);

    return new foam.dao.EasyDAO.Builder(x)
      .setPm(true)
      .setSeqNo(true)
      .setCreatedAware(true)
      .setCreatedByAware(true)
      .setLastModifiedAware(true)
      .setLastModifiedByAware(true)
      .setDeletedAware(true)
      .setOf(Account.getOwnClassInfo())
      .setInnerDAO(lnoba)
      .setAuthorize(false)
      .build();
  """
})

p({
  "class":"foam.nanos.boot.NSpec",
  "name":"accountDAO",
  "lazy":false,
  "serve":true,
  "serviceScript":
  """
    foam.dao.DAO AAD = new net.nanopay.account.AuthenticatedAccountDAO(x, 
      new foam.nanos.auth.PermissionedPropertyDAO(x, 
        new net.nanopay.account.AbliiBankAccountAutoverifyDAO(x,  
          new foam.dao.ValidatingDAO(x, ((foam.dao.DAO) x.get("localAccountDAO")).where(foam.mlang.MLang.EQ(net.nanopay.account.Account.ENABLED, true)),
            new net.nanopay.bank.BankAccountValidator()))));
    return new foam.dao.EasyDAO.Builder(x)
      .setPm(true)
      .setPipelinePm(true)
      .setInnerDAO(AAD)
      .setAuthorize(false)
      .setOf(net.nanopay.account.Account.getOwnClassInfo())

      // These decorators are present on localAccountDAO.
      .setDeletedAware(false)
      .setCreatedAware(false)
      .setCreatedByAware(false)
      .setLastModifiedAware(false)
      .setLastModifiedByAware(false)

      .build();
  """,
  "client":
  """
  {
    "of":"net.nanopay.account.Account",
    "decorators": [
      {
        "class":"foam.nanos.fs.FileDAODecorator"
      }
    ]
  }
  """
})

p({"class":"foam.nanos.boot.NSpec", "name":"digitalAccount",                     "serve":true, "boxClass":"net.nanopay.account.DigitalAccountServiceInterfaceSkeleton", "serviceClass":"net.nanopay.account.DigitalAccountService","client":"{ \"class\":\"net.nanopay.account.ClientDigitalAccountService\", \"serviceName\": \"service/digitalAccount\" }"})
p({"class":"foam.nanos.boot.NSpec", "name":"localZeroAccountUserAssociationDAO",                  "lazy":false,  "serve":true, "serviceScript":"return new foam.dao.EasyDAO.Builder(x).setAuthorize(false).setPm(true).setJournalType(foam.dao.JournalType.SINGLE_JOURNAL).setJournalName(\"zeroAccountUserAssociations\").setOf(net.nanopay.account.ZeroAccountUserAssociation.getOwnClassInfo()).build() /*.setDaoType(foam.dao.MDAO).build()*/;","client":"{\"of\":\"net.nanopay.account.ZeroAccountUserAssociation\"}"})
p({"class":"foam.nanos.boot.NSpec", "name":"localDebtAccountDAO",  "authenticate": false, "serviceScript":"foam.dao.DAO accountDAO = (foam.dao.DAO) x.get(\"localAccountDAO\"); accountDAO = accountDAO.where(foam.mlang.MLang.INSTANCE_OF(net.nanopay.account.DebtAccount.class)); return new foam.dao.PMDAO(x, accountDAO);"})

p({
  "class":"foam.nanos.boot.NSpec", 
  "name":"debtAccountDAO", 
  "serve":true, 
  "serviceScript":
  """
    return new foam.dao.EasyDAO.Builder(x)
      .setPm(true)
      .setOf(net.nanopay.account.DebtAccount.getOwnClassInfo())
      .setInnerDAO(x.get("localDebtAccountDAO"))
      .build();

   // return new foam.dao.PMDAO(x, 
     // new foam.dao.AuthenticatedDAO(\"debtAccountDAO\", true, x.get(\"localDebtAccountDAO\")));
  """,
  "client":"{\"of\":\"net.nanopay.account.DebtAccount\"}"
})
