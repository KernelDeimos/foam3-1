p({"class":"foam.nanos.ruler.Rule","id":8000,"name":"AFEX Beneficiary Compliance Transaction","priority":80,"ruleGroup":"AFEX","documentation":"Check if AFEX Beneficiary is apporved before preceeding with payment","daoKey":"localTransactionDAO","operation":3,"after":false,"predicate":{"class":"net.nanopay.fx.afex.AbstractPredicate"},"action":{"class":"net.nanopay.fx.afex.AFEXComplianceTransactionRule"},"enabled":true,"saveHistory":true})
p({
  "class":"foam.nanos.ruler.Rule",
  "id":8001,
  "name":"Add FX Currency Permission to Business",
  "documentation":"Rule to add currency.read.FX_CURRENCY when a business is pushed to AFEX and AFEXBusiness is created.",
  "priority":100,
  "ruleGroup":"onboarding",
  "daoKey":"afexBusinessDAO",
  "operation":3,
  "after":true,
  "predicate":{
    "class":"net.nanopay.fx.afex.AFEXBusinessCreatedPredicate",
  },
  "action":{
    "class":"net.nanopay.fx.afex.AFEXAddCurrencyPermissionRule"
  },
  "enabled":true,
  "saveHistory":true
})
p({
  "class":"foam.nanos.ruler.Rule",
  "id":8002,
  "name":"Send Operations Email Notification When AFEXBusiness is Created",
  "documentation":"Rule to send email notification to Operations team when AFEXBusiness is created.",
  "priority":100,
  "ruleGroup":"onboarding",
  "daoKey":"afexBusinessDAO",
  "operation":0,
  "after":true,
  "predicate":{
    "class":"net.nanopay.fx.afex.AFEXBusinessCreatedPredicate",
  },
  "action":{
    "class":"net.nanopay.fx.afex.AFEXBusinessCreatedNotificationRule"
  },
  "enabled":true,
  "saveHistory":true
})
p({
  "class":"foam.nanos.ruler.Rule",
  "id":8003,
  "name":"Send User Email Notification When AFEXBusiness is Created",
  "documentation":"Rule to send email notification to business team when AFEXBusiness is created and corridor is enabled.",
  "priority":100,
  "ruleGroup":"onboarding",
  "daoKey":"afexBusinessDAO",
  "operation":0,
  "after":true,
  "predicate":{
    "class":"net.nanopay.fx.afex.AFEXBusinessCreatedPredicate",
  },
  "action":{
    "class":"net.nanopay.fx.afex.AFEXCoridorEnabledNotificationRule"
  },
  "enabled":true,
  "saveHistory":true
})
p({
  "class":"foam.nanos.ruler.Rule",
  "id":8004,
  "name":"Remove FX Currency Permission When AFEXBusiness is Disabled",
  "documentation":"Rule to remove currency.read.FX_CURRENCY when a AFEXBusiness is disabled.",
  "priority":100,
  "ruleGroup":"onboarding",
  "daoKey":"afexBusinessDAO",
  "operation":3,
  "after":true,
  "predicate":{
    "class":"net.nanopay.fx.afex.AFEXBusinessDisabledPredicate",
  },
  "action":{
    "class":"net.nanopay.fx.afex.AFEXRemoveCurrencyPermissionRule"
  },
  "enabled":true,
  "saveHistory":true
})