p({
  "class":"foam.nanos.boot.NSpec",
  "name":"medusaNodeDAO",
  "serve":true,
  "serviceScript":`
    mdao = new foam.dao.MDAO(foam.nanos.medusa.MedusaEntry.getOwnClassInfo());
    dao = new foam.dao.EasyDAO.Builder(x)
      .setOf(foam.nanos.medusa.MedusaEntry.getOwnClassInfo())
      .setMdao(mdao)
      .setInnerDAO(new net.nanopay.security.HashingJDAO(x, mdao, "ledger"))
      .setRuler(false)
      .setCluster(false)
      .setPm(true)
      .setPipelinePm(true)
      .setDecorator(new foam.nanos.medusa.ReplayDAO.Builder(x)
      .setDelegate(new foam.nanos.medusa.MedusaUniqueDAO.Builder(x)
      .setDelegate(new foam.nanos.medusa.MedusaSetNodeDAO.Builder(x)
      .setDelegate(new foam.nanos.medusa.MedusaHashingDAO.Builder(x)
      .setDelegate(new foam.nanos.medusa.MedusaSigningDAO.Builder(x)
      .setDelegate(new foam.nanos.medusa.MedusaBroadcastDAO.Builder(x)
        .setDelegate(new foam.dao.NullDAO(x, foam.nanos.medusa.MedusaEntry.getOwnClassInfo()))
        .build())
      .build())
      .build())
      .build())
      .build())
      .build())
      .build();
    dao.addPropertyIndex(new foam.core.PropertyInfo[] {
      foam.nanos.medusa.MedusaEntry.INDEX
    });
    dao.addPropertyIndex(new foam.core.PropertyInfo[] {
      foam.nanos.medusa.MedusaEntry.HASH
    });
    return dao;
  `,
  "client":"{\"of\":\"foam.nanos.medusa.MedusaEntry\", \"remoteListenerSupport\": false}"
})

// Menus entry point
p({
  "class": "foam.nanos.boot.NSpec",
  "name": "medusaEntryDAO",
  "serve": true,
  "serviceScript": `
    return new foam.dao.EasyDAO.Builder(x)
      .setOf(foam.nanos.medusa.MedusaEntry.getOwnClassInfo())
      .setInnerDAO(x.get("medusaNodeDAO"))
      .setCluster(false)
      .setRuler(false)
      .setEnableInterfaceDecorators(false)
      .build();
  `,
  "client": "{\"of\":\"foam.nanos.medusa.MedusaEntry\"}"
})

// disable cron scheduler
p({
  "class":"foam.nanos.boot.NSpec",
  "name":"cronScheduler",
  "lazy":false,
  "enabled":false,
  "serviceScript":"""
    return new foam.nanos.cron.CronScheduler();
  """
})
