p({"class":"foam.nanos.ruler.Rule","id":2010,"name":"Pending FX Rate Transactions","priority":100,"ruleGroup":"ManualFxTxn","documentation":"Create a FX approval request for FX quote","daoKey":"localTransactionDAO","operation":0,"after":true,"predicate":{"class":"foam.mlang.predicate.Eq","arg1":{"class":"foam.mlang.expr.Dot","arg1":{"class":"foam.mlang.ContextObject","key":"NEW"},"arg2":{"class":"foam.mlang.PredicatedExpr","arg1":{"class":"foam.mlang.predicate.IsInstanceOf","targetClass":"net.nanopay.tx.model.Transaction"}}},"arg2":{"class":"foam.mlang.Constant","value":true}}
,"action":{"class":"net.nanopay.tx.CreateManualFxRule"},"enabled":true,"saveHistory":false})
p({"class":"foam.nanos.ruler.Rule","id":2011,"name":"Getting FX Rate for Transactions","priority":100,"ruleGroup":"ManualFxTxn","documentation":"Get FX rate if a FX quote is available","daoKey":"localTransactionDAO","operation":1,"after":false,"predicate":{"class":"foam.mlang.predicate.And","args":[{"class":"foam.mlang.predicate.Eq","arg1":{"class":"foam.mlang.expr.Dot","arg1":{"class":"foam.mlang.ContextObject","key":"NEW"},"arg2":{"class":"foam.mlang.PredicatedExpr","arg1":{"class":"foam.mlang.predicate.IsInstanceOf","targetClass":"net.nanopay.tx.model.Transaction"}}},"arg2":{"class":"foam.mlang.Constant","value":true}},{"class":"foam.mlang.predicate.Eq","arg1":{"class":"foam.mlang.expr.Dot","arg1":{"class":"foam.mlang.ContextObject","key":"NEW"},"arg2":{"class":"__Property__","forClass_":"net.nanopay.fx.FXTransaction","name":"fxRate"}},"arg2":{"class":"foam.mlang.Constant","value":0}}]}
,"action":{"class":"net.nanopay.tx.ManualFxRule"},"enabled":true,"saveHistory":false})
