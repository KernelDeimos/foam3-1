p({"class":"foam.nanos.script.Script","id":"main","description":"The main script for the liquid environment which sets up the required CronJobs","code":"/* Set AppConfig version from nanopay jar manifest*/\nimport foam.nanos.app.Mode;\nimport foam.nanos.app.AppConfig;\nimport foam.nanos.cron.Cron;\n\nlogger = (foam.nanos.logger.Logger) x.get(\"logger\");\nversion = foam.nanos.app.AppConfig.class.getPackage().getImplementationVersion();\nappConfig = x.get(\"appConfig\");\nif ( ! foam.util.SafetyUtil.isEmpty(version) ) {\n  appConfig.setVersion(version);\n} else if ( foam.util.SafetyUtil.isEmpty(appConfig.getVersion()) ) {\n  appConfig.setVersion(\"1.0.0\");\n}\nmode = System.getProperty(\"appconfig.mode\");\nif ( ! foam.util.SafetyUtil.isEmpty(mode) ) {\n  mode = mode.substring(0,1).toUpperCase() + mode.substring(1).toLowerCase();\n  m = Mode.forLabel(mode);\n  appConfig.setMode(m);\n}\n  \nlogger.log(new Object[] {\"AppConfig\", appConfig});\nprint(appConfig);\n\n/* Setting default cron jobs for Liquid */\ncronDAO = x.get(\"cronDAO\");\n\ndailyReduceCron = cronDAO.find(\"dailyReduce\");\nbaseRatesCron = cronDAO.find(\"Update Exchange Rates With CAD as Base Currency\");\n\ndailyReduceCron.runScript(x);\nlogger.info(\"Ran Cron Job 1 of 2: \", dailyReduceCron.getId());\n\nbaseRatesCron.runScript(x);\nlogger.info(\"Ran Cron Job 2 of 2: \", dailyReduceCron.getId());\n"})
