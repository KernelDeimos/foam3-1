p({
  "class": "foam.nanos.boot.NSpec",
  "name": "openid",
  "authenticate": false,
  "parameters": true,
  "serviceScript":"""
  // Intuit Client Secret FcX34gTSE04y927cVO32HZWTm5CqvNkVycLgVCleuUmcliwsBNcqrYGEp0qb2gW6
  return new net.nanopay.auth.openid.OpenIDWebAgent(
    "https://federatesys.intuit.com/as/authorization.oauth2",
    "https://federatesys.intuit.com/as/token.oauth2",
    "https://federatesys.intuit.com/pf/JWKS",
    "https://integration.nanopay.net/service/openid",
    "FcX34gTSE04y927cVO32HZWTm5CqvNkVycLgVCleuUmcliwsBNcqrYGEp0qb2gW6",
    "Nanopay",
    "intuit-support",
    "intuit"
  );
  """
})

p({
  "class": "foam.nanos.boot.NSpec",
  "name": "intuitWebhookOAP",
  "authenticate": false,
  "serve": false,
  "serviceScript":"""
  return new net.nanopay.partner.intuit.auth.WebhookOAuth(
    "FHW2xGWdSgK5pTswlqR1adCPYmhDYXe2386lcigY3rKaNfezeR",
    "Intuit.sandbox.sandbox.nanopaywebhookpprd"
  );
  """
})

p({
  "class": "foam.nanos.boot.NSpec",
  "name": "rbcReconciliationReportGenerator",
  "serviceScript": """return new net.nanopay.partner.intuit.IntuitRBCReconciliationReportGenerator("93f3fa36-7429-4b20-a223-f5b50a6d9872", "ab590614-f5bd-476a-84e0-6037607397b5");"""
})

p({
  "class": "foam.nanos.boot.NSpec",
  "name": "chargeDateService",
  "serve": true,
  "serviceScript": """
    return new net.nanopay.tx.billing.ChargeDateService(5);
  """
})

p({
  "class": "foam.nanos.boot.NSpec",
  "name": "reconciliationReportDAO",
  "serve": true,
  "serviceScript": """
  dao = new net.nanopay.partner.rbc.RBCReconciliationReportDAO(
    x,
    new foam.dao.NullDAO(x, net.nanopay.reporting.ReconciliationReport.getOwnClassInfo())
  );

  return new foam.dao.EasyDAO.Builder(x)
    .setOf(net.nanopay.reporting.ReconciliationReport.getOwnClassInfo())
    .setDecorator(dao)
    .setInnerDAO(x.get("summaryTransactionDAO"))
    .build();
  """,
  "client": """
    {
      "of": "net.nanopay.reporting.ReconciliationReport"
    }
  """
})

p({
  "class":"foam.nanos.boot.NSpec",
  "name":"supportUserDAO",
  "serviceScript":
  """
    dao = new foam.dao.CopyFromDAO.Builder(x)
        .setDelegate(x.get("userUserDAO"))
        .setTo(foam.nanos.auth.User.getOwnClassInfo())
        .setOf(net.nanopay.support.SupportUser.getOwnClassInfo())
        .build();

    decorator = new foam.dao.FilteredDAO.Builder(x)
          .setPredicate(
            foam.mlang.MLang.OR(
              new foam.mlang.predicate.Predicate[] {
                foam.mlang.MLang.EQ(net.nanopay.support.SupportUser.GROUP, "intuit-sme"),
                foam.mlang.MLang.EQ(net.nanopay.support.SupportUser.GROUP, "intuit-business-sme")
              }
            ))
          .setDelegate(new foam.dao.NullDAO.Builder(x).setOf(net.nanopay.support.SupportUser.getOwnClassInfo()).build())
        .build();

    return new foam.dao.EasyDAO.Builder(x)
      .setOf(net.nanopay.support.SupportUser.getOwnClassInfo())
      .setInnerDAO(dao)
      .setDecorator(decorator)
      .setEnableInterfaceDecorators(false)
      .build();
  """
})
