p({
  "class": "foam.nanos.boot.NSpec",
  "name": "keyStoreManager",
  "serviceScript": """
    import net.nanopay.security.PKCS12KeyStoreManager;
    return new PKCS12KeyStoreManager.Builder(x)
      .setKeyStorePath(System.getenv(\"NANOPAY_HOME\") + \"/keys/keystore.p12\")
      .setPassphrasePath(System.getenv(\"NANOPAY_HOME\") + \"/keys/passphrase\")
      .build();
  """
})
p({"class":"foam.nanos.boot.NSpec", "name":"CSPViolationsDAO",                 "serve":true,  "serviceScript":"return new foam.dao.EasyDAO.Builder(x).setJournalType(foam.dao.JournalType.SINGLE_JOURNAL).setSeqNo(true).setJournalName(\"CSPViolation\").setOf(net.nanopay.security.csp.CSPViolation.getOwnClassInfo()).build();", "client":"{\"of\":\"net.nanopay.security.csp.CSPViolation\"}", "description":"DAO containing CSP violation reports that are sent to the server by the clients."})
p({
  "class": "foam.nanos.boot.NSpec",
  "name": "CSPReportWebAgent",
  "authenticate": false,
  "serviceClass": "net.nanopay.security.csp.CSPReportWebAgent"
})
p({"class":"foam.nanos.boot.NSpec", "name":"viewPIIRequestDAO",                "serve":true,  "serviceScript":" import net.nanopay.security.pii.ViewPIIRequest; import net.nanopay.security.pii.ApprovedPIIRequestDAO; import net.nanopay.security.pii.PreventDuplicatePIIRequestsDAO; import net.nanopay.security.pii.FreezeApprovedPIIRequestsDAO; import net.nanopay.security.pii.AuthenticatedPIIRequestDAO; return new net.nanopay.security.pii.AuthenticatedPIIRequestDAO(x, new net.nanopay.security.pii.FreezeApprovedPIIRequestsDAO.Builder(x).setDelegate( new net.nanopay.security.pii.PreventDuplicatePIIRequestsDAO.Builder(x).setDelegate(new foam.nanos.auth.CreatedAwareDAO.Builder(x).setDelegate( new foam.nanos.auth.CreatedByAwareDAO.Builder(x).setDelegate(new foam.dao.SequenceNumberDAO( new net.nanopay.security.pii.ApprovedPIIRequestDAO.Builder(x).setDelegate(new foam.dao.java.JDAO(x, net.nanopay.security.pii.ViewPIIRequest.getOwnClassInfo(), \"viewPIIRequest\")).build())).build()).build()).build()).build());", "client":"{\"of\":\"net.nanopay.security.pii.ViewPIIRequest\"}"})
p({
  "class": "foam.nanos.boot.NSpec",
  "name": "PIIWebAgent",
  "serviceClass": "net.nanopay.security.pii.PIIWebAgent"
})

p({"class":"foam.nanos.boot.NSpec", "name":"encryptedUserDAO",                 "serve":true,  "serviceScript":"return new foam.dao.PMDAO(x, new foam.dao.PipelinePMDAO(x, new net.nanopay.security.EncryptingDAO(x, foam.nanos.auth.User.getOwnClassInfo(), new foam.dao.java.JDAO(x, net.nanopay.security.EncryptedObject.getOwnClassInfo(), \"encryptedUsers\"))));","client":"{\"of\":\"foam.nanos.auth.User\"}"})
p({"class":"foam.nanos.boot.NSpec", "name":"encryptedBankAccountDAO",          "serve":true,  "serviceScript":"return new foam.dao.PMDAO(x, new foam.dao.PipelinePMDAO(x, new net.nanopay.security.EncryptingDAO(x, net.nanopay.bank.BankAccount.getOwnClassInfo(), new foam.dao.java.JDAO(x, net.nanopay.security.EncryptedObject.getOwnClassInfo(), \"encryptedBankAccounts\"))));","client":"{\"of\":\"net.nanopay.bank.BankAccount\"}"})
p({
  "class":"foam.nanos.boot.NSpec", 
  "name":"privateKeyDAO",                    
  "serviceScript":"""
    easyDAO = new foam.dao.EasyDAO.Builder(x)
      .setAuthorize(false)
      .setOf(net.nanopay.security.PrivateKeyEntry.getOwnClassInfo())
      .setSeqNo(true)
      .setJournalType(foam.dao.JournalType.SINGLE_JOURNAL)
      .setJournalName(\"privateKeys\")
      .setOf(net.nanopay.security.PrivateKeyEntry.getOwnClassInfo())
      .build();
    pgpPrivateKeyDAO = new net.nanopay.security.PGPPrivateKeyDAO.Builder(x)
      .setDelegate(easyDAO)
      .build();
    privateKeyDAO = new net.nanopay.security.PrivateKeyDAO.Builder(x)
      .setAlias(\"net.nanopay.security.PrivateKeyDAO\")
      .setDelegate(pgpPrivateKeyDAO)
      .build();
    return privateKeyDAO;
  """
})
p({"class":"foam.nanos.boot.NSpec", "name":"keyPairDAO",                       "serve":true,  "serviceScript":"foam.dao.DAO hashingJDAO = new net.nanopay.security.HashingJDAO(x, \"SHA-256\", false, true, net.nanopay.security.KeyPairEntry.getOwnClassInfo(), \"keyPairs\"); return new net.nanopay.security.KeyPairDAO.Builder(x).setDelegate(new foam.dao.EasyDAO.Builder(x).setAuthorize(false).setInnerDAO(hashingJDAO).setSeqNo(true).setOf(net.nanopay.security.KeyPairEntry.getOwnClassInfo()).build()).build();","client":"{\"of\":\"net.nanopay.security.KeyPairEntry\"}"})
p({
  "class": "foam.nanos.boot.NSpec",
  "name": "publicKeyDAO",
  "serve": true,
  "serviceScript": """
    easyDAO = new foam.dao.EasyDAO.Builder(x)
      .setAuthorize(false)
      .setOf(net.nanopay.security.PublicKeyEntry.getOwnClassInfo())
      .setSeqNo(true)
      .setJournalType(foam.dao.JournalType.SINGLE_JOURNAL)
      .setJournalName("publicKeys")
      .setOf(net.nanopay.security.PublicKeyEntry.getOwnClassInfo())
      .build();
    pgpPublicKeyDAO = new net.nanopay.security.PGPPublicKeyDAO.Builder(x).setDelegate(easyDAO).build();
    return new net.nanopay.security.PublicKeyDAO.Builder(x).setDelegate(pgpPublicKeyDAO).build();
  """,
  "client": "{\"of\":\"net.nanopay.security.PublicKeyEntry\"}"
})