//
//  RegisterClasses.swift
//  NanoFramework
//
//  Created by Michael Carcasole on 2017-09-17.
//  Copyright Â© 2017 nanoPay. All rights reserved.
//

import Foundation

public struct RegisterClases {
  public static func register() {
    Context.GLOBAL.registerClass(cls: FloatParser.classInfo())
    Context.GLOBAL.registerClass(cls: PropertyParser.classInfo())
    Context.GLOBAL.registerClass(cls: ProxyParser.classInfo())
    Context.GLOBAL.registerClass(cls: NullParser.classInfo())
    Context.GLOBAL.registerClass(cls: MapParser.classInfo())
    Context.GLOBAL.registerClass(cls: LongParser.classInfo())
    Context.GLOBAL.registerClass(cls: IntParser.classInfo())
    Context.GLOBAL.registerClass(cls: FObjectParser.classInfo())
    Context.GLOBAL.registerClass(cls: StringPStream.classInfo())
    Context.GLOBAL.registerClass(cls: FObjectParser_.classInfo())
    Context.GLOBAL.registerClass(cls: Seq1.classInfo())
    Context.GLOBAL.registerClass(cls: Optional.classInfo())
    Context.GLOBAL.registerClass(cls: Literal.classInfo())
    Context.GLOBAL.registerClass(cls: Whitespace.classInfo())
    Context.GLOBAL.registerClass(cls: StringParser.classInfo())
    Context.GLOBAL.registerClass(cls: KeyParser.classInfo())
    Context.GLOBAL.registerClass(cls: FObjectArrayParser.classInfo())
    Context.GLOBAL.registerClass(cls: ExprParser.classInfo())
    Context.GLOBAL.registerClass(cls: DateParser.classInfo())
    Context.GLOBAL.registerClass(cls: BooleanParser.classInfo())
    Context.GLOBAL.registerClass(cls: ArrayParser.classInfo())
    Context.GLOBAL.registerClass(cls: AnyParser.classInfo())
    Context.GLOBAL.registerClass(cls: AnyKeyParser.classInfo())
    Context.GLOBAL.registerClass(cls: Outputter.classInfo())
    Context.GLOBAL.registerClass(cls: Fail.classInfo())
    Context.GLOBAL.registerClass(cls: NotChar.classInfo())
    Context.GLOBAL.registerClass(cls: Chars.classInfo())
    Context.GLOBAL.registerClass(cls: Repeat.classInfo())
    Context.GLOBAL.registerClass(cls: Substring.classInfo())
    Context.GLOBAL.registerClass(cls: Seq2.classInfo())
    Context.GLOBAL.registerClass(cls: Seq0.classInfo())
    Context.GLOBAL.registerClass(cls: Seq.classInfo())
    Context.GLOBAL.registerClass(cls: Repeat0.classInfo())
    Context.GLOBAL.registerClass(cls: NotChars.classInfo())
    Context.GLOBAL.registerClass(cls: AnyChar.classInfo())
    Context.GLOBAL.registerClass(cls: Not.classInfo())
    Context.GLOBAL.registerClass(cls: Alt.classInfo())
    Context.GLOBAL.registerClass(cls: SubSlot.classInfo())
    Context.GLOBAL.registerClass(cls: Slot.classInfo())
    Context.GLOBAL.registerClass(cls: PropertySlot.classInfo())
    Context.GLOBAL.registerClass(cls: ExpressionSlot.classInfo())
    Context.GLOBAL.registerClass(cls: ConstantSlot.classInfo())
    Context.GLOBAL.registerClass(cls: ClientTransactionService.classInfo())
    Context.GLOBAL.registerClass(cls: Message.classInfo())
    Context.GLOBAL.registerClass(cls: RPCMessage.classInfo())
    Context.GLOBAL.registerClass(cls: ReplyBox.classInfo())
    Context.GLOBAL.registerClass(cls: ProxyBox.classInfo())
    Context.GLOBAL.registerClass(cls: RPCErrorMessage.classInfo())
    Context.GLOBAL.registerClass(cls: RPCReturnMessage.classInfo())
    Context.GLOBAL.registerClass(cls: TransactionPurpose.classInfo())
    Context.GLOBAL.registerClass(cls: Transaction.classInfo())
    Context.GLOBAL.registerClass(cls: RPCReturnBox.classInfo())
    Context.GLOBAL.registerClass(cls: ClientBoxRegistry.classInfo())
    Context.GLOBAL.registerClass(cls: BoxRegistry.classInfo())
    Context.GLOBAL.registerClass(cls: SubBox.classInfo())
    Context.GLOBAL.registerClass(cls: SubBoxMessage.classInfo())
    Context.GLOBAL.registerClass(cls: NoSuchNameException.classInfo())
    Context.GLOBAL.registerClass(cls: BoxService.classInfo())
    Context.GLOBAL.registerClass(cls: HTTPBox.classInfo())
    Context.GLOBAL.registerClass(cls: HTTPBoxOutputter.classInfo())
    Context.GLOBAL.registerClass(cls: HTTPReplyBox.classInfo())
    Context.GLOBAL.registerClass(cls: BoxContext.classInfo())
    Context.GLOBAL.registerClass(cls: LoggedLookupContext.classInfo())
    Context.GLOBAL.registerClass(cls: ClassWhitelistContext.classInfo())
    Context.GLOBAL.registerClass(cls: NamedBox.classInfo())
    Context.GLOBAL.registerClass(cls: LookupBox.classInfo())
    Context.GLOBAL.registerClass(cls: BoxRegistryBox.classInfo())
    Context.GLOBAL.registerClass(cls: SkeletonBox.classInfo())
    Context.GLOBAL.registerClass(cls: InvalidMessageException.classInfo())
    Context.GLOBAL.registerClass(cls: HelloMessage.classInfo())
  }

}
