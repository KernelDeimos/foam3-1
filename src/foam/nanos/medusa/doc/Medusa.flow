<title>Medusa</title>

<h1>Overview<h1>
Medusa is nanopay’s high availability system.  Offering fault-tolerance, data redundancy, scalability, data protection.

Why does nanopay have to implement their own high availability system?
Industry offerings are centered around traditional databases. Since nanopay employs a journal (or blockchain) for all storage, an in-house solution was required. Additionally, order-of-operations is important and it is not possible to order operations when each DAO is stored in it’s own journal.  A single ordered journal is necessary.

The Medusa system is composed of Mediators and Nodes.  Nodes are responsible for physical data persistence.  Each Node maintains a unique file based blockchain of entries it has received.  Mediators receive and execute Client requests, store the results via the Nodes, and respond to the Client when the results have been stored by a quorum (majority) of Nodes.

<h1>Setup</h1>

See deployment/cluster_1/README.txt or deployment/cluster_2/README.txt for instructions deploying a local cluster of 1+1 or 2+2.

<h1>Features</h1>

<h2>Topics</h2>
<h3>Replay</h3>
Replay is the act of loading a ledger into memory. From a file based journal into an MDAO.
A Mediator monitors for Nodes on the network and requests Replay when the Node is ONLINE.  The Node initiates Batched sending of it's ledger entries to the Mediator.
Replay is considered completed when a Mediator has reached consensus on all ledger entries from a quorum of Nodes.

<h3>Status: ONLINE | OFFLINE<h3>
A Mediator is ONLINE when Replay is complete and the electorate Primary is IN-SESSION.
A Node is ONLINE when it's internal Replay (from ledger to MDAO) is complete.

<h3>Viewing Data</h3>
Presently both the Nodes and Mediators can be logged into with the admin account.
<ul>
  <li>Ledger data is visiable from menu <b>Medusa Entry</b></li>
</ul>
