p({
  "class":"foam.nanos.ruler.Rule",
  "id":"68afcf0c-c718-98f8-0841-75e97a3ad16d29","name":"Pending FX Rate Transactions",
  "priority":100,
  "ruleGroup":"ManualFxTxn",
  "documentation":"Create a FX approval request for FX quote",
  "daoKey":"localTransactionDAO",
  "operation":1,
  "after":true,
  "predicate":{
    "class":"foam.mlang.predicate.And",
    "args":[{
      "class":"foam.mlang.predicate.Eq",
      "arg1":{
        "class":"foam.mlang.expr.Dot",
        "arg1":{
          "class":"foam.mlang.ContextObject",
          "key":"NEW"
        },
        "arg2":{
          "class":"foam.mlang.PredicatedExpr",
          "arg1":{
            "class":"foam.mlang.predicate.IsInstanceOf",
            "targetClass":"net.nanopay.fx.KotakFxTransaction"
      }}},
      "arg2":{
        "class":"foam.mlang.Constant",
        "value":true
    }},{
      "class":"foam.mlang.predicate.Eq",
      "arg1":{
        "class":"foam.mlang.expr.Dot",
        "arg1":{
          "class":"foam.mlang.ContextObject",
          "key":"NEW"
        },
        "arg2":{
          "class":"__Property__",
          "forClass_":"net.nanopay.tx.model.Transaction",
          "name":"status"
      }},
      "arg2":{
        "class":"foam.mlang.Constant",
        "value":{
          "class":"net.nanopay.tx.model.TransactionStatus",
          "ordinal":0
  }}}]},
  "action":{
    "class":"net.nanopay.tx.CreateManualFxRule"
  },
  "enabled":true,
  "saveHistory":false,
  "lifecycleState":1
})
p({
  "class":"foam.nanos.ruler.Rule",
  "id":"68afcf0c-c718-98f8-0841-75e97a3ad16d30","name":"Getting FX Rate for Transactions",
  "priority":100,
  "ruleGroup":"ManualFxTxn",
  "documentation":"Get FX rate if a FX quote is available",
  "daoKey":"approvalRequestDAO",
  "operation":1,
  "after":false,
  "predicate":{
    "class":"foam.mlang.predicate.Eq",
    "arg1":{
      "class":"foam.mlang.expr.Dot",
      "arg1":{
        "class":"foam.mlang.ContextObject",
        "key":"NEW"
      },
      "arg2":{
        "class":"foam.mlang.PredicatedExpr",
        "arg1":{
          "class":"foam.mlang.predicate.IsInstanceOf",
          "targetClass":"net.nanopay.fx.ManualFxApprovalRequest"
    }}},
    "arg2":{
      "class":"foam.mlang.Constant",
      "value":true
  }},
  "action":{
    "class":"net.nanopay.tx.ManualFxRule"
  },
  "enabled":true,
  "saveHistory":false,
  "lifecycleState":1
})
p({
  "class":"foam.nanos.ruler.Rule",
  "id":"68afcf0c-c718-98f8-0841-75e97a3ad16d31",
  "name":"The Jackie Rule1",
  "priority":100,
  "ruleGroup":"compliance",
  "documentation":"when a compliance transaction gets created create an approval request for Jackie",
  "daoKey":"localTransactionDAO",
  "operation":0,
  "after":true,
  "predicate":{"class":"net.nanopay.meter.compliance.ruler.predicate.IsComplianceTransaction"},
  "action":{"class":"net.nanopay.tx.JackieRuleOnCreate"},
  "enabled":true,
  "saveHistory":true,
  "lifecycleState":1
})
p({
  "class":"foam.nanos.ruler.Rule",
  "id":"68afcf0c-c718-98f8-0841-75e97a3ad16d32",
  "name":"The Jackie Rule2",
  "priority":100,
  "ruleGroup":"compliance",
  "documentation":"When a compliance transaction is saved, check if jackie approved it or not.",
  "daoKey":"localTransactionDAO",
  "predicate":{
    "class":"foam.mlang.predicate.And",
    "args":[
      {
        "class":"foam.nanos.ruler.predicate.IsInstancePredicate",
        "of":"net.nanopay.tx.ComplianceTransaction"
      },
      {
        "class":"foam.nanos.ruler.predicate.PropertyEQValue",
        "propName":"status",
        "propValue":{"class":"net.nanopay.tx.model.TransactionStatus","ordinal":0},
        "isNew":true
      }
    ],
  },
  "operation":1,
  "after":false,
  "action":{"class":"net.nanopay.tx.JackieRuleOnPut"},
  "enabled":true,
  "saveHistory":true,
  "lifecycleState":1
})
p({
  "class":"foam.nanos.ruler.Rule",
  "id":"68afcf0c-c718-98f8-0841-75e97a3ad16d33","name":"DebtDestroyer","priority":100,
  "ruleGroup":"FastPay",
  "documentation":"when a CI transaction gets put in complete status for an Ablii FastPay enabled user, create a debtRepaymentTxn",
  "daoKey":"localTransactionDAO",
  "operation":1,
  "after":true,
  "action":{
    "class":"net.nanopay.tx.RepayDebtOnCIRule"
  },
  "enabled":true,
  "lifecycleState":1
})
p({
  "class":"foam.nanos.ruler.Rule",
  "id":"68afcf0c-c718-98f8-0841-75e97a3ad16d34","name":"Proper Status after Pause, Rule",
  "priority":100,
  "ruleGroup":"StatusRules",
  "documentation":"Change PPC to Pending if parent complete",
  "daoKey":"localTransactionDAO",
  "operation":1,
  "action":{
    "class":"net.nanopay.tx.ParentCompleteToPendingRule"
  },
  "after":false,
  "enabled":true,
  "saveHistory":false,
  "lifecycleState":1
})
p({
  "class":"foam.nanos.ruler.Rule",
  "id":"68afcf0c-c718-98f8-0841-75e97a3ad16d35",
  "name":"Set Approved By",
  "priority":100,
  "ruleGroup":"InvoicePayment",
  "documentation":"Set approvedBy property if the payment status is PROCESSING",
  "daoKey":"invoiceDAO",
  "operation":3,
  "after":false,
  "predicate": {
    "class":"foam.mlang.predicate.And",
    "args": [
      {
        "class":"foam.nanos.ruler.predicate.PropertyEQValue",
        "propName":"paymentMethod",
        "propValue": {
          "class": "net.nanopay.invoice.model.PaymentStatus",
          "ordinal": 8
        },
        "isNew":false
      },
      {
        "class":"foam.mlang.predicate.Or",
        "args": [
          {
            "class":"foam.nanos.ruler.predicate.PropertyEQValue",
            "propName":"paymentMethod",
            "propValue": {
              "class": "net.nanopay.invoice.model.PaymentStatus",
              "ordinal": 1
            }
          },
          {
            "class":"foam.nanos.ruler.predicate.PropertyEQValue",
            "propName":"paymentMethod",
            "propValue": {
              "class": "net.nanopay.invoice.model.PaymentStatus",
              "ordinal": 4
            }
          }
        ]
      }
    ]
  },
  "action":{
    "class":"net.nanopay.tx.ruler.InvoiceApprovedByRule"
  },
  "enabled":true,
  "saveHistory":false,
  "lifecycleState":1
})
p({"class":"foam.nanos.ruler.Rule","id":"68afcf0c-c718-98f8-0841-75e97a3ad16d36","name":"SwitchToSlowPay","priority":100,"ruleGroup":"FastPay","documentation":"If we know that fast pay will fail due to nsf in some account, transition to slowpay","daoKey":"localTransactionDAO","operation":1,"after":false,"action":{"class":"net.nanopay.tx.ruler.SlowDownRule"},"enabled":true,"lifecycleState":1})
p({"class":"foam.nanos.ruler.Rule","id":"68afcf0c-c718-98f8-0841-75e97a3ad16d37","name":"Modify Cico Status","priority":100,"ruleGroup":"ModifyCicoStatus","documentation":"When a cico transaction is updated, check if status is SENT and check if ApprovalRequest is Approved, then update transaction status to COMPLETED.","daoKey":"localTransactionDAO","operation":1,"after":false,"predicate":{"class":"foam.mlang.predicate.And","args":[{"class":"net.nanopay.meter.compliance.ruler.predicate.IsSentTransaction"},{"class":"net.nanopay.meter.compliance.ruler.predicate.IsCITransaction"}]},"action":{"class":"net.nanopay.tx.ModifyCicoStatus"},"enabled":true,"saveHistory":true,"lifecycleState":1})
p({"class":"foam.nanos.ruler.Rule","id":"68afcf0c-c718-98f8-0841-75e97a3ad16d38","name":"Create Expedite Aproval Request","priority":100,"ruleGroup":"CreateExpediteApprovalRequest","documentation":"When a cico transaction is created, create an approval request that allows the status to be modified.","daoKey":"localTransactionDAO","operation":0,"after":true,"predicate":{"class":"net.nanopay.meter.compliance.ruler.predicate.IsCITransaction"},"action":{"class":"net.nanopay.tx.CreateExpediteApprovalRequest"},"enabled":true,"saveHistory":true,"lifecycleState":1})
p({"class":"foam.nanos.ruler.Rule","id":"68afcf0c-c718-98f8-0841-75e97a3ad16d39","name":"Prune Cico Approval Cleanup","priority":100,"ruleGroup":"PruneCicoApprovalCleanup","documentation":"Clear pending approval requests for a cico transaction.","daoKey":"localTransactionDAO","operation":1,"after":true,"predicate":{"class":"foam.mlang.predicate.And","args":[{"class":"net.nanopay.meter.compliance.ruler.predicate.IsCompletedTransaction"},{"class":"net.nanopay.meter.compliance.ruler.predicate.IsCITransaction"}]},"action":{"class":"net.nanopay.meter.compliance.ruler.PruneApprovalRequests","objDaoKey":"localTransactionDAO"},"enabled":true,"saveHistory":true,  "lifecycleState":1})
p({"class":"foam.nanos.ruler.Rule","id":"68afcf0c-c718-98f8-0841-75e97a3ad16d40","name":"Account Liquification","priority":100,"ruleGroup":"Liquidity","documentation":"Triggers liquidity settings","daoKey":"localTransactionDAO","operation":3,"after":true,"enabled":true,"action":{"class":"net.nanopay.liquidity.LiquidityRule"},"saveHistory":true,"lifecycleState":1})
p({"class":"foam.nanos.ruler.Rule","id":"68afcf0c-c718-98f8-0841-75e97a3ad16d41","name":"ReverseCashIn","priority":100,"ruleGroup":"ReverseTransactions","documentation":"Reverses Failed and Declined CI Transactions","daoKey":"localTransactionDAO","operation":1,"action":{"class":"net.nanopay.tx.cico.ReverseCIRule"},"after":false,"enabled":true,"saveHistory":true,"lifecycleState":1})
p({"class":"foam.nanos.ruler.Rule","id":"68afcf0c-c718-98f8-0841-75e97a3ad16d42","name":"ReverseCashOut","priority":90,"ruleGroup":"ReverseTransactions","documentation":"Reverses Failed and Declined CO Transactions","daoKey":"localTransactionDAO","operation":1,"action":{"class":"net.nanopay.tx.cico.ReverseCORule"},"after":false,"enabled":true,"saveHistory":true,"lifecycleState":1})
p({"class":"foam.nanos.ruler.Rule","id":"68afcf0c-c718-98f8-0841-75e97a3ad16d43","name":"observeStatus","priority":100,"ruleGroup":"Observer","documentation":"Change the last status field to the current time for all transaction status changes","daoKey":"localTransactionDAO","operation":1,"after":false,"predicate":{"class":"foam.nanos.ruler.predicate.PropertyChangePredicate","observedProperty":"status","observedClass":"net.nanopay.tx.model.Transaction"},"enabled":true,"action":{"class":"foam.nanos.ruler.action.ChangePropertyAction","propName":"lastStatusChange","valueExpr":{"class":"foam.mlang.CurrentTime"}},"lifecycleState":1})
p({
  "class":"foam.nanos.ruler.Rule",
  "id":"68afcf0c-c718-98f8-0841-75e97a3ad16d45","name":"Ablii Completed Transaction Notification",
  "priority":100,
  "ruleGroup":"Notifications",
  "documentation":"Sends a notification to the sender and receiver of the transaction that their ablii payment has been completed.",
  "enabled":true,
  "after":true,
  "daoKey":"localTransactionDAO",
  "operation":0,
  "predicate":{
    "class":"foam.mlang.predicate.And",
    "args":[
      {"class":"net.nanopay.meter.compliance.ruler.predicate.IsCompletedTransaction"},
      {"class":"foam.nanos.ruler.predicate.IsInstancePredicate","of":"net.nanopay.tx.AbliiTransaction"},
      {"class":"foam.nanos.ruler.predicate.PropertyNEQValue","propName":"invoiceId","propValue":0}
  ]},
  "action":{"class":"net.nanopay.tx.ruler.AbliiSendCompletedNotification"},
  "saveHistory":true,
  "lifecycleState":1
})

p({
  "class":"foam.nanos.ruler.Rule",
  "id":"68afcf0c-c718-98f8-0841-75e97a3ad16d46","name":"Ablii FX Completed Transaction Notification",
  "priority":100,
  "ruleGroup":"Notifications",
  "documentation":"Sends a notification to the sender and receiver of the transaction that their ablii FX (through BMO) payment has been completed.",
  "enabled":true,
  "after":true,
  "daoKey":"localTransactionDAO",
  "operation":3,
  "predicate":
    {"class":"foam.mlang.predicate.And",
      "args":[
        {"class":"net.nanopay.meter.compliance.ruler.predicate.IsCompletedTransaction"},
        {"class":"foam.nanos.ruler.predicate.IsInstancePredicate","of":"net.nanopay.fx.FXSummaryTransaction"},
        {"class":"foam.nanos.ruler.predicate.PropertyNEQValue","propName":"invoiceId","propValue":0},
        {"class":"foam.nanos.ruler.predicate.PropertyNEQValue","propName":"status","propValue":{"class":"net.nanopay.tx.model.TransactionStatus","ordinal":5},"isNew":false}
    ]},
  "action":{"class":"net.nanopay.tx.ruler.AbliiSendCompletedNotification"},
  "saveHistory":true,
  "lifecycleState":1
})
p({
  "class":"foam.nanos.ruler.Rule",
  "id":"68afcf0c-c718-98f8-0841-75e97a3ad16d47","name":"Declined Cash In Transaction Notification",
  "priority":100,
  "ruleGroup":"Notifications",
  "documentation":"Sends a notification when a CashIn is declined",
  "enabled":true,
  "after":true,
  "daoKey":"localTransactionDAO",
  "operation":1,
  "predicate":
    {"class":"foam.mlang.predicate.And",
      "args":[
        {"class":"foam.nanos.ruler.predicate.IsInstancePredicate","of":"net.nanopay.tx.cico.CITransaction"},
        {"class":"foam.nanos.ruler.predicate.PropertyEQValue","propName":"status","propValue":{"class":"net.nanopay.tx.model.TransactionStatus","ordinal":4}},
        {"class":"foam.nanos.ruler.predicate.PropertyChangePredicate","propName":"status"}
    ]},
  "action":{"class":"net.nanopay.tx.ruler.SendDeclinedCINotification"},
  "saveHistory":true,
  "lifecycleState":1
})
p({
  "class":"foam.nanos.ruler.Rule",
  "id":"68afcf0c-c718-98f8-0841-75e97a3ad16d48","name":"Declined Verification Transaction Notification",
  "operation":1,
  "priority":100,
  "ruleGroup":"Notifications",
  "documentation":"Sends a Notification to support about a failed verification transaction",
  "daoKey":"localTransactionDAO",
  "after":true,
  "predicate":
    {"class":"foam.mlang.predicate.And",
      "args":[
        {"class":"foam.mlang.predicate.Or",
          "args":[
            {"class":"foam.nanos.ruler.predicate.PropertyEQValue","propName":"status","propValue":{"class":"net.nanopay.tx.model.TransactionStatus","ordinal":4}},
            {"class":"foam.nanos.ruler.predicate.PropertyEQValue","propName":"status","propValue":{"class": "net.nanopay.tx.model.TransactionStatus","ordinal":9}
          }]
        },
        {"class":"foam.nanos.ruler.predicate.IsInstancePredicate","of":"net.nanopay.tx.cico.VerificationTransaction"},
        {"class":"foam.nanos.ruler.predicate.PropertyChangePredicate","propName":"status"}
    ]},
  "action":{
    "class":"foam.nanos.ruler.action.SendNotification",
    "notification":{
      "class":"foam.nanos.notification.Notification",
      "notificationType":"Verification Transaction declined",
      "body":"Verification Transaction was declined",
      "groupId":"support"
    }
  },
  "enabled":true,
  "saveHistory":true,
  "lifecycleState":1
})
p({
  "class":"foam.nanos.ruler.Rule",
  "id":"68afcf0c-c718-98f8-0841-75e97a3ad16d49","name":"Declined Compliance Transaction Notification",
  "operation":1,
  "priority":100,
  "ruleGroup":"Notifications",
  "documentation":"Sends a Notification to support about a failed compliance transaction",
  "daoKey":"localTransactionDAO",
  "after":true,
  "predicate":
    {"class":"foam.mlang.predicate.And",
      "args":[
        {"class":"foam.nanos.ruler.predicate.PropertyEQValue","propName":"status","propValue":{"class":"net.nanopay.tx.model.TransactionStatus","ordinal":4}},
        {"class":"foam.nanos.ruler.predicate.IsInstancePredicate","of":"net.nanopay.tx.ComplianceTransaction"}
    ]},
  "action":{
    "class":"foam.nanos.ruler.action.SendNotification",
    "notification":{
      "class":"foam.nanos.notification.Notification",
      "notificationType":"Compliance Transaction declined",
      "body":"Compliance Transaction was declined",
      "groupId":"support"
    }
  },
  "enabled":true,
  "saveHistory":true,
  "lifecycleState":1
})
p({
  "class":"foam.nanos.ruler.Rule",
  "id":"68afcf0c-c718-98f8-0841-75e97a3ad16d50","name":"statusHistory Update Rule",
  "priority":100,
  "ruleGroup":"StatusHistory",
  "documentation":"When transaction status changes update the status history array with a timestamped entry.",
  "enabled":true,
  "daoKey":"localTransactionDAO",
  "operation":1,
  "predicate":{
    "class":"foam.nanos.ruler.predicate.PropertyChangePredicate",
    "propName":"status"
  },
  "action":{"class":"net.nanopay.tx.ruler.AddStatusHistoryAction"},
  "lifecycleState":1
})

p({
    "class":"foam.nanos.ruler.Rule",
    "id":"68afcf0c-c718-98f8-0841-75e97a3ad16d57","name":"Send email when the micro deposit had failed",
    "priority":100,
    "ruleGroup":"DepositTransacationVerify",
    "documentation":"Send email to business that micro deposit had failed",
    "daoKey":"localTransactionDAO",
    "operation":1,
    "predicate":{
      "class":"foam.mlang.predicate.And",
      "args":[
        {
          "class":"foam.nanos.ruler.predicate.PropertyEQValue",
          "propName":"status",
          "propValue": {
            "class": "net.nanopay.tx.model.TransactionStatus",
            "ordinal":4
          }
        },
        {
          "class":"foam.mlang.predicate.And",
          "args":[
            {
              "class":"foam.nanos.ruler.predicate.PropertyNEQValue",
              "propName":"status",
              "propValue": {
                "class": "net.nanopay.tx.model.TransactionStatus",
                "ordinal":5
              },
              "isNew":false
            },
            {
              "class":"foam.nanos.ruler.predicate.PropertyNEQValue",
              "propName":"status",
              "propValue": {
                "class": "net.nanopay.tx.model.TransactionStatus",
                "ordinal":4
              },
              "isNew":false
            }
          ]
        }
      ]
    },
    "after":true,
    "action":{
        "class":"net.nanopay.tx.ruler.MicroDepositFailed"
    },
    "enabled":true,
    "saveHistory":true,
    "lifecycleState":1
})
p({
    "class":"foam.nanos.ruler.Rule",
    "id":"68afcf0c-c718-98f8-0841-75e97a3ad16d58","name":"Send email when the micro deposit succeeded",
    "priority":100,
    "ruleGroup":"DepositTransacationVerify",
    "documentation":"Send email when micro deposit succeeded",
    "daoKey":"localTransactionDAO",
    "operation":1,
    "predicate":{
      "class":"foam.mlang.predicate.And",
      "args":[
        {
          "class":"foam.nanos.ruler.predicate.PropertyEQValue",
          "propName":"status",
          "propValue": {
            "class": "net.nanopay.tx.model.TransactionStatus",
            "ordinal":5
          }
        },
        {
          "class":"foam.nanos.ruler.predicate.PropertyNEQValue",
          "propName":"status",
          "propValue": {
            "class": "net.nanopay.tx.model.TransactionStatus",
            "ordinal":5
          },
          "isNew":false
        }
      ]
    },
    "after":true,
    "action":{
        "class":"net.nanopay.tx.ruler.MicroDepositSuccessed"
    },
    "enabled":true,
    "saveHistory":true,
    "lifecycleState":1
})
p({
    "class":"foam.nanos.ruler.Rule",
    "id":"68afcf0c-c718-98f8-0841-75e97a3ad16d59","name":"Send email when the micro deposit sent",
    "priority":100,
    "ruleGroup":"DepositTransacationVerify",
    "documentation":"Send email when micro deposit sent",
    "daoKey":"localTransactionDAO",
    "operation":0,
    "predicate":{
      "class":"foam.nanos.ruler.predicate.PropertyEQValue",
      "propName":"status",
      "propValue": {
        "class": "net.nanopay.tx.model.TransactionStatus",
        "ordinal":0
      }
    },
    "after":true,
    "action":{
        "class":"net.nanopay.tx.ruler.MicroDepositSent"
    },
    "enabled":true,
    "saveHistory":true,
    "lifecycleState":1
})
p({
    "class":"foam.nanos.ruler.Rule",
    "id":"68afcf0c-c718-98f8-0841-75e97a3ad16d201","name":"Ascendant fx transaction after put",
    "priority":100,
    "ruleGroup":"Payment",
    "documentation":"Ascendant fx transaction after put",
    "daoKey":"localTransactionDAO",
    "operation":0,
    "predicate":{
      "class":"foam.nanos.ruler.predicate.IsInstancePredicate",
      "of":"net.nanopay.fx.ascendantfx.AscendantFXTransaction"
    },
    "after":true,
    "action":{
      "class":"net.nanopay.tx.ruler.AscendantFXTransactionAfterPutRule"
    },
    "enabled":false,
    "lifecycleState":1
})

p({
    "class":"foam.nanos.ruler.Rule",
    "id":"68afcf0c-c718-98f8-0841-75e97a3ad16d77",
    "name":"Ablii transaction check invoice attached",
    "priority":100,
    "ruleGroup":"Payment",
    "documentation":"Check if Ablii transaction has an invoice attached to it",
    "daoKey":"localTransactionDAO",
    "operation":3,
    "predicate":{
      "class":"foam.mlang.predicate.And",
      "args":[{
        "class":"foam.nanos.ruler.predicate.IsInstancePredicate",
        "of":"net.nanopay.tx.AbliiTransaction"
      },
      {
        "class":"foam.nanos.ruler.predicate.PropertyEQValue",
        "propName":"invoiceId",
        "propValue": null
      }
      ]
    },
    "after":false,
    "action":{
      "class":"net.nanopay.liquidity.tx.ExceptionRuleAction",
      "message":"An invoice for this transaction was not provided."
    },
    "enabled":true,
    "lifecycleState":1
})

p({
    "class":"foam.nanos.ruler.Rule",
    "id":"68afcf0c-c718-98f8-0841-75e97a3ad16d202","name":"Invoice transaction after put",
    "priority":100,
    "ruleGroup":"InvoicePayment",
    "documentation":"Invoice transaction after put",
    "daoKey":"localTransactionDAO",
    "operation":1,
    "predicate":{
      "class":"foam.nanos.ruler.predicate.IsInstancePredicate",
      "of":"net.nanopay.tx.InvoiceTransaction"
    },
    "after":true,
    "action":{
      "class":"net.nanopay.tx.ruler.InvoiceTransactionAfterPutRule"
    },
    "enabled":true,
    "saveHistory":true,
    "lifecycleState":1
})
p({
    "class":"foam.nanos.ruler.Rule",
    "id":"68afcf0c-c718-98f8-0841-75e97a3ad16d203","name":"Send complete retail transaction notification ",
    "priority":100,
    "ruleGroup":"Payment",
    "documentation":"Send notification once retail transaction is complete.",
    "daoKey":"localTransactionDAO",
    "operation":3,
    "predicate":{
      "class":"foam.nanos.ruler.predicate.IsInstancePredicate",
      "of":"net.nanopay.tx.RetailTransaction"
    },
    "after":true,
    "action":{
      "class":"net.nanopay.tx.ruler.SendCompleteRetailTransactionNotificationRule"
    },
    "enabled":true,
    "saveHistory":true,
    "lifecycleState":1
})
p({
  "class":"foam.nanos.ruler.Rule",
  "id":"68afcf0c-c718-98f8-0841-75e97a3ad16d60","name":"Set transaction lifecycleState to PENDING",
  "documentation":"Set transaction lifecycle state to PENDING. Used in liquid to force all transactions going through approval.",
  "ruleGroup":"(Default)",
  "daoKey":"localTransactionDAO",
  "priority":1000,
  "after":false,
  "action":{
    "class":"foam.nanos.ruler.action.ChangePropertyAction",
    "propName":"lifecycleState",
    "valueExpr":{
      "class":"foam.mlang.Constant",
      "value":{
        "class":"foam.nanos.auth.LifecycleState",
        "ordinal":0
      }
    }
  },
  "enabled":false,
  "lifecycleState":1
})

p({
  "class":"foam.nanos.ruler.Rule",
  "id":"68afcf0c-c718-98f8-0841-75e97a3ad16d61","name":"Transaction Auto-Approval",
  "documentation":"Set transaction lifecycle state to ACTIVE.",
  "ruleGroup":"(Default)",
  "daoKey":"localTransactionDAO",
  "priority":1000,
  "after":false,
  "action":{
    "class":"foam.nanos.ruler.action.ChangePropertyAction",
    "propName":"lifecycleState",
    "valueExpr":{
      "class":"foam.mlang.Constant",
      "value":{
        "class":"foam.nanos.auth.LifecycleState",
        "ordinal":1
      }
    }
  },
  "enabled":true,
  "lifecycleState":1
})

p({
  "class":"foam.nanos.ruler.Rule",
  "id":"fd13a701-ed05-438b-a686-8191b9957c42",
  "name":"Transaction Cascading Cancellation",
  "documentation":"Sets all child transactions to cancelled status on status change to cancelled",
  "ruleGroup":"ReverseTransactions",
  "daoKey":"localTransactionDAO",
  "priority":1000,
  "after":true,
  "operation":1,
  "predicate":{
    "class":"foam.mlang.predicate.And",
    "args":[
      {
        "class":"foam.nanos.ruler.predicate.PropertyChangePredicate",
        "propName":"status",
      },
      {
        "class":"foam.nanos.ruler.predicate.PropertyEQValue",
        "propName":"status",
        "propValue": {
          "class": "net.nanopay.tx.model.TransactionStatus",
          "ordinal": 11
        }
      }
    ]
  },
  "action":{
    "class":"net.nanopay.tx.ruler.CascadingCancelAction",
  },
  "enabled":true,
  "lifecycleState":1
})

p({
  "class":"foam.nanos.ruler.Rule",
  "id":"4d6308f4-cb59-11ea-87d0-0242ac130003",
  "name":"transaction verify bank rule",
  "documentation":"set bank account to verified when transaction moves to status: COMPLETED",
  "priority":100,
  "ruleGroup":"Payment",
  "daoKey":"localTransactionDAO",
  "operation":1,
  "after":true,
  "predicate":{
    "class":"foam.mlang.predicate.And",
    "args":[
      {
        "class":"foam.mlang.predicate.Or",
        "args":[
          {
            "class":"foam.nanos.ruler.predicate.IsInstancePredicate",
            "of":"net.nanopay.tx.cico.COTransaction"
          },
          {
            "class":"foam.nanos.ruler.predicate.IsInstancePredicate",
            "of":"net.nanopay.tx.cico.CITransaction"
          },
          {
            "class":"foam.nanos.ruler.predicate.IsInstancePredicate",
            "of":"net.nanopay.fx.afex.AFEXTransaction"
          }
        ]
      },
      {
        "class":"foam.nanos.ruler.predicate.PropertyNEQValue",
        "propName":"status",
        "propValue": {
          "class": "net.nanopay.tx.model.TransactionStatus",
          "ordinal":5
        },
        "isNew":false
      },
      {
        "class":"foam.nanos.ruler.predicate.PropertyEQValue",
        "propName":"status",
        "propValue": {
          "class": "net.nanopay.tx.model.TransactionStatus",
          "ordinal":5
        },
        "isNew":true
      }
    ]
  },
  "action":{
    "class":"net.nanopay.fx.afex.TransactionVerifyBankAccountRule"
  },
  "enabled":true,
  "saveHistory":true,
  "lifecycleState":1
})

p({
  "class":"foam.nanos.ruler.Rule",
  "id":"fad5743c-cd5b-11ea-87d0-0242ac130003",
  "name":"CICO invalid bank account rule",
  "documentation":"Rule to set Bank account to unverified if CI CO transaction failed",
  "priority":100,
  "ruleGroup":"Payment",
  "daoKey":"localTransactionDAO",
  "operation":1,
  "after":true,
  "predicate": {
    "class":"foam.mlang.predicate.And",
    "args":[
      {
        "class":"foam.mlang.predicate.Or",
        "args":[
          {
            "class":"foam.nanos.ruler.predicate.IsInstancePredicate",
            "of":"net.nanopay.tx.cico.COTransaction"
          },
          {
            "class":"foam.nanos.ruler.predicate.IsInstancePredicate",
            "of":"net.nanopay.tx.cico.CITransaction"
          }
        ]
      },
      {
        "class":"foam.nanos.ruler.predicate.PropertyNEQValue",
        "propName":"status",
        "propValue": {
          "class": "net.nanopay.tx.model.TransactionStatus",
          "ordinal":9
        },
        "isNew":false
      },
      {
        "class":"foam.nanos.ruler.predicate.PropertyEQValue",
        "propName":"status",
        "propValue": {
          "class": "net.nanopay.tx.model.TransactionStatus",
          "ordinal":9
        },
        "isNew":true
      }
    ]
  },
  "action":{
    "class":"net.nanopay.tx.ruler.CICOTransactionInvalidBankAccountRule"
  },
  "enabled":true,
  "saveHistory":true,
  "lifecycleState":1
})

p({
    "class":"foam.nanos.ruler.Rule",
    "id":"B11C328F-9572-426D-8373-09BA2DF73114",
    "name":"SummaryTransaction Update Rule",
    "priority":100,
    "ruleGroup":"summaryTransactions",
    "documentation":"Update a summary transaction after transaction put.",
    "daoKey":"localTransactionDAO",
    "operation":3,
    "after":true,
    "predicate":{
      "class":"foam.mlang.predicate.Or",
      "args":[
        {
          "class":"foam.mlang.predicate.And",
          "args":[
            {
              "class":"foam.nanos.ruler.predicate.IsInstancePredicate",
              "of":"net.nanopay.tx.cico.CITransaction"
            },
            {
              "class":"foam.nanos.ruler.predicate.PropertyChangePredicate",
              "propName":"status"
            },
            {
              "class":"foam.nanos.ruler.predicate.PropertyEQValue",
              "propName":"status",
              "propValue": {
                "class": "net.nanopay.tx.model.TransactionStatus",
                "ordinal":3
              }
            }
          ]
        },
        {
          "class":"foam.mlang.predicate.And",
          "args":[
            {
              "class":"foam.nanos.ruler.predicate.IsInstancePredicate",
              "of":"net.nanopay.tx.cico.COTransaction"
            },
            {
              "class":"foam.nanos.ruler.predicate.PropertyChangePredicate",
              "propName":"status"
            },
            {
              "class":"foam.mlang.predicate.Or",
              "args":[
                {
                  "class":"foam.nanos.ruler.predicate.PropertyEQValue",
                  "propName":"status",
                  "propValue": {
                    "class": "net.nanopay.tx.model.TransactionStatus",
                    "ordinal":0
                  }
                },
                {
                  "class":"foam.nanos.ruler.predicate.PropertyEQValue",
                  "propName":"status",
                  "propValue": {
                    "class": "net.nanopay.tx.model.TransactionStatus",
                    "ordinal":3
                  }
                },
                {
                  "class":"foam.nanos.ruler.predicate.PropertyEQValue",
                  "propName":"status",
                  "propValue": {
                    "class": "net.nanopay.tx.model.TransactionStatus",
                    "ordinal":5
                  }
                },
              ]
            }
          ]
        },
      ]
    },
    "action":{
      "class":"net.nanopay.tx.ruler.SummaryTransactionAfterPutRule"
    },
    "enabled":false,
    "saveHistory":false,
    "lifecycleState":1
})

p({
    "class":"foam.nanos.ruler.Rule",
    "id":"B11C328E-9572-426D-8373-09BA2DF73114",
    "name":"Update SummaryTransaction DUGRule",
    "priority":100,
    "ruleGroup":"summaryTransactions",
    "documentation":"Update a DUGRule on summaryTransactionDAO.",
    "daoKey":"ruleDAO",
    "operation":0,
    "after":false,
    "predicate": {
      "class":"foam.mlang.predicate.And",
      "args":[
        {
          "class":"foam.nanos.ruler.predicate.IsInstancePredicate",
          "of":"foam.nanos.dig.DUGRule"
        },
        {
          "class":"foam.nanos.ruler.predicate.PropertyEQValue",
          "propName":"daoKey",
          "propValue": "summaryTransactionDAO",
          "isNew":true
        }
      ]
    },
    "action":{
      "class":"net.nanopay.tx.ruler.SummaryTransactionUpdateDUGRule"
    },
    "enabled":false,
    "saveHistory":false,
    "lifecycleState":1
})
