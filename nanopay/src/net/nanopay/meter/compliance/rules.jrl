p({"class":"foam.nanos.ruler.Rule","id":1000,"name":"Canadian Sanctions","priority":100,"ruleGroup":"signup","documentation":"Check user and business against Canadian Sanctions List","daoKey":"localUserDAO","operation":0,"after":false,"action":{"class":"net.nanopay.meter.compliance.CanadianSanctionValidator"},"enabled":false,"saveHistory":true})
p({"class":"foam.nanos.ruler.Rule","id":1100,"name":"Securefact SIDni","priority":90,"ruleGroup":"onboarding","documentation":"Check user via Securefact SIDni API","daoKey":"localUserDAO","operation":3,"after":false,"predicate":{"class":"net.nanopay.meter.compliance.secureFact.CanadianUserOnboarding"},"asyncAction":{"class":"net.nanopay.meter.compliance.secureFact.sidni.SIDniValidator"},"enabled":false,"saveHistory":true})
p({"class":"foam.nanos.ruler.Rule","id":1101,"name":"Securefact LEV","priority":90,"ruleGroup":"onboarding","documentation":"Check business via Securefact LEV API","daoKey":"localUserDAO","operation":3,"after":false,"predicate":{"class":"net.nanopay.meter.compliance.secureFact.CanadianBusinessOnboarding"},"asyncAction":{"class":"net.nanopay.meter.compliance.secureFact.lev.LEVValidator"},"enabled":false,"saveHistory":true})
p({"class":"foam.nanos.ruler.Rule","id":1200,"name":"IdentityMind Consumer KYC - Signup","priority":100,"ruleGroup":"compliance","documentation":"On user signup, check user via IdentityMind Consumer KYC stage 1.","daoKey":"localUserDAO","operation":0,"after":true,"predicate":{"class":"net.nanopay.meter.compliance.identityMind.predicate.ConsumerKYCStage1"},"asyncAction":{"class":"net.nanopay.meter.compliance.identityMind.ConsumerKYCValidator","stage":1},"enabled":false,"saveHistory":true})
p({"class":"foam.nanos.ruler.Rule","id":1300,"name":"IdentityMind Entity Login Record","priority":100,"ruleGroup":"compliance","documentation":"Check logged in user via IdentityMind Entity Login Record.","daoKey":"loginAttemptDAO","operation":0,"after":true,"predicate":{"class":"net.nanopay.meter.compliance.identityMind.predicate.EntityLogin"},"asyncAction":{"class":"net.nanopay.meter.compliance.identityMind.EntityLoginValidator"},"enabled":false,"saveHistory":true})
p({"class":"foam.nanos.ruler.Rule","id":1400,"name":"IdentityMind Merchant KYC","priority":100,"ruleGroup":"compliance","documentation":"Check business via IdentityMind Merchant KYC.","daoKey":"localUserDAO","operation":3,"after":true,"predicate":{"class":"net.nanopay.meter.compliance.identityMind.predicate.MerchantKYC"},"asyncAction":{"class":"net.nanopay.meter.compliance.identityMind.MerchantKYCValidator"},"enabled":false,"saveHistory":true})
p({"class":"foam.nanos.ruler.Rule","id":1410,"name":"IdentityMind Consumer KYC - Signing officer user updated","priority":100,"ruleGroup":"compliance","documentation":"Check signing officer user via IdentityMind Consumer KYC stage 2 when the user information is updated.","daoKey":"localUserDAO","operation":1,"after":true,"predicate":{"class":"net.nanopay.meter.compliance.identityMind.predicate.ConsumerKYCStage2"},"asyncAction":{"class":"net.nanopay.meter.compliance.identityMind.ConsumerKYCValidator","stage":2},"enabled":false,"saveHistory":true})
p({"class":"foam.nanos.ruler.Rule","id":1420,"name":"IdentityMind Consumer KYC - Beneficial owner","priority":100,"ruleGroup":"compliance","documentation":"Check beneficial owner via IdentityMind Consumer KYC stage 2.","daoKey":"beneficialOwnerDAO","operation":0,"after":true,"asyncAction":{"class":"net.nanopay.meter.compliance.identityMind.ConsumerKYCValidator","stage":2},"enabled":false,"saveHistory":true})
p({"class":"foam.nanos.ruler.Rule","id":1500,"name":"IdentityMind transfer transaction","priority":100,"ruleGroup":"compliance","documentation":"Check bank to bank transaction via IdentityMind","daoKey":"localTransactionDAO","operation":0,"after":false,"predicate":{"class":"net.nanopay.meter.compliance.identityMind.predicate.B2BTransaction"},"action":{"class":"net.nanopay.meter.compliance.identityMind.B2BTransactionValidator"},"enabled":false,"saveHistory":true})
