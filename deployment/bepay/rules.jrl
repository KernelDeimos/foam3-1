p({
  "class":"net.nanopay.tx.planner.IntermediaryDestinationAccountSplitPlanner",
  "id":"119fa381-d2a2-4369-b242-1dc8e2163bb9",
  "intermediaryAccountId":{
    "USD":"35931861-7dd4-4ddb-b3a0-5d091cc82fcf"
  },
  "priority":90,
  "ruleGroup":"BePayPlanner",
  "enabled":true,
  "predicate":{
    "class":"foam.mlang.predicate.And",
    "args":[
      {
        "class":"foam.nanos.ruler.predicate.PropertyEQValue",
        "propName":"parent",
        "propValue":null
      },
      {
        "class":"foam.nanos.ruler.predicate.PropertyIsInstance",
        "propName":"sourceAccount",
        "of":"net.nanopay.bank.BRBankAccount"
      },
      {
        "class":"foam.nanos.ruler.predicate.PropertyIsInstance",
        "propName":"destinationAccount",
        "of":"net.nanopay.bank.BankAccount"
      },
      {
        "class":"foam.nanos.ruler.predicate.PropertyEQValue",
        "propName":"sourceUnit",
        "propValue":"BRL"
      }
    ]
  },
  "lifecycleState":1
})

p({
  "class":"net.nanopay.partner.bepay.tx.planner.BePayTransactionPlanner",
  "id":"2fdd7d35-6704-47dc-9f0e-9419e0aa74ed",
  "name":"BePayTransactionPlanner",
  "documentation":"Planner for transaction from BRL to USD/EUR/GBP (leg 1)",
  "priority":80,
  "ruleGroup":"BePayPlanner",
  "enabled":true,
  "predicate":{
    "class":"foam.mlang.predicate.And",
    "args":[
      {
        "class":"foam.nanos.ruler.predicate.PropertyNEQValue",
        "propName":"parent",
        "propValue": null
      },
      {
        "class":"foam.nanos.ruler.predicate.PropertyIsInstance",
        "propName":"sourceAccount",
        "of":"net.nanopay.bank.BRBankAccount"
      },
      {
        class: "foam.mlang.predicate.Or",
        args: [
          {
            "class":"foam.nanos.ruler.predicate.PropertyIsInstance",
            "propName":"destinationAccount",
            "of":"net.nanopay.bank.USBankAccount"
          },
          {
            "class":"foam.nanos.ruler.predicate.PropertyIsInstance",
            "propName":"destinationAccount",
            "of":"net.nanopay.bank.CABankAccount"
          },
          {
            "class":"foam.nanos.ruler.predicate.PropertyIsInstance",
            "propName":"destinationAccount",
            "of":"net.nanopay.bank.EUBankAccount"
          },
          {
            "class":"foam.nanos.ruler.predicate.PropertyIsInstance",
            "propName":"destinationAccount",
            "of":"net.nanopay.bank.GBBankAccount"
          },
        ]
      },
      {
        "class":"foam.nanos.ruler.predicate.PropertyEQValue",
        "propName":"sourceUnit",
        "propValue":"BRL"
      },
      {
        "class": "net.nanopay.tx.planner.predicate.ProviderPredicate",
        "provider":"BePay"
      }
    ]
  },
  "isFeeOnRootCorridors": true,
  "lifecycleState":1
})
p({
  "class":"foam.nanos.ruler.Rule",
  "id":"afex-crunch-user-onboarding-rule",
  "name":"Onboard User to AFEX",
  "documentation":"Rule to onboard user to AFEX after required afex onboarding capabilities are submitted.",
  "priority":1,
  "ruleGroup":"AFEXCrunchOnboarding",
  "daoKey":"userCapabilityJunctionDAO",
  "operation":3,
  "after":true,
  "predicate":{
    "class":"net.nanopay.crunch.compliance.IsCapabilityOfCertainCategoryAndStatus",
    "status":1,
    "statusChanged":true,
    "category":"AFEXUserOnboarding"
  },
  "action":{"class":"net.nanopay.partner.afex.crunch.AFEXUserOnboardingRule"},
  "enabled":true,
  "saveHistory":true,
  "lifecycleState":1
})

p({
  "class":"foam.nanos.ruler.Rule",
  "id":"bepay-user-compliance-passed-rule",
  "name":"Set User Compliance",
  "documentation":"Rule to set user compliance to passed after required onboarding capabilities are submitted.",
  "priority":1,
  "ruleGroup":"onboarding",
  "daoKey":"userCapabilityJunctionDAO",
  "operation":3,
  "after":true,
  "predicate":{
    "class":"net.nanopay.crunch.compliance.IsCapabilityOfCertainCategoryAndStatus",
    "status":1,
    "statusChanged":true,
    "category":"AFEXUserOnboarding"
  },
  "action":{"class":"net.nanopay.crunch.compliance.SetComplianceOnUser"},
  "enabled":true,
  "saveHistory":true,
  "lifecycleState":1
})
p({
  "class":"net.nanopay.tx.planner.AFEXTransactionPlanner",
  "id":"77480e3b-fc7e-400c-bee6-dda5a22b982a",
  "name":"AFEX Transaction Planner",
  "ruleGroup":"BePayPlanner",
  "predicate":{
    "class":"foam.mlang.predicate.And",
    "args":[
      {
        "class":"foam.nanos.ruler.predicate.PropertyIsInstance",
        "propName":"sourceAccount",
        "of":"net.nanopay.bank.BankAccount"
      },
      {
        "class":"foam.nanos.ruler.predicate.PropertyIsInstance",
        "propName":"destinationAccount",
        "of":"net.nanopay.bank.BankAccount"
      },
      {
        "class":"net.nanopay.tx.planner.predicate.IsAccountOwnerAFEXUserPredicate",
      },
      {
        "class": "net.nanopay.tx.planner.predicate.ProviderPredicate",
        "provider":"AFEX"
      }
    ]
  },
  "lifecycleState":1
})
p({
  "class":"foam.nanos.ruler.Rule",
  "id":"16cebf5b-30b5-4a67-9fbe-d69c93c736e5",
  "name":"Update transaction status based on approval",
  "daoKey":"approvalRequestDAO",
  "ruleGroup":"BePayCompliance",
  "operation":1,
  "predicate": {
    "class": "foam.mlang.predicate.And",
    "args": [
      {
        class: "foam.nanos.ruler.predicate.IsInstancePredicate",
        of:"net.nanopay.meter.compliance.ComplianceApprovalRequest"
      },
      {
        "class":"foam.nanos.ruler.predicate.PropertyEQValue",
        "propName":"daoKey",
        "propValue":"transactionDAO"
      },
      {
        "class": "foam.nanos.ruler.predicate.PropertyChangePredicate",
        "propName": "status"
      },
    ]
  },
  "action":{
    "class":"net.nanopay.tx.ruler.UpdateTxOnApprovalRequestStatusChange",
  },
  "enabled":true,
  "lifecycleState":1
})
