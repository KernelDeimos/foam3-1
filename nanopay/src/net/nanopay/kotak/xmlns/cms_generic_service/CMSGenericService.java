
package net.nanopay.kotak.xmlns.cms_generic_service;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.0-SNAPSHOT
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "CMS_Generic_Service", targetNamespace = "http://xmlns.kotak.com/CMS_Generic_Service", wsdlLocation = "file:/Users/zaczhang/Downloads/kotakWSDL.wsdl")
public class CMSGenericService
    extends Service
{

    private final static URL CMSGENERICSERVICE_WSDL_LOCATION;
    private final static WebServiceException CMSGENERICSERVICE_EXCEPTION;
    private final static QName CMSGENERICSERVICE_QNAME = new QName("http://xmlns.kotak.com/CMS_Generic_Service", "CMS_Generic_Service");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("file:/Users/zaczhang/Downloads/kotakWSDL.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        CMSGENERICSERVICE_WSDL_LOCATION = url;
        CMSGENERICSERVICE_EXCEPTION = e;
    }

    public CMSGenericService() {
        super(__getWsdlLocation(), CMSGENERICSERVICE_QNAME);
    }

    public CMSGenericService(WebServiceFeature... features) {
        super(__getWsdlLocation(), CMSGENERICSERVICE_QNAME, features);
    }

    public CMSGenericService(URL wsdlLocation) {
        super(wsdlLocation, CMSGENERICSERVICE_QNAME);
    }

    public CMSGenericService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, CMSGENERICSERVICE_QNAME, features);
    }

    public CMSGenericService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public CMSGenericService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns WebAPI
     */
    @WebEndpoint(name = "CMS_Generic_WebAPI")
    public WebAPI getCMSGenericWebAPI() {
        return super.getPort(new QName("http://xmlns.kotak.com/CMS_Generic_Service", "CMS_Generic_WebAPI"), WebAPI.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns WebAPI
     */
    @WebEndpoint(name = "CMS_Generic_WebAPI")
    public WebAPI getCMSGenericWebAPI(WebServiceFeature... features) {
        return super.getPort(new QName("http://xmlns.kotak.com/CMS_Generic_Service", "CMS_Generic_WebAPI"), WebAPI.class, features);
    }

    private static URL __getWsdlLocation() {
        if (CMSGENERICSERVICE_EXCEPTION!= null) {
            throw CMSGENERICSERVICE_EXCEPTION;
        }
        return CMSGENERICSERVICE_WSDL_LOCATION;
    }

}
