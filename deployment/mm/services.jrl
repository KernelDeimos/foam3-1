//Medusa Mediate
p({
  "class":"foam.nanos.boot.NSpec",
  "name":"nSpecDAO",
  "serve":true,
  "authenticate": false,
  "serviceClass":"foam.dao.ProxyDAO",
  "client":"{\"of\":\"foam.nanos.boot.NSpec\",\"cache\":true}"
})

//p({"class":"foam.nanos.boot.NSpec", "name":"tcpServer",                        "lazy":false,  "serviceClass":"foam.nanos.mrac.TCPNioServer"})
p({"class":"foam.nanos.boot.NSpec", "name":"quorumService", "lazy":false, "serviceClass":"foam.nanos.mrac.quorum.QuorumService"})
p({
  "class": "foam.nanos.boot.NSpec",
  "name": "cluster",
  "lazy": false,
  "serve": true,
  "authenticate":true,
  "serviceScript": """
    return new foam.dao.EasyDAO.Builder(x)
      .setOf(foam.nanos.mrac.ClusterServerDAO.getOwnClassInfo())
      .setInnerDAO(new foam.nanos.mrac.ClusterServerDAO.Builder(x).build())
      .setCluster(false)
      .setNullify(true)
      .setEnableInterfaceDecorators(false)
      .setRuler(false)
      .setAuthorize(false)
      .build();
  """
})

p({
  "class": "foam.nanos.boot.NSpec",
  "name": "demoObjectDAO",
  "lazy": false,
  "serve": true,
  "serviceScript":
  """
    import foam.dao.*;
    import foam.nanos.demo.DemoObject;
    import foam.nanos.mrac.*;
    MDAO mdao = new MDAO(DemoObject.getOwnClassInfo());
    MMDAO mmdao = new MMDAO(x, "demoObjectDAO", mdao, "singleJournal", "demoObjects");
    ClusterClientDAO clusterClientDAO = new ClusterClientDAO.Builder(x)
                                              .setServiceName("demoObjectDAO")
                                              .setDelegate(mmdao)
                                              .setMdao(mdao)
                                              .build();
    VotingDAO votingDAO = new VotingDAO(x, clusterClientDAO);
    return votingDAO;
  """,
  "client": """
    {
      "of": "foam.nanos.demo.DemoObject"
    }
  """
})
p({
  "class": "foam.nanos.boot.NSpec",
  "name": "nodeStatusDAO",
  "lazy": false,
  "serve": true,
  "authenticate": true,
  "serviceScript": """
    return new foam.nanos.mrac.NodeStatusDAO();
  """,
  "client": """
    {
    "of": "foam.nanos.mrac.NodeStatus"
    }
  """
})