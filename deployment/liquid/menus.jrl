p({
  "class": "foam.nanos.menu.Menu",
  "id": "users",
  "handler": {
    "class": "foam.nanos.menu.DAOMenu2",
    "config": {
      "class": "foam.comics.v2.DAOControllerConfig",
      "daoKey": "userUserDAO",
      "browseTitle": "Users",
      "defaultColumns": ["id", "firstName", "lastName", "jobTitle", "organization", "email"],
      "predicate": {
        "class":"foam.mlang.predicate.And",
        "args": [
          {
            "class": "foam.mlang.predicate.Eq",
            "arg1": {
              "class": "__Property__",
              "forClass_": "foam.nanos.auth.User",
              "name": "lifecycleState"
            },
            "arg2": {
              "class": "foam.mlang.Constant",
              "value": "ACTIVE"
            }
          },
          {
            "class": "foam.mlang.predicate.Eq",
            "arg1": {
              "class": "__Property__",
              "forClass_": "foam.nanos.auth.User",
              "name": "group"
            },
            "arg2": {
              "class": "foam.mlang.Constant",
              "value": "liquidBasic"
            }
          }
        ]
      },
      "browseViews": [
        {
          "class": "foam.comics.v2.namedViews.NamedViewCollection",
          "name": "Users",
          "view": { "class": "foam.nanos.auth.UserDAOBrowserView" }
        }
      ],
      "CRUDEnabledActionsAuth": {
        "class": "foam.comics.v2.CRUDEnabledActionsAuth",
        "isEnabled": true,
        "enabledActionsAuth": {
          "class": "net.nanopay.liquidity.crunch.LiquidEnabledActionsAuth",
          "modelName": "user"
        }
      },
    }
  }
})

p({
  "class": "foam.nanos.menu.Menu",
  "id": "accounts",
  "label": "Accounts",
  "handler":
    {
      "class": "foam.nanos.menu.DAOMenu2",
      "config":
        {
          "class": "foam.comics.v2.DAOControllerConfig",
          "daoKey": "tableViewAccountDAO",
          "cannedQueries": [
            {
              "class": "foam.comics.v2.CannedQuery",
              "label": "All",
              "predicate": {
                "class": "foam.mlang.predicate.And",
                "args": [
                  {
                    "class": "foam.mlang.predicate.Eq",
                    "arg1": {
                      "class": "__Property__",
                      "forClass_": "net.nanopay.account.Account",
                      "name": "lifecycleState"
                    },
                    "arg2": {
                      "class": "foam.mlang.Constant",
                      "value": "ACTIVE"
                    }
                  },
                  {
                    "class": "foam.mlang.predicate.Eq",
                    "arg1": {
                      "class": "__Property__",
                      "forClass_": "net.nanopay.account.Account",
                      "name": "isDefault"
                    },
                    "arg2": {
                      "class": "foam.mlang.Constant",
                      "value": false
                    }
                  },
                  {
                    "class": "foam.mlang.predicate.Or",
                    "args": [
                      {
                        "class": "foam.mlang.predicate.IsInstanceOf",
                        "targetClass": "net.nanopay.account.ShadowAccount"
                      },
                      {
                        "class": "foam.mlang.predicate.IsInstanceOf",
                        "targetClass": "net.nanopay.account.AggregateAccount"
                      },
                      {
                        "class": "foam.mlang.predicate.IsClassOf",
                        "targetClass": "net.nanopay.account.SecuritiesAccount"
                      },
                      {
                        "class": "foam.mlang.predicate.IsClassOf",
                        "targetClass": "net.nanopay.account.DigitalAccount"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "class": "foam.comics.v2.CannedQuery",
              "label": "Shadow Accounts",
              "predicate": {
                "class": "foam.mlang.predicate.And",
                "args": [
                  {
                    "class": "foam.mlang.predicate.IsInstanceOf",
                    "targetClass": "net.nanopay.account.ShadowAccount"
                  },
                  {
                    "class": "foam.mlang.predicate.Eq",
                    "arg1": {
                      "class": "__Property__",
                      "forClass_": "net.nanopay.account.Account",
                      "name": "lifecycleState"
                    },
                    "arg2": {
                      "class": "foam.mlang.Constant",
                      "value": "ACTIVE"
                    }
                  },
                  {
                    "class": "foam.mlang.predicate.Eq",
                    "arg1": {
                      "class": "__Property__",
                      "forClass_": "net.nanopay.account.Account",
                      "name": "isDefault"
                    },
                    "arg2": {
                      "class": "foam.mlang.Constant",
                      "value": false
                    }
                  }
                ]
              }
            },
            {
              "class": "foam.comics.v2.CannedQuery",
              "label": "Aggregate Accounts",
              "predicate": {
                "class": "foam.mlang.predicate.And",
                "args": [
                  {
                    "class": "foam.mlang.predicate.IsInstanceOf",
                    "targetClass": "net.nanopay.account.AggregateAccount"
                  },
                  {
                    "class": "foam.mlang.predicate.Eq",
                    "arg1": {
                      "class": "__Property__",
                      "forClass_": "net.nanopay.account.Account",
                      "name": "lifecycleState"
                    },
                    "arg2": {
                      "class": "foam.mlang.Constant",
                      "value": "ACTIVE"
                    }
                  },
                  {
                    "class": "foam.mlang.predicate.Eq",
                    "arg1": {
                      "class": "__Property__",
                      "forClass_": "net.nanopay.account.Account",
                      "name": "isDefault"
                    },
                    "arg2": {
                      "class": "foam.mlang.Constant",
                      "value": false
                    }
                  }
                ]
              }
            },
            {
              "class": "foam.comics.v2.CannedQuery",
              "label": "Virtual Accounts",
              "predicate": {
                "class": "foam.mlang.predicate.And",
                "args": [
                  {
                    "class": "foam.mlang.predicate.IsClassOf",
                    "targetClass": "net.nanopay.account.DigitalAccount"
                  },
                  {
                    "class": "foam.mlang.predicate.Eq",
                    "arg1": {
                      "class": "__Property__",
                      "forClass_": "net.nanopay.account.Account",
                      "name": "lifecycleState"
                    },
                    "arg2": {
                      "class": "foam.mlang.Constant",
                      "value": "ACTIVE"
                    }
                  },
                  {
                    "class": "foam.mlang.predicate.Eq",
                    "arg1": {
                      "class": "__Property__",
                      "forClass_": "net.nanopay.account.Account",
                      "name": "isDefault"
                    },
                    "arg2": {
                      "class": "foam.mlang.Constant",
                      "value": false
                    }
                  }
                ]
              }
            },
            {
              "class": "foam.comics.v2.CannedQuery",
              "label": "Securities Accounts",
              "predicate": {
                "class": "foam.mlang.predicate.And",
                "args": [
                  {
                    "class": "foam.mlang.predicate.IsInstanceOf",
                    "targetClass": "net.nanopay.account.SecuritiesAccount"
                  },
                  {
                    "class": "foam.mlang.predicate.Eq",
                    "arg1": {
                      "class": "__Property__",
                      "forClass_": "net.nanopay.account.Account",
                      "name": "lifecycleState"
                    },
                    "arg2": {
                      "class": "foam.mlang.Constant",
                      "value": "ACTIVE"
                    }
                  },
                  {
                    "class": "foam.mlang.predicate.Eq",
                    "arg1": {
                      "class": "__Property__",
                      "forClass_": "net.nanopay.account.Account",
                      "name": "isDefault"
                    },
                    "arg2": {
                      "class": "foam.mlang.Constant",
                      "value": false
                    }
                  }
                ]
              }
            }
          ],
          "predicate": {
            "class": "foam.mlang.predicate.Eq",
            "arg1": {
              "class": "__Property__",
              "forClass_": "net.nanopay.account.Account",
              "name": "lifecycleState"
            },
            "arg2": {
              "class": "foam.mlang.Constant",
              "value": 1
            }
          },
          "defaultColumns": [
            "name",
            "balance",
            "homeBalance"
          ],
          "filterExportPredicate": {
            "class": "foam.mlang.predicate.Neq",
            "arg1": {
              "class": "__Property__",
              "forClass_": "foam.nanos.export.ExportDriverRegistry",
              "name": "id"
            },
            "arg2": {
              "class": "foam.mlang.Constant",
              "value": "CSV"
            }
          },
          "CRUDEnabledActionsAuth": {
            "class": "foam.comics.v2.CRUDEnabledActionsAuth",
            "isEnabled": true,
            "enabledActionsAuth": {
              "class": "net.nanopay.liquidity.crunch.LiquidEnabledActionsAuth",
              "modelName": "account"
            }
          }
        }
    }
})

p({
  "class": "foam.nanos.menu.Menu",
  "id": "transactions",
  "label": "Transactions",
  "handler":
    {
      "class": "foam.nanos.menu.DAOMenu2",
      "config":
        {
          "class": "foam.comics.v2.DAOControllerConfig",
          "daoKey": "transactionDAO",
          "editPredicate":{"class":"foam.mlang.predicate.False"},
          "deletePredicate":{"class":"foam.mlang.predicate.False"},
          "defaultColumns": [
            "summary",
            "lastModified",
            "sourceAccount",
            "destinationAccount",
            "destinationCurrency",
            "destinationAmount"
          ],
          "CRUDEnabledActionsAuth": {
            "class": "foam.comics.v2.CRUDEnabledActionsAuth",
            "isEnabled": true,
            "enabledActionsAuth": {
              "class": "net.nanopay.liquidity.crunch.LiquidEnabledActionsAuth",
              "modelName": "transaction"
            }
          },
          "filterExportPredicate":
            {
              "class": "foam.mlang.predicate.Neq",
              "arg1": {
                "class": "__Property__",
                "forClass_": "foam.nanos.export.ExportDriverRegistry",
                "name": "id"
              },
              "arg2": {
                "class": "foam.mlang.Constant",
                "value": "CSV"
              }
            },
          "browseViews": [
            {
              "class": "foam.comics.v2.namedViews.NamedViewCollection",
              "name": "Transactions",
              "view": { "class": "net.nanopay.liquidity.ui.transaction.TransactionDAOBrowserView" }
            }
          ]
        }
    }
})

p({
  "class": "foam.nanos.menu.Menu",
  "id": "liquidity",
  "label": "Liquidity Settings",
  "handler": {
    "class": "foam.nanos.menu.DAOMenu2",
    "config": {
      "class": "foam.comics.v2.DAOControllerConfig",
      "daoKey": "liquiditySettingsDAO",
      "browseTitle": "Liquidity Settings",
      "createTitle": "Create a New Liquidity Setting",
      "predicate": {
        "class": "foam.mlang.predicate.Eq",
        "arg1": {
          "class": "__Property__",
          "forClass_": "net.nanopay.liquidity.LiquiditySettings",
          "name": "lifecycleState"
        },
        "arg2": {
          "class": "foam.mlang.Constant",
          "value": "ACTIVE"
        }
      },
      "CRUDEnabledActionsAuth": {
        "class": "foam.comics.v2.CRUDEnabledActionsAuth",
        "isEnabled": true,
        "enabledActionsAuth": {
          "class": "net.nanopay.liquidity.crunch.LiquidEnabledActionsAuth",
          "modelName": "account"
        }
      },
    }
  }
})

p({
  "class": "foam.nanos.menu.Menu",
  "id": "rules.genericrules",
  "label": "Generic Rules",
  "handler": {
    "class": "foam.nanos.menu.DAOMenu2",
    "config": {
      "class": "foam.comics.v2.DAOControllerConfig",
      "daoKey": "ruleDAO",
      "predicate": {
        "class": "foam.mlang.predicate.And",
        "args": [
          {
            "class": "foam.mlang.predicate.IsInstanceOf",
            "targetClass": "net.nanopay.liquidity.tx.GenericBusinessRule"
          },
          {
            "class": "foam.mlang.predicate.Eq",
            "arg1": {
              "class": "__Property__",
              "forClass_": "net.nanopay.liquidity.tx.BusinessRule",
              "name": "lifecycleState"
            },
            "arg2": {
              "class": "foam.mlang.Constant",
              "value": "ACTIVE"
            }
          }
        ]
      },
      "defaultColumns": [
        "id",
        "name",
        "enabled",
        "businessRuleAction",
        "createdBy"
      ],
      "of": "net.nanopay.liquidity.tx.GenericBusinessRule",
      "CRUDEnabledActionsAuth": {
        "class": "foam.comics.v2.CRUDEnabledActionsAuth",
        "isEnabled": true,
        "enabledActionsAuth": {
          "class": "net.nanopay.liquidity.crunch.LiquidEnabledActionsAuth",
          "modelName": "rule"
        }
      },
    }
  },
  "parent": "rules"
})

p({
  "class": "foam.nanos.menu.Menu",
  "id": "rules.restrictaccountsrules",
  "label": "Restrict Accounts",
  "handler": {
    "class": "foam.nanos.menu.DAOMenu2",
    "config": {
      "class": "foam.comics.v2.DAOControllerConfig",
      "daoKey": "ruleDAO",
      "predicate": {
        "class": "foam.mlang.predicate.And",
        "args": [
          {
            "class": "foam.mlang.predicate.IsInstanceOf",
            "targetClass": "net.nanopay.liquidity.tx.RestrictAccountsRule"
          },
          {
            "class": "foam.mlang.predicate.Eq",
            "arg1": {
              "class": "__Property__",
              "forClass_": "net.nanopay.liquidity.tx.BusinessRule",
              "name": "lifecycleState"
            },
            "arg2": {
              "class": "foam.mlang.Constant",
              "value": "ACTIVE"
            }
          }
        ]
      },
      "defaultColumns": [
        "id",
        "name",
        "enabled",
        "createdBy",
        "sourceAccount",
        "destinationAccount"
      ],
      "of": "net.nanopay.liquidity.tx.RestrictAccountsRule",
      "browseTitle": "Restrict Accounts",
      "createTitle": "Create a New Rule to Restrict Accounts",
      "CRUDEnabledActionsAuth": {
        "class": "foam.comics.v2.CRUDEnabledActionsAuth",
        "isEnabled": true,
        "enabledActionsAuth": {
          "class": "net.nanopay.liquidity.crunch.LiquidEnabledActionsAuth",
          "modelName": "rule"
        }
      }
    }
  },
  "parent": "rules"
})

p({
  "class": "foam.nanos.menu.Menu",
  "id": "rules.restrictusersrules",
  "label": "Restrict Users",
  "handler": {
    "class": "foam.nanos.menu.DAOMenu2",
    "config": {
      "class": "foam.comics.v2.DAOControllerConfig",
      "daoKey": "ruleDAO",
      "predicate": {
        "class": "foam.mlang.predicate.And",
        "args": [
          {
            "class": "foam.mlang.predicate.IsInstanceOf",
            "targetClass": "net.nanopay.liquidity.tx.RestrictUsersRule"
          },
          {
            "class": "foam.mlang.predicate.Eq",
            "arg1": {
              "class": "__Property__",
              "forClass_": "net.nanopay.liquidity.tx.BusinessRule",
              "name": "lifecycleState"
            },
            "arg2": {
              "class": "foam.mlang.Constant",
              "value": "ACTIVE"
            }
          }
        ]
      },
      "defaultColumns": [
        "id",
        "name",
        "enabled",
        "createdBy",
        "sourceUser",
        "destinationUser"
      ],
      "of": "net.nanopay.liquidity.tx.RestrictUsersRule",
      "browseTitle": "Restrict Users",
      "createTitle": "Create a New Rule to Restrict Users",
      "CRUDEnabledActionsAuth": {
        "class": "foam.comics.v2.CRUDEnabledActionsAuth",
        "isEnabled": true,
        "enabledActionsAuth": {
          "class": "net.nanopay.liquidity.crunch.LiquidEnabledActionsAuth",
          "modelName": "rule"
        }
      }
    }
  },
  "parent": "rules"
})

p({
  "class":"foam.nanos.menu.Menu",
  "id":"rules.txapprovaltrules",
  "label":"High Value L2 Rules",
  "handler":{
    "class":"foam.nanos.menu.DAOMenu2",
    "config":{
      "class":"foam.comics.v2.DAOControllerConfig",
      "browseTitle":"High Value L2 Rules",
      "createTitle": "Create a new High Value L2 Rule",
      "daoKey":"ruleDAO",
      "predicate": {
        "class": "foam.mlang.predicate.And",
        "args": [
          {
            "class": "foam.mlang.predicate.IsInstanceOf",
            "targetClass": "net.nanopay.liquidity.tx.L2TransactionApprovalRule"
          },
          {
            "class": "foam.mlang.predicate.Eq",
            "arg1": {
              "class": "__Property__",
              "forClass_": "net.nanopay.liquidity.tx.BusinessRule",
              "name": "lifecycleState"
            },
            "arg2": {
              "class": "foam.mlang.Constant",
              "value": "ACTIVE"
            }
          }
        ]
      },
      "defaultColumns": [
        "id",
        "name",
        "enabled",
        "startAmount"
      ],
      "of": "net.nanopay.liquidity.tx.L2TransactionApprovalRule",
      "CRUDEnabledActionsAuth": {
        "class": "foam.comics.v2.CRUDEnabledActionsAuth",
        "isEnabled": true,
        "enabledActionsAuth": {
          "class": "net.nanopay.liquidity.crunch.LiquidEnabledActionsAuth",
          "modelName": "rule"
        }
      }
    }
  },
  "parent": "rules"
})

p({
  "class": "foam.nanos.menu.Menu",
  "id": "rules.txlimitrules",
  "label": "Transaction Limits",
  "handler": {
    "class": "foam.nanos.menu.DAOMenu2",
    "config": {
      "class": "foam.comics.v2.DAOControllerConfig",
      "daoKey": "ruleDAO",
      "predicate": {
        "class": "foam.mlang.predicate.And",
        "args": [
          {
            "class": "foam.mlang.predicate.IsInstanceOf",
            "targetClass": "net.nanopay.liquidity.tx.TxLimitRule"
          },
          {
            "class": "foam.mlang.predicate.Eq",
            "arg1": {
              "class": "__Property__",
              "forClass_": "net.nanopay.liquidity.tx.TxLimitRule",
              "name": "lifecycleState"
            },
            "arg2": {
              "class": "foam.mlang.Constant",
              "value": "ACTIVE"
            }
          }
        ]
      },
      "defaultColumns": [
        "id",
        "name",
        "enabled",
        "applyLimitTo",
        "send",
        "limit",
        "period"
      ],
      "of": "net.nanopay.liquidity.tx.TxLimitRule",
      "browseTitle": "Transaction Limits",
      "createTitle": "Create a New Transaction Limit",
      "CRUDEnabledActionsAuth": {
        "class": "foam.comics.v2.CRUDEnabledActionsAuth",
        "isEnabled": true,
        "enabledActionsAuth": {
          "class": "net.nanopay.liquidity.crunch.LiquidEnabledActionsAuth",
          "modelName": "rule"
        }
      }
    }
  },
  "parent": "rules"
})

p({
  "class": "foam.nanos.menu.Menu",
  "id": "roles.assigncapability",
  "label": "Role Assignment",
  "handler": {
    "class": "foam.nanos.menu.DAOMenu2",
    "config": {
      "class": "foam.comics.v2.DAOControllerConfig",
      "daoKey": "capabilityRequestDAO",
      "browseTitle": "Role Assignment",
      "createTitle": "Execute a Role Assignment",
      "CRUDEnabledActionsAuth": {
        "class": "foam.comics.v2.CRUDEnabledActionsAuth",
        "isEnabled": true,
        "enabledActionsAuth": {
          "class": "net.nanopay.liquidity.crunch.LiquidEnabledActionsAuth",
          "modelName": "capabilityrequest"
        }
      }
    }
  },
  "parent": "roles"
})

p({
  "class": "foam.nanos.menu.Menu",
  "id": "roles.accountbasedliquidcapabilities",
  "label": "Transactional Roles",
  "handler": {
    "class": "foam.nanos.menu.DAOMenu2",
    "config": {
      "class": "foam.comics.v2.DAOControllerConfig",
      "daoKey": "accountBasedLiquidCapabilityDAO",
      "browseTitle": "Transactional Roles",
      "createTitle": "Create a Transactional Role",
      "predicate": {
        "class": "foam.mlang.predicate.Eq",
        "arg1": {
          "class": "__Property__",
          "forClass_": "net.nanopay.liquidity.crunch.LiquidCapability",
          "name": "lifecycleState"
        },
        "arg2": {
          "class": "foam.mlang.Constant",
          "value": "ACTIVE"
        }
      },
      "CRUDEnabledActionsAuth": {
        "class": "foam.comics.v2.CRUDEnabledActionsAuth",
        "isEnabled": true,
        "enabledActionsAuth": {
          "class": "net.nanopay.liquidity.crunch.LiquidEnabledActionsAuth",
          "modelName": "capability"
        }
      }
    }
  },
  "parent": "roles"
})

p({
  "class": "foam.nanos.menu.Menu",
  "id": "roles.globalliquidcapabilities",
  "label": "Admin Roles",
  "handler": {
    "class": "foam.nanos.menu.DAOMenu2",
    "config": {
      "class": "foam.comics.v2.DAOControllerConfig",
      "daoKey": "globalLiquidCapabilityDAO",
      "browseTitle": "Admin Roles",
      "createTitle": "Create a New Admin Role",
      "predicate": {
        "class": "foam.mlang.predicate.Eq",
        "arg1": {
          "class": "__Property__",
          "forClass_": "net.nanopay.liquidity.crunch.LiquidCapability",
          "name": "lifecycleState"
        },
        "arg2": {
          "class": "foam.mlang.Constant",
          "value": "ACTIVE"
        }
      },
      "CRUDEnabledActionsAuth": {
        "class": "foam.comics.v2.CRUDEnabledActionsAuth",
        "isEnabled": true,
        "enabledActionsAuth": {
          "class": "net.nanopay.liquidity.crunch.LiquidEnabledActionsAuth",
          "modelName": "capability"
        }
      }
    }
  },
  "parent": "roles"
})

// Remove unnecessary menu items
r({
  "class": "foam.nanos.menu.Menu",
  "id": "sme"
})
r({
  "class": "foam.nanos.menu.Menu",
  "id": "operation"
})
r({
  "class": "foam.nanos.menu.Menu",
  "id": "report"
})

// Remove unnecessary right menu items
r({
  "class": "foam.nanos.menu.Menu",
  "id": "set-bus"
})
r({
  "class": "foam.nanos.menu.Menu",
  "id": "set-bank"
})
r({
  "class": "foam.nanos.menu.Menu",
  "id": "set-multi-user"
})
r({
  "class": "foam.nanos.menu.Menu",
  "id": "set-integrate"
})
